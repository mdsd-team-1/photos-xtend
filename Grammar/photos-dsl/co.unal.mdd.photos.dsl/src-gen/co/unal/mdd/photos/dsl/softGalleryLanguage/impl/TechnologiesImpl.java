/**
 * generated by Xtext 2.18.0
 */
package co.unal.mdd.photos.dsl.softGalleryLanguage.impl;

import co.unal.mdd.photos.dsl.softGalleryLanguage.AmazonWebServices;
import co.unal.mdd.photos.dsl.softGalleryLanguage.PostgreSQL;
import co.unal.mdd.photos.dsl.softGalleryLanguage.React;
import co.unal.mdd.photos.dsl.softGalleryLanguage.SoftGalleryLanguagePackage;
import co.unal.mdd.photos.dsl.softGalleryLanguage.Spring;
import co.unal.mdd.photos.dsl.softGalleryLanguage.Technologies;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Technologies</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.TechnologiesImpl#getTechspring <em>Techspring</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.TechnologiesImpl#getTechreact <em>Techreact</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.TechnologiesImpl#getTechpostgresql <em>Techpostgresql</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.TechnologiesImpl#getTechamazon <em>Techamazon</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TechnologiesImpl extends MinimalEObjectImpl.Container implements Technologies
{
  /**
   * The cached value of the '{@link #getTechspring() <em>Techspring</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTechspring()
   * @generated
   * @ordered
   */
  protected EList<Spring> techspring;

  /**
   * The cached value of the '{@link #getTechreact() <em>Techreact</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTechreact()
   * @generated
   * @ordered
   */
  protected EList<React> techreact;

  /**
   * The cached value of the '{@link #getTechpostgresql() <em>Techpostgresql</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTechpostgresql()
   * @generated
   * @ordered
   */
  protected EList<PostgreSQL> techpostgresql;

  /**
   * The cached value of the '{@link #getTechamazon() <em>Techamazon</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTechamazon()
   * @generated
   * @ordered
   */
  protected EList<AmazonWebServices> techamazon;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TechnologiesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SoftGalleryLanguagePackage.Literals.TECHNOLOGIES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Spring> getTechspring()
  {
    if (techspring == null)
    {
      techspring = new EObjectContainmentEList<Spring>(Spring.class, this, SoftGalleryLanguagePackage.TECHNOLOGIES__TECHSPRING);
    }
    return techspring;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<React> getTechreact()
  {
    if (techreact == null)
    {
      techreact = new EObjectContainmentEList<React>(React.class, this, SoftGalleryLanguagePackage.TECHNOLOGIES__TECHREACT);
    }
    return techreact;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PostgreSQL> getTechpostgresql()
  {
    if (techpostgresql == null)
    {
      techpostgresql = new EObjectContainmentEList<PostgreSQL>(PostgreSQL.class, this, SoftGalleryLanguagePackage.TECHNOLOGIES__TECHPOSTGRESQL);
    }
    return techpostgresql;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AmazonWebServices> getTechamazon()
  {
    if (techamazon == null)
    {
      techamazon = new EObjectContainmentEList<AmazonWebServices>(AmazonWebServices.class, this, SoftGalleryLanguagePackage.TECHNOLOGIES__TECHAMAZON);
    }
    return techamazon;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHSPRING:
        return ((InternalEList<?>)getTechspring()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHREACT:
        return ((InternalEList<?>)getTechreact()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHPOSTGRESQL:
        return ((InternalEList<?>)getTechpostgresql()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHAMAZON:
        return ((InternalEList<?>)getTechamazon()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHSPRING:
        return getTechspring();
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHREACT:
        return getTechreact();
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHPOSTGRESQL:
        return getTechpostgresql();
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHAMAZON:
        return getTechamazon();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHSPRING:
        getTechspring().clear();
        getTechspring().addAll((Collection<? extends Spring>)newValue);
        return;
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHREACT:
        getTechreact().clear();
        getTechreact().addAll((Collection<? extends React>)newValue);
        return;
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHPOSTGRESQL:
        getTechpostgresql().clear();
        getTechpostgresql().addAll((Collection<? extends PostgreSQL>)newValue);
        return;
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHAMAZON:
        getTechamazon().clear();
        getTechamazon().addAll((Collection<? extends AmazonWebServices>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHSPRING:
        getTechspring().clear();
        return;
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHREACT:
        getTechreact().clear();
        return;
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHPOSTGRESQL:
        getTechpostgresql().clear();
        return;
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHAMAZON:
        getTechamazon().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHSPRING:
        return techspring != null && !techspring.isEmpty();
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHREACT:
        return techreact != null && !techreact.isEmpty();
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHPOSTGRESQL:
        return techpostgresql != null && !techpostgresql.isEmpty();
      case SoftGalleryLanguagePackage.TECHNOLOGIES__TECHAMAZON:
        return techamazon != null && !techamazon.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //TechnologiesImpl
