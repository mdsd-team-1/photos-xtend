/**
 * generated by Xtext 2.17.1
 */
package co.unal.mdd.photos.dsl.softGalleryLanguage.impl;

import co.unal.mdd.photos.dsl.softGalleryLanguage.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SoftGalleryLanguageFactoryImpl extends EFactoryImpl implements SoftGalleryLanguageFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static SoftGalleryLanguageFactory init()
  {
    try
    {
      SoftGalleryLanguageFactory theSoftGalleryLanguageFactory = (SoftGalleryLanguageFactory)EPackage.Registry.INSTANCE.getEFactory(SoftGalleryLanguagePackage.eNS_URI);
      if (theSoftGalleryLanguageFactory != null)
      {
        return theSoftGalleryLanguageFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new SoftGalleryLanguageFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SoftGalleryLanguageFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case SoftGalleryLanguagePackage.MODEL: return createModel();
      case SoftGalleryLanguagePackage.DOMAIN: return createDomain();
      case SoftGalleryLanguagePackage.ENTITY: return createEntity();
      case SoftGalleryLanguagePackage.ENTITIES: return createEntities();
      case SoftGalleryLanguagePackage.PHOTO: return createPhoto();
      case SoftGalleryLanguagePackage.ALBUM: return createAlbum();
      case SoftGalleryLanguagePackage.USER_DOMAIN: return createUserDomain();
      case SoftGalleryLanguagePackage.FUNCTIONALITY: return createFunctionality();
      case SoftGalleryLanguagePackage.FUNCTIONALITIES: return createFunctionalities();
      case SoftGalleryLanguagePackage.PROFILE_MANAGEMENT: return createProfileManagement();
      case SoftGalleryLanguagePackage.PROFILE_MANAGEMENT_FUNCTIONS: return createProfileManagementFunctions();
      case SoftGalleryLanguagePackage.APP_ACCESS: return createAppAccess();
      case SoftGalleryLanguagePackage.APP_ACCESS_FUNCTIONS: return createAppAccessFunctions();
      case SoftGalleryLanguagePackage.ALBUM_MANAGEMENT: return createAlbumManagement();
      case SoftGalleryLanguagePackage.ALBUM_MANAGEMENT_FUNCTIONS: return createAlbumManagementFunctions();
      case SoftGalleryLanguagePackage.PHOTO_ACTIONS: return createPhotoActions();
      case SoftGalleryLanguagePackage.PHOTO_ACTIONS_FUNCTIONS: return createPhotoActionsFunctions();
      case SoftGalleryLanguagePackage.LANDING_ACTIONS: return createLandingActions();
      case SoftGalleryLanguagePackage.LANDING_FUNCTIONS: return createLandingFunctions();
      case SoftGalleryLanguagePackage.DOMAIN_CONNECTION: return createDomainConnection();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS: return createDomainRelations();
      case SoftGalleryLanguagePackage.ARCHITECTURE: return createArchitecture();
      case SoftGalleryLanguagePackage.NTIERS: return createNTiers();
      case SoftGalleryLanguagePackage.LAYER: return createLayer();
      case SoftGalleryLanguagePackage.PRESENTATION_LAYER: return createPresentationLayer();
      case SoftGalleryLanguagePackage.PRESENTATION_CONTENT: return createPresentationContent();
      case SoftGalleryLanguagePackage.PRESENTATION_SEGMENTS: return createPresentationSegments();
      case SoftGalleryLanguagePackage.BUSINESS_LOGIC_LAYER: return createBusinessLogicLayer();
      case SoftGalleryLanguagePackage.BUSINESS_LOGIC_CONTENT: return createBusinessLogicContent();
      case SoftGalleryLanguagePackage.BUSINESS_LOGIC_SEGMENTS: return createBusinessLogicSegments();
      case SoftGalleryLanguagePackage.DATA_PERSISTENCE_LAYER: return createDataPersistenceLayer();
      case SoftGalleryLanguagePackage.DATA_PERSISTENCE_CONTENT: return createDataPersistenceContent();
      case SoftGalleryLanguagePackage.DATA_PERSISTENCE_SEGMENTS: return createDataPersistenceSegments();
      case SoftGalleryLanguagePackage.SEGMENT_STRUCTURE: return createSegmentStructure();
      case SoftGalleryLanguagePackage.SEGMENT_STRUCTURE_CONTENT: return createSegmentStructureContent();
      case SoftGalleryLanguagePackage.DIRECTORY_CONTENT: return createDirectoryContent();
      case SoftGalleryLanguagePackage.DIRECTORIES: return createDirectories();
      case SoftGalleryLanguagePackage.SINGLE_FILE: return createSingleFile();
      case SoftGalleryLanguagePackage.MULTIPLE_FILE: return createMultipleFile();
      case SoftGalleryLanguagePackage.LAYER_RELATIONS: return createLayerRelations();
      case SoftGalleryLanguagePackage.LAYER_SOURCE: return createLayerSource();
      case SoftGalleryLanguagePackage.LAYER_TARGET: return createLayerTarget();
      case SoftGalleryLanguagePackage.ARCHITECTURE_COMPONENTS: return createArchitectureComponents();
      case SoftGalleryLanguagePackage.FRONT_END: return createFrontEnd();
      case SoftGalleryLanguagePackage.BACK_END: return createBackEnd();
      case SoftGalleryLanguagePackage.PERSISTENCE_DATA_COMPONENT: return createPersistenceDataComponent();
      case SoftGalleryLanguagePackage.NTIERS_CONNECTIONS: return createNTiersConnections();
      case SoftGalleryLanguagePackage.NTIER_CONNECTION_CONTENT: return createNTierConnectionContent();
      case SoftGalleryLanguagePackage.NTIER_SOURCE: return createNTierSource();
      case SoftGalleryLanguagePackage.NTIER_TARGET: return createNTierTarget();
      case SoftGalleryLanguagePackage.NTIERS_RELATIONS: return createNTiersRelations();
      case SoftGalleryLanguagePackage.TECHNOLOGY: return createTechnology();
      case SoftGalleryLanguagePackage.TECHNOLOGIES: return createTechnologies();
      case SoftGalleryLanguagePackage.SPRING: return createSpring();
      case SoftGalleryLanguagePackage.SPRING_BOOT_APPLICATION: return createSpringBootApplication();
      case SoftGalleryLanguagePackage.CONFIGURATION: return createConfiguration();
      case SoftGalleryLanguagePackage.ENABLE_GLOBAL_METHOD_SECURITY: return createEnableGlobalMethodSecurity();
      case SoftGalleryLanguagePackage.ENABLE_AUTHORIZATION_SERVER: return createEnableAuthorizationServer();
      case SoftGalleryLanguagePackage.ENABLE_RESOURCE_SERVER: return createEnableResourceServer();
      case SoftGalleryLanguagePackage.ENABLE_WEB_SECURITY: return createEnableWebSecurity();
      case SoftGalleryLanguagePackage.SPRING_COMPONENT: return createSpringComponent();
      case SoftGalleryLanguagePackage.ORDER_SPRING: return createOrderSpring();
      case SoftGalleryLanguagePackage.SPRING_REPOSITORY: return createSpringRepository();
      case SoftGalleryLanguagePackage.SPRING_REPOSITORIES: return createSpringRepositories();
      case SoftGalleryLanguagePackage.REST_CONTROLLER: return createRestController();
      case SoftGalleryLanguagePackage.SPECIFICATION: return createSpecification();
      case SoftGalleryLanguagePackage.PREDICATE: return createPredicate();
      case SoftGalleryLanguagePackage.SEARCH_CRITERIA: return createSearchCriteria();
      case SoftGalleryLanguagePackage.AUTOWIRED: return createAutowired();
      case SoftGalleryLanguagePackage.AUTOWIRED_TYPE: return createAutowiredType();
      case SoftGalleryLanguagePackage.REQUEST_MAPPING: return createRequestMapping();
      case SoftGalleryLanguagePackage.REQUEST_PART: return createRequestPart();
      case SoftGalleryLanguagePackage.REQUEST_MAPPING_TYPE: return createRequestMappingType();
      case SoftGalleryLanguagePackage.EXCEPTION_HANDLER: return createExceptionHandler();
      case SoftGalleryLanguagePackage.EXCEPTION_PROCESS: return createExceptionProcess();
      case SoftGalleryLanguagePackage.SPRING_ENTITY: return createSpringEntity();
      case SoftGalleryLanguagePackage.SPRING_TABLE: return createSpringTable();
      case SoftGalleryLanguagePackage.SPRING_TABLE_ID: return createSpringTableId();
      case SoftGalleryLanguagePackage.GENERATED_VALUE: return createGeneratedValue();
      case SoftGalleryLanguagePackage.COLUMNS: return createColumns();
      case SoftGalleryLanguagePackage.NAME_NATIVE_QUERY: return createNameNativeQuery();
      case SoftGalleryLanguagePackage.REACT: return createReact();
      case SoftGalleryLanguagePackage.REACT_MODULES: return createReactModules();
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES: return createReactSubModules();
      case SoftGalleryLanguagePackage.REACT_CONFIGURATION: return createReactConfiguration();
      case SoftGalleryLanguagePackage.REACT_DEPENDENCIES: return createReactDependencies();
      case SoftGalleryLanguagePackage.REACT_DEPENDENCIES_RULES: return createReactDependenciesRules();
      case SoftGalleryLanguagePackage.REACT_DEPENDENCIES_SUB_RULES: return createReactDependenciesSubRules();
      case SoftGalleryLanguagePackage.SINGLE_DEPENDENCIES: return createSingleDependencies();
      case SoftGalleryLanguagePackage.PACKAGE_NAME: return createPackageName();
      case SoftGalleryLanguagePackage.PACKAGE_VERSION: return createPackageVersion();
      case SoftGalleryLanguagePackage.REACT_CONFIGURATIONS: return createReactConfigurations();
      case SoftGalleryLanguagePackage.DOM_CONFIGURATIONS: return createDOMConfigurations();
      case SoftGalleryLanguagePackage.REACT_COMPONENTS: return createReactComponents();
      case SoftGalleryLanguagePackage.COMPONENTS_LOGIC: return createComponentsLogic();
      case SoftGalleryLanguagePackage.LOGIC_CONTENT: return createLogicContent();
      case SoftGalleryLanguagePackage.LOGIC_STRUCTURE: return createLogicStructure();
      case SoftGalleryLanguagePackage.COMPONENTS_UI: return createComponentsUI();
      case SoftGalleryLanguagePackage.UI_CONTENT: return createUIContent();
      case SoftGalleryLanguagePackage.VIEW_COMPONENT_CONT: return createViewComponentCont();
      case SoftGalleryLanguagePackage.SUBCOMPONENT_CONT: return createSubcomponentCont();
      case SoftGalleryLanguagePackage.COMPONENT_CLASS: return createComponentClass();
      case SoftGalleryLanguagePackage.REACT_IMPORTS: return createReactImports();
      case SoftGalleryLanguagePackage.REACT_IMPORT_CONTENT: return createReactImportContent();
      case SoftGalleryLanguagePackage.REACT_FUNCTIONS: return createReactFunctions();
      case SoftGalleryLanguagePackage.REACT_CONSTRUCTOR: return createReactConstructor();
      case SoftGalleryLanguagePackage.STATE: return createState();
      case SoftGalleryLanguagePackage.STATE_CONTENT: return createStateContent();
      case SoftGalleryLanguagePackage.CORE_FUNCTIONS_DECLARATION: return createCoreFunctionsDeclaration();
      case SoftGalleryLanguagePackage.PROPS: return createProps();
      case SoftGalleryLanguagePackage.PROPS_TYPE: return createPropsType();
      case SoftGalleryLanguagePackage.REACT_CORE_FUNCTIONS: return createReactCoreFunctions();
      case SoftGalleryLanguagePackage.REACT_ACTIONS: return createReactActions();
      case SoftGalleryLanguagePackage.REACT_ACTIONS_CONTENT: return createReactActionsContent();
      case SoftGalleryLanguagePackage.REACT_SERVICES_TYPE: return createReactServicesType();
      case SoftGalleryLanguagePackage.REACT_SERVICES_RELATION: return createReactServicesRelation();
      case SoftGalleryLanguagePackage.REACTS_RELATION_SERV: return createReactsRelationServ();
      case SoftGalleryLanguagePackage.REACT_LIBRARIES: return createReactLibraries();
      case SoftGalleryLanguagePackage.REACT_LIBRARY: return createReactLibrary();
      case SoftGalleryLanguagePackage.REACT_INFO: return createReactInfo();
      case SoftGalleryLanguagePackage.REACT_INFORMATION: return createReactInformation();
      case SoftGalleryLanguagePackage.POSTGRE_SQL: return createPostgreSQL();
      case SoftGalleryLanguagePackage.CLUSTER: return createCluster();
      case SoftGalleryLanguagePackage.DATABASE: return createDatabase();
      case SoftGalleryLanguagePackage.SCHEMA: return createSchema();
      case SoftGalleryLanguagePackage.INDEX_P: return createIndex_p();
      case SoftGalleryLanguagePackage.VIEW_SCHEMA: return createViewSchema();
      case SoftGalleryLanguagePackage.TABLE_P: return createTable_p();
      case SoftGalleryLanguagePackage.FOREIGN_KEY: return createForeignKey();
      case SoftGalleryLanguagePackage.FOREIGN_KEY_N: return createForeignKey_n();
      case SoftGalleryLanguagePackage.FOREIGN_KEY_REF: return createForeignKeyRef();
      case SoftGalleryLanguagePackage.REF_TABLE_P: return createRefTable_p();
      case SoftGalleryLanguagePackage.COLUMN: return createColumn();
      case SoftGalleryLanguagePackage.DATATYPE_DB: return createDatatypeDB();
      case SoftGalleryLanguagePackage.CONSTRAINT: return createConstraint();
      case SoftGalleryLanguagePackage.ROW: return createRow();
      case SoftGalleryLanguagePackage.POLICY: return createPolicy();
      case SoftGalleryLanguagePackage.TRIGGER: return createTrigger();
      case SoftGalleryLanguagePackage.FUNCTION: return createFunction();
      case SoftGalleryLanguagePackage.POSTGRES_USER: return createPostgresUser();
      case SoftGalleryLanguagePackage.PRIVILEGE: return createPrivilege();
      case SoftGalleryLanguagePackage.QUERY: return createQuery();
      case SoftGalleryLanguagePackage.CLAUSE: return createClause();
      case SoftGalleryLanguagePackage.AMAZON_WEB_SERVICES: return createAmazonWebServices();
      case SoftGalleryLanguagePackage.AMAZON_SIMPLE_STORAGE_SERVICE: return createAmazonSimpleStorageService();
      case SoftGalleryLanguagePackage.BATCH_OPERATION: return createBatchOperation();
      case SoftGalleryLanguagePackage.BUCKET: return createBucket();
      case SoftGalleryLanguagePackage.BUCKET_ACCESS: return createBucketAccess();
      case SoftGalleryLanguagePackage.PUBLIC_ACCESS: return createPublicAccess();
      case SoftGalleryLanguagePackage.OBJECTS_PUBLIC: return createObjectsPublic();
      case SoftGalleryLanguagePackage.BUCKET_OBJECTS_NOT_PUBLIC: return createBucketObjectsNotPublic();
      case SoftGalleryLanguagePackage.ONLY_AUTHORIZED: return createOnlyAuthorized();
      case SoftGalleryLanguagePackage.AMAZON_FOLDER: return createAmazonFolder();
      case SoftGalleryLanguagePackage.AMAZON_FILE: return createAmazonFile();
      case SoftGalleryLanguagePackage.METADATA: return createMetadata();
      case SoftGalleryLanguagePackage.AMAZON_ELASTIC_COMPUTE_CLOUD: return createAmazonElasticComputeCloud();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Domain createDomain()
  {
    DomainImpl domain = new DomainImpl();
    return domain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entity createEntity()
  {
    EntityImpl entity = new EntityImpl();
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entities createEntities()
  {
    EntitiesImpl entities = new EntitiesImpl();
    return entities;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Photo createPhoto()
  {
    PhotoImpl photo = new PhotoImpl();
    return photo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Album createAlbum()
  {
    AlbumImpl album = new AlbumImpl();
    return album;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UserDomain createUserDomain()
  {
    UserDomainImpl userDomain = new UserDomainImpl();
    return userDomain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Functionality createFunctionality()
  {
    FunctionalityImpl functionality = new FunctionalityImpl();
    return functionality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Functionalities createFunctionalities()
  {
    FunctionalitiesImpl functionalities = new FunctionalitiesImpl();
    return functionalities;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProfileManagement createProfileManagement()
  {
    ProfileManagementImpl profileManagement = new ProfileManagementImpl();
    return profileManagement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProfileManagementFunctions createProfileManagementFunctions()
  {
    ProfileManagementFunctionsImpl profileManagementFunctions = new ProfileManagementFunctionsImpl();
    return profileManagementFunctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AppAccess createAppAccess()
  {
    AppAccessImpl appAccess = new AppAccessImpl();
    return appAccess;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AppAccessFunctions createAppAccessFunctions()
  {
    AppAccessFunctionsImpl appAccessFunctions = new AppAccessFunctionsImpl();
    return appAccessFunctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AlbumManagement createAlbumManagement()
  {
    AlbumManagementImpl albumManagement = new AlbumManagementImpl();
    return albumManagement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AlbumManagementFunctions createAlbumManagementFunctions()
  {
    AlbumManagementFunctionsImpl albumManagementFunctions = new AlbumManagementFunctionsImpl();
    return albumManagementFunctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PhotoActions createPhotoActions()
  {
    PhotoActionsImpl photoActions = new PhotoActionsImpl();
    return photoActions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PhotoActionsFunctions createPhotoActionsFunctions()
  {
    PhotoActionsFunctionsImpl photoActionsFunctions = new PhotoActionsFunctionsImpl();
    return photoActionsFunctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LandingActions createLandingActions()
  {
    LandingActionsImpl landingActions = new LandingActionsImpl();
    return landingActions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LandingFunctions createLandingFunctions()
  {
    LandingFunctionsImpl landingFunctions = new LandingFunctionsImpl();
    return landingFunctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DomainConnection createDomainConnection()
  {
    DomainConnectionImpl domainConnection = new DomainConnectionImpl();
    return domainConnection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DomainRelations createDomainRelations()
  {
    DomainRelationsImpl domainRelations = new DomainRelationsImpl();
    return domainRelations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Architecture createArchitecture()
  {
    ArchitectureImpl architecture = new ArchitectureImpl();
    return architecture;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NTiers createNTiers()
  {
    NTiersImpl nTiers = new NTiersImpl();
    return nTiers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Layer createLayer()
  {
    LayerImpl layer = new LayerImpl();
    return layer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PresentationLayer createPresentationLayer()
  {
    PresentationLayerImpl presentationLayer = new PresentationLayerImpl();
    return presentationLayer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PresentationContent createPresentationContent()
  {
    PresentationContentImpl presentationContent = new PresentationContentImpl();
    return presentationContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PresentationSegments createPresentationSegments()
  {
    PresentationSegmentsImpl presentationSegments = new PresentationSegmentsImpl();
    return presentationSegments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BusinessLogicLayer createBusinessLogicLayer()
  {
    BusinessLogicLayerImpl businessLogicLayer = new BusinessLogicLayerImpl();
    return businessLogicLayer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BusinessLogicContent createBusinessLogicContent()
  {
    BusinessLogicContentImpl businessLogicContent = new BusinessLogicContentImpl();
    return businessLogicContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BusinessLogicSegments createBusinessLogicSegments()
  {
    BusinessLogicSegmentsImpl businessLogicSegments = new BusinessLogicSegmentsImpl();
    return businessLogicSegments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataPersistenceLayer createDataPersistenceLayer()
  {
    DataPersistenceLayerImpl dataPersistenceLayer = new DataPersistenceLayerImpl();
    return dataPersistenceLayer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataPersistenceContent createDataPersistenceContent()
  {
    DataPersistenceContentImpl dataPersistenceContent = new DataPersistenceContentImpl();
    return dataPersistenceContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataPersistenceSegments createDataPersistenceSegments()
  {
    DataPersistenceSegmentsImpl dataPersistenceSegments = new DataPersistenceSegmentsImpl();
    return dataPersistenceSegments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SegmentStructure createSegmentStructure()
  {
    SegmentStructureImpl segmentStructure = new SegmentStructureImpl();
    return segmentStructure;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SegmentStructureContent createSegmentStructureContent()
  {
    SegmentStructureContentImpl segmentStructureContent = new SegmentStructureContentImpl();
    return segmentStructureContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DirectoryContent createDirectoryContent()
  {
    DirectoryContentImpl directoryContent = new DirectoryContentImpl();
    return directoryContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Directories createDirectories()
  {
    DirectoriesImpl directories = new DirectoriesImpl();
    return directories;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SingleFile createSingleFile()
  {
    SingleFileImpl singleFile = new SingleFileImpl();
    return singleFile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MultipleFile createMultipleFile()
  {
    MultipleFileImpl multipleFile = new MultipleFileImpl();
    return multipleFile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LayerRelations createLayerRelations()
  {
    LayerRelationsImpl layerRelations = new LayerRelationsImpl();
    return layerRelations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LayerSource createLayerSource()
  {
    LayerSourceImpl layerSource = new LayerSourceImpl();
    return layerSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LayerTarget createLayerTarget()
  {
    LayerTargetImpl layerTarget = new LayerTargetImpl();
    return layerTarget;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArchitectureComponents createArchitectureComponents()
  {
    ArchitectureComponentsImpl architectureComponents = new ArchitectureComponentsImpl();
    return architectureComponents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FrontEnd createFrontEnd()
  {
    FrontEndImpl frontEnd = new FrontEndImpl();
    return frontEnd;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BackEnd createBackEnd()
  {
    BackEndImpl backEnd = new BackEndImpl();
    return backEnd;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PersistenceDataComponent createPersistenceDataComponent()
  {
    PersistenceDataComponentImpl persistenceDataComponent = new PersistenceDataComponentImpl();
    return persistenceDataComponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NTiersConnections createNTiersConnections()
  {
    NTiersConnectionsImpl nTiersConnections = new NTiersConnectionsImpl();
    return nTiersConnections;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NTierConnectionContent createNTierConnectionContent()
  {
    NTierConnectionContentImpl nTierConnectionContent = new NTierConnectionContentImpl();
    return nTierConnectionContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NTierSource createNTierSource()
  {
    NTierSourceImpl nTierSource = new NTierSourceImpl();
    return nTierSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NTierTarget createNTierTarget()
  {
    NTierTargetImpl nTierTarget = new NTierTargetImpl();
    return nTierTarget;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NTiersRelations createNTiersRelations()
  {
    NTiersRelationsImpl nTiersRelations = new NTiersRelationsImpl();
    return nTiersRelations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Technology createTechnology()
  {
    TechnologyImpl technology = new TechnologyImpl();
    return technology;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Technologies createTechnologies()
  {
    TechnologiesImpl technologies = new TechnologiesImpl();
    return technologies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Spring createSpring()
  {
    SpringImpl spring = new SpringImpl();
    return spring;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SpringBootApplication createSpringBootApplication()
  {
    SpringBootApplicationImpl springBootApplication = new SpringBootApplicationImpl();
    return springBootApplication;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Configuration createConfiguration()
  {
    ConfigurationImpl configuration = new ConfigurationImpl();
    return configuration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnableGlobalMethodSecurity createEnableGlobalMethodSecurity()
  {
    EnableGlobalMethodSecurityImpl enableGlobalMethodSecurity = new EnableGlobalMethodSecurityImpl();
    return enableGlobalMethodSecurity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnableAuthorizationServer createEnableAuthorizationServer()
  {
    EnableAuthorizationServerImpl enableAuthorizationServer = new EnableAuthorizationServerImpl();
    return enableAuthorizationServer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnableResourceServer createEnableResourceServer()
  {
    EnableResourceServerImpl enableResourceServer = new EnableResourceServerImpl();
    return enableResourceServer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnableWebSecurity createEnableWebSecurity()
  {
    EnableWebSecurityImpl enableWebSecurity = new EnableWebSecurityImpl();
    return enableWebSecurity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SpringComponent createSpringComponent()
  {
    SpringComponentImpl springComponent = new SpringComponentImpl();
    return springComponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OrderSpring createOrderSpring()
  {
    OrderSpringImpl orderSpring = new OrderSpringImpl();
    return orderSpring;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SpringRepository createSpringRepository()
  {
    SpringRepositoryImpl springRepository = new SpringRepositoryImpl();
    return springRepository;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SpringRepositories createSpringRepositories()
  {
    SpringRepositoriesImpl springRepositories = new SpringRepositoriesImpl();
    return springRepositories;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RestController createRestController()
  {
    RestControllerImpl restController = new RestControllerImpl();
    return restController;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Specification createSpecification()
  {
    SpecificationImpl specification = new SpecificationImpl();
    return specification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Predicate createPredicate()
  {
    PredicateImpl predicate = new PredicateImpl();
    return predicate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SearchCriteria createSearchCriteria()
  {
    SearchCriteriaImpl searchCriteria = new SearchCriteriaImpl();
    return searchCriteria;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Autowired createAutowired()
  {
    AutowiredImpl autowired = new AutowiredImpl();
    return autowired;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AutowiredType createAutowiredType()
  {
    AutowiredTypeImpl autowiredType = new AutowiredTypeImpl();
    return autowiredType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RequestMapping createRequestMapping()
  {
    RequestMappingImpl requestMapping = new RequestMappingImpl();
    return requestMapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RequestPart createRequestPart()
  {
    RequestPartImpl requestPart = new RequestPartImpl();
    return requestPart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RequestMappingType createRequestMappingType()
  {
    RequestMappingTypeImpl requestMappingType = new RequestMappingTypeImpl();
    return requestMappingType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExceptionHandler createExceptionHandler()
  {
    ExceptionHandlerImpl exceptionHandler = new ExceptionHandlerImpl();
    return exceptionHandler;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExceptionProcess createExceptionProcess()
  {
    ExceptionProcessImpl exceptionProcess = new ExceptionProcessImpl();
    return exceptionProcess;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SpringEntity createSpringEntity()
  {
    SpringEntityImpl springEntity = new SpringEntityImpl();
    return springEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SpringTable createSpringTable()
  {
    SpringTableImpl springTable = new SpringTableImpl();
    return springTable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SpringTableId createSpringTableId()
  {
    SpringTableIdImpl springTableId = new SpringTableIdImpl();
    return springTableId;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GeneratedValue createGeneratedValue()
  {
    GeneratedValueImpl generatedValue = new GeneratedValueImpl();
    return generatedValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Columns createColumns()
  {
    ColumnsImpl columns = new ColumnsImpl();
    return columns;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NameNativeQuery createNameNativeQuery()
  {
    NameNativeQueryImpl nameNativeQuery = new NameNativeQueryImpl();
    return nameNativeQuery;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public React createReact()
  {
    ReactImpl react = new ReactImpl();
    return react;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactModules createReactModules()
  {
    ReactModulesImpl reactModules = new ReactModulesImpl();
    return reactModules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactSubModules createReactSubModules()
  {
    ReactSubModulesImpl reactSubModules = new ReactSubModulesImpl();
    return reactSubModules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactConfiguration createReactConfiguration()
  {
    ReactConfigurationImpl reactConfiguration = new ReactConfigurationImpl();
    return reactConfiguration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactDependencies createReactDependencies()
  {
    ReactDependenciesImpl reactDependencies = new ReactDependenciesImpl();
    return reactDependencies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactDependenciesRules createReactDependenciesRules()
  {
    ReactDependenciesRulesImpl reactDependenciesRules = new ReactDependenciesRulesImpl();
    return reactDependenciesRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactDependenciesSubRules createReactDependenciesSubRules()
  {
    ReactDependenciesSubRulesImpl reactDependenciesSubRules = new ReactDependenciesSubRulesImpl();
    return reactDependenciesSubRules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SingleDependencies createSingleDependencies()
  {
    SingleDependenciesImpl singleDependencies = new SingleDependenciesImpl();
    return singleDependencies;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PackageName createPackageName()
  {
    PackageNameImpl packageName = new PackageNameImpl();
    return packageName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PackageVersion createPackageVersion()
  {
    PackageVersionImpl packageVersion = new PackageVersionImpl();
    return packageVersion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactConfigurations createReactConfigurations()
  {
    ReactConfigurationsImpl reactConfigurations = new ReactConfigurationsImpl();
    return reactConfigurations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DOMConfigurations createDOMConfigurations()
  {
    DOMConfigurationsImpl domConfigurations = new DOMConfigurationsImpl();
    return domConfigurations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactComponents createReactComponents()
  {
    ReactComponentsImpl reactComponents = new ReactComponentsImpl();
    return reactComponents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ComponentsLogic createComponentsLogic()
  {
    ComponentsLogicImpl componentsLogic = new ComponentsLogicImpl();
    return componentsLogic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LogicContent createLogicContent()
  {
    LogicContentImpl logicContent = new LogicContentImpl();
    return logicContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LogicStructure createLogicStructure()
  {
    LogicStructureImpl logicStructure = new LogicStructureImpl();
    return logicStructure;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ComponentsUI createComponentsUI()
  {
    ComponentsUIImpl componentsUI = new ComponentsUIImpl();
    return componentsUI;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UIContent createUIContent()
  {
    UIContentImpl uiContent = new UIContentImpl();
    return uiContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ViewComponentCont createViewComponentCont()
  {
    ViewComponentContImpl viewComponentCont = new ViewComponentContImpl();
    return viewComponentCont;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SubcomponentCont createSubcomponentCont()
  {
    SubcomponentContImpl subcomponentCont = new SubcomponentContImpl();
    return subcomponentCont;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ComponentClass createComponentClass()
  {
    ComponentClassImpl componentClass = new ComponentClassImpl();
    return componentClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactImports createReactImports()
  {
    ReactImportsImpl reactImports = new ReactImportsImpl();
    return reactImports;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactImportContent createReactImportContent()
  {
    ReactImportContentImpl reactImportContent = new ReactImportContentImpl();
    return reactImportContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactFunctions createReactFunctions()
  {
    ReactFunctionsImpl reactFunctions = new ReactFunctionsImpl();
    return reactFunctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactConstructor createReactConstructor()
  {
    ReactConstructorImpl reactConstructor = new ReactConstructorImpl();
    return reactConstructor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public State createState()
  {
    StateImpl state = new StateImpl();
    return state;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StateContent createStateContent()
  {
    StateContentImpl stateContent = new StateContentImpl();
    return stateContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CoreFunctionsDeclaration createCoreFunctionsDeclaration()
  {
    CoreFunctionsDeclarationImpl coreFunctionsDeclaration = new CoreFunctionsDeclarationImpl();
    return coreFunctionsDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Props createProps()
  {
    PropsImpl props = new PropsImpl();
    return props;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PropsType createPropsType()
  {
    PropsTypeImpl propsType = new PropsTypeImpl();
    return propsType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactCoreFunctions createReactCoreFunctions()
  {
    ReactCoreFunctionsImpl reactCoreFunctions = new ReactCoreFunctionsImpl();
    return reactCoreFunctions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactActions createReactActions()
  {
    ReactActionsImpl reactActions = new ReactActionsImpl();
    return reactActions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactActionsContent createReactActionsContent()
  {
    ReactActionsContentImpl reactActionsContent = new ReactActionsContentImpl();
    return reactActionsContent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactServicesType createReactServicesType()
  {
    ReactServicesTypeImpl reactServicesType = new ReactServicesTypeImpl();
    return reactServicesType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactServicesRelation createReactServicesRelation()
  {
    ReactServicesRelationImpl reactServicesRelation = new ReactServicesRelationImpl();
    return reactServicesRelation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactsRelationServ createReactsRelationServ()
  {
    ReactsRelationServImpl reactsRelationServ = new ReactsRelationServImpl();
    return reactsRelationServ;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactLibraries createReactLibraries()
  {
    ReactLibrariesImpl reactLibraries = new ReactLibrariesImpl();
    return reactLibraries;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactLibrary createReactLibrary()
  {
    ReactLibraryImpl reactLibrary = new ReactLibraryImpl();
    return reactLibrary;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactInfo createReactInfo()
  {
    ReactInfoImpl reactInfo = new ReactInfoImpl();
    return reactInfo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReactInformation createReactInformation()
  {
    ReactInformationImpl reactInformation = new ReactInformationImpl();
    return reactInformation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PostgreSQL createPostgreSQL()
  {
    PostgreSQLImpl postgreSQL = new PostgreSQLImpl();
    return postgreSQL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Cluster createCluster()
  {
    ClusterImpl cluster = new ClusterImpl();
    return cluster;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Database createDatabase()
  {
    DatabaseImpl database = new DatabaseImpl();
    return database;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Schema createSchema()
  {
    SchemaImpl schema = new SchemaImpl();
    return schema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Index_p createIndex_p()
  {
    Index_pImpl index_p = new Index_pImpl();
    return index_p;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ViewSchema createViewSchema()
  {
    ViewSchemaImpl viewSchema = new ViewSchemaImpl();
    return viewSchema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Table_p createTable_p()
  {
    Table_pImpl table_p = new Table_pImpl();
    return table_p;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ForeignKey createForeignKey()
  {
    ForeignKeyImpl foreignKey = new ForeignKeyImpl();
    return foreignKey;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ForeignKey_n createForeignKey_n()
  {
    ForeignKey_nImpl foreignKey_n = new ForeignKey_nImpl();
    return foreignKey_n;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ForeignKeyRef createForeignKeyRef()
  {
    ForeignKeyRefImpl foreignKeyRef = new ForeignKeyRefImpl();
    return foreignKeyRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RefTable_p createRefTable_p()
  {
    RefTable_pImpl refTable_p = new RefTable_pImpl();
    return refTable_p;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Column createColumn()
  {
    ColumnImpl column = new ColumnImpl();
    return column;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DatatypeDB createDatatypeDB()
  {
    DatatypeDBImpl datatypeDB = new DatatypeDBImpl();
    return datatypeDB;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Constraint createConstraint()
  {
    ConstraintImpl constraint = new ConstraintImpl();
    return constraint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Row createRow()
  {
    RowImpl row = new RowImpl();
    return row;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Policy createPolicy()
  {
    PolicyImpl policy = new PolicyImpl();
    return policy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Trigger createTrigger()
  {
    TriggerImpl trigger = new TriggerImpl();
    return trigger;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Function createFunction()
  {
    FunctionImpl function = new FunctionImpl();
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PostgresUser createPostgresUser()
  {
    PostgresUserImpl postgresUser = new PostgresUserImpl();
    return postgresUser;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Privilege createPrivilege()
  {
    PrivilegeImpl privilege = new PrivilegeImpl();
    return privilege;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Query createQuery()
  {
    QueryImpl query = new QueryImpl();
    return query;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Clause createClause()
  {
    ClauseImpl clause = new ClauseImpl();
    return clause;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AmazonWebServices createAmazonWebServices()
  {
    AmazonWebServicesImpl amazonWebServices = new AmazonWebServicesImpl();
    return amazonWebServices;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AmazonSimpleStorageService createAmazonSimpleStorageService()
  {
    AmazonSimpleStorageServiceImpl amazonSimpleStorageService = new AmazonSimpleStorageServiceImpl();
    return amazonSimpleStorageService;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BatchOperation createBatchOperation()
  {
    BatchOperationImpl batchOperation = new BatchOperationImpl();
    return batchOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Bucket createBucket()
  {
    BucketImpl bucket = new BucketImpl();
    return bucket;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BucketAccess createBucketAccess()
  {
    BucketAccessImpl bucketAccess = new BucketAccessImpl();
    return bucketAccess;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PublicAccess createPublicAccess()
  {
    PublicAccessImpl publicAccess = new PublicAccessImpl();
    return publicAccess;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ObjectsPublic createObjectsPublic()
  {
    ObjectsPublicImpl objectsPublic = new ObjectsPublicImpl();
    return objectsPublic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BucketObjectsNotPublic createBucketObjectsNotPublic()
  {
    BucketObjectsNotPublicImpl bucketObjectsNotPublic = new BucketObjectsNotPublicImpl();
    return bucketObjectsNotPublic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OnlyAuthorized createOnlyAuthorized()
  {
    OnlyAuthorizedImpl onlyAuthorized = new OnlyAuthorizedImpl();
    return onlyAuthorized;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AmazonFolder createAmazonFolder()
  {
    AmazonFolderImpl amazonFolder = new AmazonFolderImpl();
    return amazonFolder;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AmazonFile createAmazonFile()
  {
    AmazonFileImpl amazonFile = new AmazonFileImpl();
    return amazonFile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Metadata createMetadata()
  {
    MetadataImpl metadata = new MetadataImpl();
    return metadata;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AmazonElasticComputeCloud createAmazonElasticComputeCloud()
  {
    AmazonElasticComputeCloudImpl amazonElasticComputeCloud = new AmazonElasticComputeCloudImpl();
    return amazonElasticComputeCloud;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SoftGalleryLanguagePackage getSoftGalleryLanguagePackage()
  {
    return (SoftGalleryLanguagePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static SoftGalleryLanguagePackage getPackage()
  {
    return SoftGalleryLanguagePackage.eINSTANCE;
  }

} //SoftGalleryLanguageFactoryImpl
