/**
 * generated by Xtext 2.17.1
 */
package co.unal.mdd.photos.dsl.softGalleryLanguage.impl;

import co.unal.mdd.photos.dsl.softGalleryLanguage.Album;
import co.unal.mdd.photos.dsl.softGalleryLanguage.DomainRelations;
import co.unal.mdd.photos.dsl.softGalleryLanguage.Photo;
import co.unal.mdd.photos.dsl.softGalleryLanguage.PhotoActions;
import co.unal.mdd.photos.dsl.softGalleryLanguage.SoftGalleryLanguagePackage;
import co.unal.mdd.photos.dsl.softGalleryLanguage.UserDomain;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Domain Relations</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.DomainRelationsImpl#getUserdelements <em>Userdelements</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.DomainRelationsImpl#getUserDname <em>User Dname</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.DomainRelationsImpl#getElements <em>Elements</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.DomainRelationsImpl#getAlbumdelements <em>Albumdelements</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.DomainRelationsImpl#getAlbumDname <em>Album Dname</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.DomainRelationsImpl#getPhotodelements <em>Photodelements</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.DomainRelationsImpl#getPhotoDname <em>Photo Dname</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.DomainRelationsImpl#getPhotoactdelements <em>Photoactdelements</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.DomainRelationsImpl#getPhotoactDname <em>Photoact Dname</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DomainRelationsImpl extends MinimalEObjectImpl.Container implements DomainRelations
{
  /**
   * The cached value of the '{@link #getUserdelements() <em>Userdelements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUserdelements()
   * @generated
   * @ordered
   */
  protected EList<UserDomain> userdelements;

  /**
   * The default value of the '{@link #getUserDname() <em>User Dname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUserDname()
   * @generated
   * @ordered
   */
  protected static final String USER_DNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUserDname() <em>User Dname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUserDname()
   * @generated
   * @ordered
   */
  protected String userDname = USER_DNAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getElements() <em>Elements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElements()
   * @generated
   * @ordered
   */
  protected EList<EObject> elements;

  /**
   * The cached value of the '{@link #getAlbumdelements() <em>Albumdelements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlbumdelements()
   * @generated
   * @ordered
   */
  protected EList<Album> albumdelements;

  /**
   * The default value of the '{@link #getAlbumDname() <em>Album Dname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlbumDname()
   * @generated
   * @ordered
   */
  protected static final String ALBUM_DNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAlbumDname() <em>Album Dname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlbumDname()
   * @generated
   * @ordered
   */
  protected String albumDname = ALBUM_DNAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getPhotodelements() <em>Photodelements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPhotodelements()
   * @generated
   * @ordered
   */
  protected EList<Photo> photodelements;

  /**
   * The default value of the '{@link #getPhotoDname() <em>Photo Dname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPhotoDname()
   * @generated
   * @ordered
   */
  protected static final String PHOTO_DNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPhotoDname() <em>Photo Dname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPhotoDname()
   * @generated
   * @ordered
   */
  protected String photoDname = PHOTO_DNAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getPhotoactdelements() <em>Photoactdelements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPhotoactdelements()
   * @generated
   * @ordered
   */
  protected EList<PhotoActions> photoactdelements;

  /**
   * The default value of the '{@link #getPhotoactDname() <em>Photoact Dname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPhotoactDname()
   * @generated
   * @ordered
   */
  protected static final String PHOTOACT_DNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPhotoactDname() <em>Photoact Dname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPhotoactDname()
   * @generated
   * @ordered
   */
  protected String photoactDname = PHOTOACT_DNAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DomainRelationsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SoftGalleryLanguagePackage.Literals.DOMAIN_RELATIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<UserDomain> getUserdelements()
  {
    if (userdelements == null)
    {
      userdelements = new EObjectContainmentEList<UserDomain>(UserDomain.class, this, SoftGalleryLanguagePackage.DOMAIN_RELATIONS__USERDELEMENTS);
    }
    return userdelements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUserDname()
  {
    return userDname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUserDname(String newUserDname)
  {
    String oldUserDname = userDname;
    userDname = newUserDname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SoftGalleryLanguagePackage.DOMAIN_RELATIONS__USER_DNAME, oldUserDname, userDname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<EObject> getElements()
  {
    if (elements == null)
    {
      elements = new EObjectContainmentEList<EObject>(EObject.class, this, SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ELEMENTS);
    }
    return elements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Album> getAlbumdelements()
  {
    if (albumdelements == null)
    {
      albumdelements = new EObjectContainmentEList<Album>(Album.class, this, SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ALBUMDELEMENTS);
    }
    return albumdelements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAlbumDname()
  {
    return albumDname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAlbumDname(String newAlbumDname)
  {
    String oldAlbumDname = albumDname;
    albumDname = newAlbumDname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ALBUM_DNAME, oldAlbumDname, albumDname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Photo> getPhotodelements()
  {
    if (photodelements == null)
    {
      photodelements = new EObjectContainmentEList<Photo>(Photo.class, this, SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTODELEMENTS);
    }
    return photodelements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPhotoDname()
  {
    return photoDname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPhotoDname(String newPhotoDname)
  {
    String oldPhotoDname = photoDname;
    photoDname = newPhotoDname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTO_DNAME, oldPhotoDname, photoDname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PhotoActions> getPhotoactdelements()
  {
    if (photoactdelements == null)
    {
      photoactdelements = new EObjectContainmentEList<PhotoActions>(PhotoActions.class, this, SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTOACTDELEMENTS);
    }
    return photoactdelements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPhotoactDname()
  {
    return photoactDname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPhotoactDname(String newPhotoactDname)
  {
    String oldPhotoactDname = photoactDname;
    photoactDname = newPhotoactDname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTOACT_DNAME, oldPhotoactDname, photoactDname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__USERDELEMENTS:
        return ((InternalEList<?>)getUserdelements()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ELEMENTS:
        return ((InternalEList<?>)getElements()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ALBUMDELEMENTS:
        return ((InternalEList<?>)getAlbumdelements()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTODELEMENTS:
        return ((InternalEList<?>)getPhotodelements()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTOACTDELEMENTS:
        return ((InternalEList<?>)getPhotoactdelements()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__USERDELEMENTS:
        return getUserdelements();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__USER_DNAME:
        return getUserDname();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ELEMENTS:
        return getElements();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ALBUMDELEMENTS:
        return getAlbumdelements();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ALBUM_DNAME:
        return getAlbumDname();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTODELEMENTS:
        return getPhotodelements();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTO_DNAME:
        return getPhotoDname();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTOACTDELEMENTS:
        return getPhotoactdelements();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTOACT_DNAME:
        return getPhotoactDname();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__USERDELEMENTS:
        getUserdelements().clear();
        getUserdelements().addAll((Collection<? extends UserDomain>)newValue);
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__USER_DNAME:
        setUserDname((String)newValue);
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ELEMENTS:
        getElements().clear();
        getElements().addAll((Collection<? extends EObject>)newValue);
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ALBUMDELEMENTS:
        getAlbumdelements().clear();
        getAlbumdelements().addAll((Collection<? extends Album>)newValue);
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ALBUM_DNAME:
        setAlbumDname((String)newValue);
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTODELEMENTS:
        getPhotodelements().clear();
        getPhotodelements().addAll((Collection<? extends Photo>)newValue);
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTO_DNAME:
        setPhotoDname((String)newValue);
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTOACTDELEMENTS:
        getPhotoactdelements().clear();
        getPhotoactdelements().addAll((Collection<? extends PhotoActions>)newValue);
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTOACT_DNAME:
        setPhotoactDname((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__USERDELEMENTS:
        getUserdelements().clear();
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__USER_DNAME:
        setUserDname(USER_DNAME_EDEFAULT);
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ELEMENTS:
        getElements().clear();
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ALBUMDELEMENTS:
        getAlbumdelements().clear();
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ALBUM_DNAME:
        setAlbumDname(ALBUM_DNAME_EDEFAULT);
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTODELEMENTS:
        getPhotodelements().clear();
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTO_DNAME:
        setPhotoDname(PHOTO_DNAME_EDEFAULT);
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTOACTDELEMENTS:
        getPhotoactdelements().clear();
        return;
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTOACT_DNAME:
        setPhotoactDname(PHOTOACT_DNAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__USERDELEMENTS:
        return userdelements != null && !userdelements.isEmpty();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__USER_DNAME:
        return USER_DNAME_EDEFAULT == null ? userDname != null : !USER_DNAME_EDEFAULT.equals(userDname);
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ELEMENTS:
        return elements != null && !elements.isEmpty();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ALBUMDELEMENTS:
        return albumdelements != null && !albumdelements.isEmpty();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__ALBUM_DNAME:
        return ALBUM_DNAME_EDEFAULT == null ? albumDname != null : !ALBUM_DNAME_EDEFAULT.equals(albumDname);
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTODELEMENTS:
        return photodelements != null && !photodelements.isEmpty();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTO_DNAME:
        return PHOTO_DNAME_EDEFAULT == null ? photoDname != null : !PHOTO_DNAME_EDEFAULT.equals(photoDname);
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTOACTDELEMENTS:
        return photoactdelements != null && !photoactdelements.isEmpty();
      case SoftGalleryLanguagePackage.DOMAIN_RELATIONS__PHOTOACT_DNAME:
        return PHOTOACT_DNAME_EDEFAULT == null ? photoactDname != null : !PHOTOACT_DNAME_EDEFAULT.equals(photoactDname);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (userDname: ");
    result.append(userDname);
    result.append(", albumDname: ");
    result.append(albumDname);
    result.append(", photoDname: ");
    result.append(photoDname);
    result.append(", photoactDname: ");
    result.append(photoactDname);
    result.append(')');
    return result.toString();
  }

} //DomainRelationsImpl
