/**
 * generated by Xtext 2.18.0
 */
package co.unal.mdd.photos.dsl.softGalleryLanguage.impl;

import co.unal.mdd.photos.dsl.softGalleryLanguage.LayerRelations;
import co.unal.mdd.photos.dsl.softGalleryLanguage.LayerSource;
import co.unal.mdd.photos.dsl.softGalleryLanguage.LayerTarget;
import co.unal.mdd.photos.dsl.softGalleryLanguage.SoftGalleryLanguagePackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Layer Relations</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.LayerRelationsImpl#getLayerelations <em>Layerelations</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.LayerRelationsImpl#getName <em>Name</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.LayerRelationsImpl#getLayerorigin <em>Layerorigin</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.LayerRelationsImpl#getLayertarget <em>Layertarget</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LayerRelationsImpl extends MinimalEObjectImpl.Container implements LayerRelations
{
  /**
   * The cached value of the '{@link #getLayerelations() <em>Layerelations</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLayerelations()
   * @generated
   * @ordered
   */
  protected EList<String> layerelations;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getLayerorigin() <em>Layerorigin</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLayerorigin()
   * @generated
   * @ordered
   */
  protected EList<LayerSource> layerorigin;

  /**
   * The cached value of the '{@link #getLayertarget() <em>Layertarget</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLayertarget()
   * @generated
   * @ordered
   */
  protected EList<LayerTarget> layertarget;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LayerRelationsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SoftGalleryLanguagePackage.Literals.LAYER_RELATIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getLayerelations()
  {
    if (layerelations == null)
    {
      layerelations = new EDataTypeEList<String>(String.class, this, SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERELATIONS);
    }
    return layerelations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SoftGalleryLanguagePackage.LAYER_RELATIONS__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LayerSource> getLayerorigin()
  {
    if (layerorigin == null)
    {
      layerorigin = new EObjectContainmentEList<LayerSource>(LayerSource.class, this, SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERORIGIN);
    }
    return layerorigin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LayerTarget> getLayertarget()
  {
    if (layertarget == null)
    {
      layertarget = new EObjectContainmentEList<LayerTarget>(LayerTarget.class, this, SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERTARGET);
    }
    return layertarget;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERORIGIN:
        return ((InternalEList<?>)getLayerorigin()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERTARGET:
        return ((InternalEList<?>)getLayertarget()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERELATIONS:
        return getLayerelations();
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__NAME:
        return getName();
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERORIGIN:
        return getLayerorigin();
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERTARGET:
        return getLayertarget();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERELATIONS:
        getLayerelations().clear();
        getLayerelations().addAll((Collection<? extends String>)newValue);
        return;
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__NAME:
        setName((String)newValue);
        return;
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERORIGIN:
        getLayerorigin().clear();
        getLayerorigin().addAll((Collection<? extends LayerSource>)newValue);
        return;
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERTARGET:
        getLayertarget().clear();
        getLayertarget().addAll((Collection<? extends LayerTarget>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERELATIONS:
        getLayerelations().clear();
        return;
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERORIGIN:
        getLayerorigin().clear();
        return;
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERTARGET:
        getLayertarget().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERELATIONS:
        return layerelations != null && !layerelations.isEmpty();
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERORIGIN:
        return layerorigin != null && !layerorigin.isEmpty();
      case SoftGalleryLanguagePackage.LAYER_RELATIONS__LAYERTARGET:
        return layertarget != null && !layertarget.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (layerelations: ");
    result.append(layerelations);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //LayerRelationsImpl
