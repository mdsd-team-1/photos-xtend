/**
 * generated by Xtext 2.17.1
 */
package co.unal.mdd.photos.dsl.softGalleryLanguage.impl;

import co.unal.mdd.photos.dsl.softGalleryLanguage.ComponentsLogic;
import co.unal.mdd.photos.dsl.softGalleryLanguage.ComponentsStyles;
import co.unal.mdd.photos.dsl.softGalleryLanguage.ComponentsUI;
import co.unal.mdd.photos.dsl.softGalleryLanguage.ReactComponents;
import co.unal.mdd.photos.dsl.softGalleryLanguage.SoftGalleryLanguagePackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>React Components</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.ReactComponentsImpl#getComponentslogic <em>Componentslogic</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.ReactComponentsImpl#getComponentsui <em>Componentsui</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.ReactComponentsImpl#getComponentstyle <em>Componentstyle</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ReactComponentsImpl extends MinimalEObjectImpl.Container implements ReactComponents
{
  /**
   * The cached value of the '{@link #getComponentslogic() <em>Componentslogic</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponentslogic()
   * @generated
   * @ordered
   */
  protected EList<ComponentsLogic> componentslogic;

  /**
   * The cached value of the '{@link #getComponentsui() <em>Componentsui</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponentsui()
   * @generated
   * @ordered
   */
  protected EList<ComponentsUI> componentsui;

  /**
   * The cached value of the '{@link #getComponentstyle() <em>Componentstyle</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponentstyle()
   * @generated
   * @ordered
   */
  protected EList<ComponentsStyles> componentstyle;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ReactComponentsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SoftGalleryLanguagePackage.Literals.REACT_COMPONENTS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentsLogic> getComponentslogic()
  {
    if (componentslogic == null)
    {
      componentslogic = new EObjectContainmentEList<ComponentsLogic>(ComponentsLogic.class, this, SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSLOGIC);
    }
    return componentslogic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentsUI> getComponentsui()
  {
    if (componentsui == null)
    {
      componentsui = new EObjectContainmentEList<ComponentsUI>(ComponentsUI.class, this, SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSUI);
    }
    return componentsui;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ComponentsStyles> getComponentstyle()
  {
    if (componentstyle == null)
    {
      componentstyle = new EObjectContainmentEList<ComponentsStyles>(ComponentsStyles.class, this, SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSTYLE);
    }
    return componentstyle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSLOGIC:
        return ((InternalEList<?>)getComponentslogic()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSUI:
        return ((InternalEList<?>)getComponentsui()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSTYLE:
        return ((InternalEList<?>)getComponentstyle()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSLOGIC:
        return getComponentslogic();
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSUI:
        return getComponentsui();
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSTYLE:
        return getComponentstyle();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSLOGIC:
        getComponentslogic().clear();
        getComponentslogic().addAll((Collection<? extends ComponentsLogic>)newValue);
        return;
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSUI:
        getComponentsui().clear();
        getComponentsui().addAll((Collection<? extends ComponentsUI>)newValue);
        return;
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSTYLE:
        getComponentstyle().clear();
        getComponentstyle().addAll((Collection<? extends ComponentsStyles>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSLOGIC:
        getComponentslogic().clear();
        return;
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSUI:
        getComponentsui().clear();
        return;
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSTYLE:
        getComponentstyle().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSLOGIC:
        return componentslogic != null && !componentslogic.isEmpty();
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSUI:
        return componentsui != null && !componentsui.isEmpty();
      case SoftGalleryLanguagePackage.REACT_COMPONENTS__COMPONENTSTYLE:
        return componentstyle != null && !componentstyle.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ReactComponentsImpl
