/*
 * generated by Xtext 2.17.1
 */
grammar InternalSoftGalleryLanguage;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package co.unal.mdd.photos.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package co.unal.mdd.photos.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import co.unal.mdd.photos.dsl.services.SoftGalleryLanguageGrammarAccess;

}

@parser::members {

 	private SoftGalleryLanguageGrammarAccess grammarAccess;

    public InternalSoftGalleryLanguageParser(TokenStream input, SoftGalleryLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected SoftGalleryLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='System'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getSystemKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getModelAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementsDomainParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleDomain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Domain");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementsArchitectureParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleArchitecture
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Architecture");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getElementsTechnologyParserRuleCall_5_0());
				}
				lv_elements_5_0=ruleTechnology
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_5_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Technology");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDomain
entryRuleDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainRule()); }
	iv_ruleDomain=ruleDomain
	{ $current=$iv_ruleDomain.current; }
	EOF;

// Rule Domain
ruleDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Domain'
		{
			newLeafNode(otherlv_0, grammarAccess.getDomainAccess().getDomainKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDomainAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDomainAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDomainAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainAccess().getEntitydomainEntityParserRuleCall_4_0());
				}
				lv_entitydomain_4_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRule());
					}
					add(
						$current,
						"entitydomain",
						lv_entitydomain_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainAccess().getEntityfuncsFunctionalityParserRuleCall_5_0());
				}
				lv_entityfuncs_5_0=ruleFunctionality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRule());
					}
					add(
						$current,
						"entityfuncs",
						lv_entityfuncs_5_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Functionality");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainAccess().getExceptionsdomainExceptionsDomainParserRuleCall_6_0());
				}
				lv_exceptionsdomain_6_0=ruleExceptionsDomain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainRule());
					}
					add(
						$current,
						"exceptionsdomain",
						lv_exceptionsdomain_6_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ExceptionsDomain");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDomainAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Entities'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntitiesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getEntityAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getElementsEntitiesParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleEntities
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Entities");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEntities
entryRuleEntities returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntitiesRule()); }
	iv_ruleEntities=ruleEntities
	{ $current=$iv_ruleEntities.current; }
	EOF;

// Rule Entities
ruleEntities returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='PhotoEntity'
			{
				newLeafNode(otherlv_0, grammarAccess.getEntitiesAccess().getPhotoEntityKeyword_0_0());
			}
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getEntitiesAccess().getColonKeyword_0_1());
			}
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getEntitiesAccess().getNameIDTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntitiesRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEntitiesAccess().getAtributePhotoAtributePhotoParserRuleCall_0_3_0());
					}
					lv_atributePhoto_3_0=ruleAtributePhoto
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntitiesRule());
						}
						add(
							$current,
							"atributePhoto",
							lv_atributePhoto_3_0,
							"co.unal.mdd.photos.dsl.SoftGalleryLanguage.AtributePhoto");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)
		    |
		(
			otherlv_4='AlbumEntity'
			{
				newLeafNode(otherlv_4, grammarAccess.getEntitiesAccess().getAlbumEntityKeyword_1_0());
			}
			otherlv_5=':'
			{
				newLeafNode(otherlv_5, grammarAccess.getEntitiesAccess().getColonKeyword_1_1());
			}
			(
				(
					lv_name_6_0=RULE_ID
					{
						newLeafNode(lv_name_6_0, grammarAccess.getEntitiesAccess().getNameIDTerminalRuleCall_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntitiesRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEntitiesAccess().getAtributeAlbumAtributeAlbumParserRuleCall_1_3_0());
					}
					lv_atributeAlbum_7_0=ruleAtributeAlbum
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntitiesRule());
						}
						add(
							$current,
							"atributeAlbum",
							lv_atributeAlbum_7_0,
							"co.unal.mdd.photos.dsl.SoftGalleryLanguage.AtributeAlbum");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)
		    |
		(
			otherlv_8='UserEntity'
			{
				newLeafNode(otherlv_8, grammarAccess.getEntitiesAccess().getUserEntityKeyword_2_0());
			}
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getEntitiesAccess().getColonKeyword_2_1());
			}
			(
				(
					lv_name_10_0=RULE_ID
					{
						newLeafNode(lv_name_10_0, grammarAccess.getEntitiesAccess().getNameIDTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntitiesRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_10_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEntitiesAccess().getAtributeUserDomainAtributeUserDomainParserRuleCall_2_3_0());
					}
					lv_atributeUserDomain_11_0=ruleAtributeUserDomain
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntitiesRule());
						}
						add(
							$current,
							"atributeUserDomain",
							lv_atributeUserDomain_11_0,
							"co.unal.mdd.photos.dsl.SoftGalleryLanguage.AtributeUserDomain");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)
	)
;

// Entry rule entryRuleAtributePhoto
entryRuleAtributePhoto returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtributePhotoRule()); }
	iv_ruleAtributePhoto=ruleAtributePhoto
	{ $current=$iv_ruleAtributePhoto.current; }
	EOF;

// Rule AtributePhoto
ruleAtributePhoto returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='namePhoto'
			{
				newLeafNode(otherlv_0, grammarAccess.getAtributePhotoAccess().getNamePhotoKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getAtributePhotoAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtributePhotoRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_2='urlPhoto'
			{
				newLeafNode(otherlv_2, grammarAccess.getAtributePhotoAccess().getUrlPhotoKeyword_1_0());
			}
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getAtributePhotoAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtributePhotoRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_4='albumIdPhoto'
			{
				newLeafNode(otherlv_4, grammarAccess.getAtributePhotoAccess().getAlbumIdPhotoKeyword_2_0());
			}
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getAtributePhotoAccess().getNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtributePhotoRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleAtributeAlbum
entryRuleAtributeAlbum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtributeAlbumRule()); }
	iv_ruleAtributeAlbum=ruleAtributeAlbum
	{ $current=$iv_ruleAtributeAlbum.current; }
	EOF;

// Rule AtributeAlbum
ruleAtributeAlbum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='nameAlbum'
			{
				newLeafNode(otherlv_0, grammarAccess.getAtributeAlbumAccess().getNameAlbumKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getAtributeAlbumAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtributeAlbumRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_2='userIdAlbum'
			{
				newLeafNode(otherlv_2, grammarAccess.getAtributeAlbumAccess().getUserIdAlbumKeyword_1_0());
			}
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getAtributeAlbumAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtributeAlbumRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleAtributeUserDomain
entryRuleAtributeUserDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtributeUserDomainRule()); }
	iv_ruleAtributeUserDomain=ruleAtributeUserDomain
	{ $current=$iv_ruleAtributeUserDomain.current; }
	EOF;

// Rule AtributeUserDomain
ruleAtributeUserDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='userNameUser'
			{
				newLeafNode(otherlv_0, grammarAccess.getAtributeUserDomainAccess().getUserNameUserKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getAtributeUserDomainAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtributeUserDomainRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_2='firstNameUser'
			{
				newLeafNode(otherlv_2, grammarAccess.getAtributeUserDomainAccess().getFirstNameUserKeyword_1_0());
			}
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getAtributeUserDomainAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtributeUserDomainRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_4='lastNameUser'
			{
				newLeafNode(otherlv_4, grammarAccess.getAtributeUserDomainAccess().getLastNameUserKeyword_2_0());
			}
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getAtributeUserDomainAccess().getNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtributeUserDomainRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_6='profileDescriptionUser'
			{
				newLeafNode(otherlv_6, grammarAccess.getAtributeUserDomainAccess().getProfileDescriptionUserKeyword_3_0());
			}
			(
				(
					lv_name_7_0=RULE_ID
					{
						newLeafNode(lv_name_7_0, grammarAccess.getAtributeUserDomainAccess().getNameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtributeUserDomainRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_8='passwordUser'
			{
				newLeafNode(otherlv_8, grammarAccess.getAtributeUserDomainAccess().getPasswordUserKeyword_4_0());
			}
			(
				(
					lv_name_9_0=RULE_ID
					{
						newLeafNode(lv_name_9_0, grammarAccess.getAtributeUserDomainAccess().getNameIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtributeUserDomainRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_9_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_10='emailUser'
			{
				newLeafNode(otherlv_10, grammarAccess.getAtributeUserDomainAccess().getEmailUserKeyword_5_0());
			}
			(
				(
					lv_name_11_0=RULE_ID
					{
						newLeafNode(lv_name_11_0, grammarAccess.getAtributeUserDomainAccess().getNameIDTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtributeUserDomainRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_11_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFunctionality
entryRuleFunctionality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionalityRule()); }
	iv_ruleFunctionality=ruleFunctionality
	{ $current=$iv_ruleFunctionality.current; }
	EOF;

// Rule Functionality
ruleFunctionality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Functionalities'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionalityAccess().getFunctionalitiesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionalityAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionalityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalityAccess().getElementsFunctionalitiesParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleFunctionalities
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalityRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Functionalities");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionalityAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleFunctionalities
entryRuleFunctionalities returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionalitiesRule()); }
	iv_ruleFunctionalities=ruleFunctionalities
	{ $current=$iv_ruleFunctionalities.current; }
	EOF;

// Rule Functionalities
ruleFunctionalities returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getFunctionsProfileManagementParserRuleCall_0_0());
				}
				lv_functions_0_0=ruleProfileManagement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"functions",
						lv_functions_0_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ProfileManagement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getElementsAppAccessParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleAppAccess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.AppAccess");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getItemsAlbumManagementParserRuleCall_2_0());
				}
				lv_items_2_0=ruleAlbumManagement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.AlbumManagement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getResourcesPhotoActionsParserRuleCall_3_0());
				}
				lv_resources_3_0=rulePhotoActions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"resources",
						lv_resources_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.PhotoActions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionalitiesAccess().getAditionalsLandingActionsParserRuleCall_4_0());
				}
				lv_aditionals_4_0=ruleLandingActions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionalitiesRule());
					}
					add(
						$current,
						"aditionals",
						lv_aditionals_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.LandingActions");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProfileManagement
entryRuleProfileManagement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProfileManagementRule()); }
	iv_ruleProfileManagement=ruleProfileManagement
	{ $current=$iv_ruleProfileManagement.current; }
	EOF;

// Rule ProfileManagement
ruleProfileManagement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ProfileManagement'
		{
			newLeafNode(otherlv_0, grammarAccess.getProfileManagementAccess().getProfileManagementKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getProfileManagementAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProfileManagementAccess().getItemsProfileManagementFunctionsParserRuleCall_2_0());
				}
				lv_items_2_0=ruleProfileManagementFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProfileManagementRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ProfileManagementFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProfileManagementFunctions
entryRuleProfileManagementFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProfileManagementFunctionsRule()); }
	iv_ruleProfileManagementFunctions=ruleProfileManagementFunctions
	{ $current=$iv_ruleProfileManagementFunctions.current; }
	EOF;

// Rule ProfileManagementFunctions
ruleProfileManagementFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ViewProfilePhoto'
		{
			newLeafNode(otherlv_0, grammarAccess.getProfileManagementFunctionsAccess().getViewProfilePhotoKeyword_0());
		}
		(
			(
				lv_viewprofileName_1_0=RULE_ID
				{
					newLeafNode(lv_viewprofileName_1_0, grammarAccess.getProfileManagementFunctionsAccess().getViewprofileNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProfileManagementFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"viewprofileName",
						lv_viewprofileName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='EditProfileInfo'
		{
			newLeafNode(otherlv_2, grammarAccess.getProfileManagementFunctionsAccess().getEditProfileInfoKeyword_2());
		}
		(
			(
				lv_editProfileName_3_0=RULE_ID
				{
					newLeafNode(lv_editProfileName_3_0, grammarAccess.getProfileManagementFunctionsAccess().getEditProfileNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProfileManagementFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"editProfileName",
						lv_editProfileName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAppAccess
entryRuleAppAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAppAccessRule()); }
	iv_ruleAppAccess=ruleAppAccess
	{ $current=$iv_ruleAppAccess.current; }
	EOF;

// Rule AppAccess
ruleAppAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AppAccess'
		{
			newLeafNode(otherlv_0, grammarAccess.getAppAccessAccess().getAppAccessKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAppAccessAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAppAccessAccess().getItemsAppAccessFunctionsParserRuleCall_2_0());
				}
				lv_items_2_0=ruleAppAccessFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAppAccessRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.AppAccessFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAppAccessFunctions
entryRuleAppAccessFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAppAccessFunctionsRule()); }
	iv_ruleAppAccessFunctions=ruleAppAccessFunctions
	{ $current=$iv_ruleAppAccessFunctions.current; }
	EOF;

// Rule AppAccessFunctions
ruleAppAccessFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Login'
		{
			newLeafNode(otherlv_0, grammarAccess.getAppAccessFunctionsAccess().getLoginKeyword_0());
		}
		(
			(
				lv_loginName_1_0=RULE_ID
				{
					newLeafNode(lv_loginName_1_0, grammarAccess.getAppAccessFunctionsAccess().getLoginNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAppAccessFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"loginName",
						lv_loginName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='Register'
		{
			newLeafNode(otherlv_2, grammarAccess.getAppAccessFunctionsAccess().getRegisterKeyword_2());
		}
		(
			(
				lv_registerName_3_0=RULE_ID
				{
					newLeafNode(lv_registerName_3_0, grammarAccess.getAppAccessFunctionsAccess().getRegisterNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAppAccessFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"registerName",
						lv_registerName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAlbumManagement
entryRuleAlbumManagement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlbumManagementRule()); }
	iv_ruleAlbumManagement=ruleAlbumManagement
	{ $current=$iv_ruleAlbumManagement.current; }
	EOF;

// Rule AlbumManagement
ruleAlbumManagement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AlbumManagement'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlbumManagementAccess().getAlbumManagementKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAlbumManagementAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlbumManagementAccess().getItemsAlbumManagementFunctionsParserRuleCall_2_0());
				}
				lv_items_2_0=ruleAlbumManagementFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlbumManagementRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.AlbumManagementFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAlbumManagementFunctions
entryRuleAlbumManagementFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlbumManagementFunctionsRule()); }
	iv_ruleAlbumManagementFunctions=ruleAlbumManagementFunctions
	{ $current=$iv_ruleAlbumManagementFunctions.current; }
	EOF;

// Rule AlbumManagementFunctions
ruleAlbumManagementFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CreateAlbum'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlbumManagementFunctionsAccess().getCreateAlbumKeyword_0());
		}
		(
			(
				lv_createdAlbName_1_0=RULE_ID
				{
					newLeafNode(lv_createdAlbName_1_0, grammarAccess.getAlbumManagementFunctionsAccess().getCreatedAlbNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlbumManagementFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"createdAlbName",
						lv_createdAlbName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='SelectAlbum'
		{
			newLeafNode(otherlv_2, grammarAccess.getAlbumManagementFunctionsAccess().getSelectAlbumKeyword_2());
		}
		(
			(
				lv_selectAlbName_3_0=RULE_ID
				{
					newLeafNode(lv_selectAlbName_3_0, grammarAccess.getAlbumManagementFunctionsAccess().getSelectAlbNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlbumManagementFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"selectAlbName",
						lv_selectAlbName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePhotoActions
entryRulePhotoActions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhotoActionsRule()); }
	iv_rulePhotoActions=rulePhotoActions
	{ $current=$iv_rulePhotoActions.current; }
	EOF;

// Rule PhotoActions
rulePhotoActions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PhotoActions'
		{
			newLeafNode(otherlv_0, grammarAccess.getPhotoActionsAccess().getPhotoActionsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPhotoActionsAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhotoActionsAccess().getItemsPhotoActionsFunctionsParserRuleCall_2_0());
				}
				lv_items_2_0=rulePhotoActionsFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhotoActionsRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.PhotoActionsFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePhotoActionsFunctions
entryRulePhotoActionsFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhotoActionsFunctionsRule()); }
	iv_rulePhotoActionsFunctions=rulePhotoActionsFunctions
	{ $current=$iv_rulePhotoActionsFunctions.current; }
	EOF;

// Rule PhotoActionsFunctions
rulePhotoActionsFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ViewAllPhotos'
		{
			newLeafNode(otherlv_0, grammarAccess.getPhotoActionsFunctionsAccess().getViewAllPhotosKeyword_0());
		}
		(
			(
				lv_nameGenerico_1_0=RULE_ID
				{
					newLeafNode(lv_nameGenerico_1_0, grammarAccess.getPhotoActionsFunctionsAccess().getNameGenericoIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhotoActionsFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"nameGenerico",
						lv_nameGenerico_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='ViewExtendedPhoto'
		{
			newLeafNode(otherlv_2, grammarAccess.getPhotoActionsFunctionsAccess().getViewExtendedPhotoKeyword_2());
		}
		(
			(
				lv_namePhoto_3_0=RULE_ID
				{
					newLeafNode(lv_namePhoto_3_0, grammarAccess.getPhotoActionsFunctionsAccess().getNamePhotoIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhotoActionsFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"namePhoto",
						lv_namePhoto_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='LoadPhoto'
		{
			newLeafNode(otherlv_4, grammarAccess.getPhotoActionsFunctionsAccess().getLoadPhotoKeyword_4());
		}
		(
			(
				lv_nameLoad_5_0=RULE_ID
				{
					newLeafNode(lv_nameLoad_5_0, grammarAccess.getPhotoActionsFunctionsAccess().getNameLoadIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhotoActionsFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"nameLoad",
						lv_nameLoad_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleLandingActions
entryRuleLandingActions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLandingActionsRule()); }
	iv_ruleLandingActions=ruleLandingActions
	{ $current=$iv_ruleLandingActions.current; }
	EOF;

// Rule LandingActions
ruleLandingActions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LandingActions'
		{
			newLeafNode(otherlv_0, grammarAccess.getLandingActionsAccess().getLandingActionsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLandingActionsAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLandingActionsAccess().getItemsLandingFunctionsParserRuleCall_2_0());
				}
				lv_items_2_0=ruleLandingFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLandingActionsRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.LandingFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLandingFunctions
entryRuleLandingFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLandingFunctionsRule()); }
	iv_ruleLandingFunctions=ruleLandingFunctions
	{ $current=$iv_ruleLandingFunctions.current; }
	EOF;

// Rule LandingFunctions
ruleLandingFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ViewCarousel'
		{
			newLeafNode(otherlv_0, grammarAccess.getLandingFunctionsAccess().getViewCarouselKeyword_0());
		}
		(
			(
				lv_nameCarouselName_1_0=RULE_ID
				{
					newLeafNode(lv_nameCarouselName_1_0, grammarAccess.getLandingFunctionsAccess().getNameCarouselNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLandingFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"nameCarouselName",
						lv_nameCarouselName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='PassPhoto'
		{
			newLeafNode(otherlv_2, grammarAccess.getLandingFunctionsAccess().getPassPhotoKeyword_2());
		}
		(
			(
				lv_passPhotoName_3_0=RULE_ID
				{
					newLeafNode(lv_passPhotoName_3_0, grammarAccess.getLandingFunctionsAccess().getPassPhotoNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLandingFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"passPhotoName",
						lv_passPhotoName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleExceptionsDomain
entryRuleExceptionsDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionsDomainRule()); }
	iv_ruleExceptionsDomain=ruleExceptionsDomain
	{ $current=$iv_ruleExceptionsDomain.current; }
	EOF;

// Rule ExceptionsDomain
ruleExceptionsDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DomainExceptions'
		{
			newLeafNode(otherlv_0, grammarAccess.getExceptionsDomainAccess().getDomainExceptionsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getExceptionsDomainAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getExceptionsDomainAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExceptionsDomainAccess().getExceptionsTypeExceptionsTypeParserRuleCall_3_0());
				}
				lv_exceptionsType_3_0=ruleExceptionsType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExceptionsDomainRule());
					}
					add(
						$current,
						"exceptionsType",
						lv_exceptionsType_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ExceptionsType");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getExceptionsDomainAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleExceptionsType
entryRuleExceptionsType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionsTypeRule()); }
	iv_ruleExceptionsType=ruleExceptionsType
	{ $current=$iv_ruleExceptionsType.current; }
	EOF;

// Rule ExceptionsType
ruleExceptionsType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='PhotoException'
			{
				newLeafNode(otherlv_0, grammarAccess.getExceptionsTypeAccess().getPhotoExceptionKeyword_0_0());
			}
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getExceptionsTypeAccess().getColonKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExceptionsTypeAccess().getPhotoExceptionPhotoExceptionParserRuleCall_0_2_0());
					}
					lv_photoException_2_0=rulePhotoException
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExceptionsTypeRule());
						}
						add(
							$current,
							"photoException",
							lv_photoException_2_0,
							"co.unal.mdd.photos.dsl.SoftGalleryLanguage.PhotoException");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)
		    |
		(
			otherlv_3='AlbumException'
			{
				newLeafNode(otherlv_3, grammarAccess.getExceptionsTypeAccess().getAlbumExceptionKeyword_1_0());
			}
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getExceptionsTypeAccess().getColonKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExceptionsTypeAccess().getAlbumExceptionAlbumExceptionParserRuleCall_1_2_0());
					}
					lv_albumException_5_0=ruleAlbumException
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExceptionsTypeRule());
						}
						add(
							$current,
							"albumException",
							lv_albumException_5_0,
							"co.unal.mdd.photos.dsl.SoftGalleryLanguage.AlbumException");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)
		    |
		(
			otherlv_6='UserException'
			{
				newLeafNode(otherlv_6, grammarAccess.getExceptionsTypeAccess().getUserExceptionKeyword_2_0());
			}
			otherlv_7=':'
			{
				newLeafNode(otherlv_7, grammarAccess.getExceptionsTypeAccess().getColonKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExceptionsTypeAccess().getUserExceptionUserExceptionParserRuleCall_2_2_0());
					}
					lv_userException_8_0=ruleUserException
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExceptionsTypeRule());
						}
						add(
							$current,
							"userException",
							lv_userException_8_0,
							"co.unal.mdd.photos.dsl.SoftGalleryLanguage.UserException");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)
	)
;

// Entry rule entryRulePhotoException
entryRulePhotoException returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhotoExceptionRule()); }
	iv_rulePhotoException=rulePhotoException
	{ $current=$iv_rulePhotoException.current; }
	EOF;

// Rule PhotoException
rulePhotoException returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='PhotoNotFound'
			{
				newLeafNode(otherlv_0, grammarAccess.getPhotoExceptionAccess().getPhotoNotFoundKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getPhotoExceptionAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPhotoExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_2='PhotoUploadError'
			{
				newLeafNode(otherlv_2, grammarAccess.getPhotoExceptionAccess().getPhotoUploadErrorKeyword_1_0());
			}
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getPhotoExceptionAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPhotoExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_4='PhotoNotCreated'
			{
				newLeafNode(otherlv_4, grammarAccess.getPhotoExceptionAccess().getPhotoNotCreatedKeyword_2_0());
			}
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getPhotoExceptionAccess().getNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPhotoExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_6='PhotoNotDeleted'
			{
				newLeafNode(otherlv_6, grammarAccess.getPhotoExceptionAccess().getPhotoNotDeletedKeyword_3_0());
			}
			(
				(
					lv_name_7_0=RULE_ID
					{
						newLeafNode(lv_name_7_0, grammarAccess.getPhotoExceptionAccess().getNameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPhotoExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleAlbumException
entryRuleAlbumException returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlbumExceptionRule()); }
	iv_ruleAlbumException=ruleAlbumException
	{ $current=$iv_ruleAlbumException.current; }
	EOF;

// Rule AlbumException
ruleAlbumException returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='AlbumNotFound'
			{
				newLeafNode(otherlv_0, grammarAccess.getAlbumExceptionAccess().getAlbumNotFoundKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getAlbumExceptionAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAlbumExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_2='PhotosFromAlbumNotFound'
			{
				newLeafNode(otherlv_2, grammarAccess.getAlbumExceptionAccess().getPhotosFromAlbumNotFoundKeyword_1_0());
			}
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getAlbumExceptionAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAlbumExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_4='AlbumHasNoPhotos'
			{
				newLeafNode(otherlv_4, grammarAccess.getAlbumExceptionAccess().getAlbumHasNoPhotosKeyword_2_0());
			}
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getAlbumExceptionAccess().getNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAlbumExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_6='MissingParametersForNewAlbum'
			{
				newLeafNode(otherlv_6, grammarAccess.getAlbumExceptionAccess().getMissingParametersForNewAlbumKeyword_3_0());
			}
			(
				(
					lv_name_7_0=RULE_ID
					{
						newLeafNode(lv_name_7_0, grammarAccess.getAlbumExceptionAccess().getNameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAlbumExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_8='UserIdIsNotNumber'
			{
				newLeafNode(otherlv_8, grammarAccess.getAlbumExceptionAccess().getUserIdIsNotNumberKeyword_4_0());
			}
			(
				(
					lv_name_9_0=RULE_ID
					{
						newLeafNode(lv_name_9_0, grammarAccess.getAlbumExceptionAccess().getNameIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAlbumExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_9_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_10='AlbumNotCreated'
			{
				newLeafNode(otherlv_10, grammarAccess.getAlbumExceptionAccess().getAlbumNotCreatedKeyword_5_0());
			}
			(
				(
					lv_name_11_0=RULE_ID
					{
						newLeafNode(lv_name_11_0, grammarAccess.getAlbumExceptionAccess().getNameIDTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAlbumExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_11_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleUserException
entryRuleUserException returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserExceptionRule()); }
	iv_ruleUserException=ruleUserException
	{ $current=$iv_ruleUserException.current; }
	EOF;

// Rule UserException
ruleUserException returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='UserNotFound'
			{
				newLeafNode(otherlv_0, grammarAccess.getUserExceptionAccess().getUserNotFoundKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getUserExceptionAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_2='AlbumsFromUserNotFound'
			{
				newLeafNode(otherlv_2, grammarAccess.getUserExceptionAccess().getAlbumsFromUserNotFoundKeyword_1_0());
			}
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getUserExceptionAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_4='UserHasNoAlbums'
			{
				newLeafNode(otherlv_4, grammarAccess.getUserExceptionAccess().getUserHasNoAlbumsKeyword_2_0());
			}
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getUserExceptionAccess().getNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_6='UserHasNoPhotos'
			{
				newLeafNode(otherlv_6, grammarAccess.getUserExceptionAccess().getUserHasNoPhotosKeyword_3_0());
			}
			(
				(
					lv_name_7_0=RULE_ID
					{
						newLeafNode(lv_name_7_0, grammarAccess.getUserExceptionAccess().getNameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_8='MissingParametersForNewUser'
			{
				newLeafNode(otherlv_8, grammarAccess.getUserExceptionAccess().getMissingParametersForNewUserKeyword_4_0());
			}
			(
				(
					lv_name_9_0=RULE_ID
					{
						newLeafNode(lv_name_9_0, grammarAccess.getUserExceptionAccess().getNameIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_9_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_10='UserNotCreated'
			{
				newLeafNode(otherlv_10, grammarAccess.getUserExceptionAccess().getUserNotCreatedKeyword_5_0());
			}
			(
				(
					lv_name_11_0=RULE_ID
					{
						newLeafNode(lv_name_11_0, grammarAccess.getUserExceptionAccess().getNameIDTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_11_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_12='AlbumNotCreatedForNewUser'
			{
				newLeafNode(otherlv_12, grammarAccess.getUserExceptionAccess().getAlbumNotCreatedForNewUserKeyword_6_0());
			}
			(
				(
					lv_name_13_0=RULE_ID
					{
						newLeafNode(lv_name_13_0, grammarAccess.getUserExceptionAccess().getNameIDTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_13_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_14='MissingParametersForEditUser'
			{
				newLeafNode(otherlv_14, grammarAccess.getUserExceptionAccess().getMissingParametersForEditUserKeyword_7_0());
			}
			(
				(
					lv_name_15_0=RULE_ID
					{
						newLeafNode(lv_name_15_0, grammarAccess.getUserExceptionAccess().getNameIDTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_15_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_16='WrongLoginInfo'
			{
				newLeafNode(otherlv_16, grammarAccess.getUserExceptionAccess().getWrongLoginInfoKeyword_8_0());
			}
			(
				(
					lv_name_17_0=RULE_ID
					{
						newLeafNode(lv_name_17_0, grammarAccess.getUserExceptionAccess().getNameIDTerminalRuleCall_8_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_17_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_18='MissingParametersForLogin'
			{
				newLeafNode(otherlv_18, grammarAccess.getUserExceptionAccess().getMissingParametersForLoginKeyword_9_0());
			}
			(
				(
					lv_name_19_0=RULE_ID
					{
						newLeafNode(lv_name_19_0, grammarAccess.getUserExceptionAccess().getNameIDTerminalRuleCall_9_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_19_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_20='UserIdIsNotNumber'
			{
				newLeafNode(otherlv_20, grammarAccess.getUserExceptionAccess().getUserIdIsNotNumberKeyword_10_0());
			}
			(
				(
					lv_name_21_0=RULE_ID
					{
						newLeafNode(lv_name_21_0, grammarAccess.getUserExceptionAccess().getNameIDTerminalRuleCall_10_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_21_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_22='UserToEditDoesNotExist'
			{
				newLeafNode(otherlv_22, grammarAccess.getUserExceptionAccess().getUserToEditDoesNotExistKeyword_11_0());
			}
			(
				(
					lv_name_23_0=RULE_ID
					{
						newLeafNode(lv_name_23_0, grammarAccess.getUserExceptionAccess().getNameIDTerminalRuleCall_11_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_23_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_24='UserNotEdited'
			{
				newLeafNode(otherlv_24, grammarAccess.getUserExceptionAccess().getUserNotEditedKeyword_12_0());
			}
			(
				(
					lv_name_25_0=RULE_ID
					{
						newLeafNode(lv_name_25_0, grammarAccess.getUserExceptionAccess().getNameIDTerminalRuleCall_12_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUserExceptionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_25_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleArchitecture
entryRuleArchitecture returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArchitectureRule()); }
	iv_ruleArchitecture=ruleArchitecture
	{ $current=$iv_ruleArchitecture.current; }
	EOF;

// Rule Architecture
ruleArchitecture returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Architecture:'
		{
			newLeafNode(otherlv_0, grammarAccess.getArchitectureAccess().getArchitectureKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getArchitectureAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureAccess().getElementsNTiersParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleNTiers
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.NTiers");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureAccess().getElementsNTiersConnectionsParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleNTiersConnections
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.NTiersConnections");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getArchitectureAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleNTiers
entryRuleNTiers returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNTiersRule()); }
	iv_ruleNTiers=ruleNTiers
	{ $current=$iv_ruleNTiers.current; }
	EOF;

// Rule NTiers
ruleNTiers returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Layers'
		{
			newLeafNode(otherlv_0, grammarAccess.getNTiersAccess().getLayersKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNTiersAccess().getElementsLayerParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTiersRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Layer");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2='LayersRelations'
		{
			newLeafNode(otherlv_2, grammarAccess.getNTiersAccess().getLayersRelationsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNTiersAccess().getElementsLayerRelationsParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleLayerRelations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTiersRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.LayerRelations");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='ArchitectureComponents'
		{
			newLeafNode(otherlv_4, grammarAccess.getNTiersAccess().getArchitectureComponentsKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNTiersAccess().getElementsArchitectureComponentsParserRuleCall_5_0());
				}
				lv_elements_5_0=ruleArchitectureComponents
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTiersRule());
					}
					add(
						$current,
						"elements",
						lv_elements_5_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ArchitectureComponents");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleLayer
entryRuleLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayerRule()); }
	iv_ruleLayer=ruleLayer
	{ $current=$iv_ruleLayer.current; }
	EOF;

// Rule Layer
ruleLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerAccess().getLayerPresentationLayerParserRuleCall_0_0());
				}
				lv_layer_0_0=rulePresentationLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerRule());
					}
					add(
						$current,
						"layer",
						lv_layer_0_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.PresentationLayer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerAccess().getLayerBusinessLogicLayerParserRuleCall_1_0());
				}
				lv_layer_1_0=ruleBusinessLogicLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerRule());
					}
					add(
						$current,
						"layer",
						lv_layer_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.BusinessLogicLayer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerAccess().getLayerDataPersistenceLayerParserRuleCall_2_0());
				}
				lv_layer_2_0=ruleDataPersistenceLayer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerRule());
					}
					add(
						$current,
						"layer",
						lv_layer_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.DataPersistenceLayer");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePresentationLayer
entryRulePresentationLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPresentationLayerRule()); }
	iv_rulePresentationLayer=rulePresentationLayer
	{ $current=$iv_rulePresentationLayer.current; }
	EOF;

// Rule PresentationLayer
rulePresentationLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PresentationLayer'
		{
			newLeafNode(otherlv_0, grammarAccess.getPresentationLayerAccess().getPresentationLayerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPresentationLayerAccess().getPresentationLayerPresentationContentParserRuleCall_1_0());
				}
				lv_presentationLayer_1_0=rulePresentationContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPresentationLayerRule());
					}
					add(
						$current,
						"presentationLayer",
						lv_presentationLayer_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.PresentationContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPresentationLayerAccess().getPresentationLayerSegmentStructureParserRuleCall_2_0());
				}
				lv_presentationLayer_2_0=ruleSegmentStructure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPresentationLayerRule());
					}
					add(
						$current,
						"presentationLayer",
						lv_presentationLayer_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SegmentStructure");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePresentationContent
entryRulePresentationContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPresentationContentRule()); }
	iv_rulePresentationContent=rulePresentationContent
	{ $current=$iv_rulePresentationContent.current; }
	EOF;

// Rule PresentationContent
rulePresentationContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PresentationSegments'
		{
			newLeafNode(otherlv_0, grammarAccess.getPresentationContentAccess().getPresentationSegmentsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPresentationContentAccess().getElementsPresentationSegmentsParserRuleCall_1_0());
				}
				lv_elements_1_0=rulePresentationSegments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPresentationContentRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.PresentationSegments");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePresentationSegments
entryRulePresentationSegments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPresentationSegmentsRule()); }
	iv_rulePresentationSegments=rulePresentationSegments
	{ $current=$iv_rulePresentationSegments.current; }
	EOF;

// Rule PresentationSegments
rulePresentationSegments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PresentationView'
		{
			newLeafNode(otherlv_0, grammarAccess.getPresentationSegmentsAccess().getPresentationViewKeyword_0());
		}
		(
			(
				lv_presentationSName_1_0=RULE_ID
				{
					newLeafNode(lv_presentationSName_1_0, grammarAccess.getPresentationSegmentsAccess().getPresentationSNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPresentationSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"presentationSName",
						lv_presentationSName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='PresentationComponent'
		{
			newLeafNode(otherlv_2, grammarAccess.getPresentationSegmentsAccess().getPresentationComponentKeyword_2());
		}
		(
			(
				lv_presentationCName_3_0=RULE_ID
				{
					newLeafNode(lv_presentationCName_3_0, grammarAccess.getPresentationSegmentsAccess().getPresentationCNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPresentationSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"presentationCName",
						lv_presentationCName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='PresentationAction'
		{
			newLeafNode(otherlv_4, grammarAccess.getPresentationSegmentsAccess().getPresentationActionKeyword_4());
		}
		(
			(
				lv_presentationAName_5_0=RULE_ID
				{
					newLeafNode(lv_presentationAName_5_0, grammarAccess.getPresentationSegmentsAccess().getPresentationANameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPresentationSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"presentationAName",
						lv_presentationAName_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBusinessLogicLayer
entryRuleBusinessLogicLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBusinessLogicLayerRule()); }
	iv_ruleBusinessLogicLayer=ruleBusinessLogicLayer
	{ $current=$iv_ruleBusinessLogicLayer.current; }
	EOF;

// Rule BusinessLogicLayer
ruleBusinessLogicLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BusinessLogicLayer'
		{
			newLeafNode(otherlv_0, grammarAccess.getBusinessLogicLayerAccess().getBusinessLogicLayerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBusinessLogicLayerAccess().getBusinessLogicLayerBusinessLogicContentParserRuleCall_1_0());
				}
				lv_businessLogicLayer_1_0=ruleBusinessLogicContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBusinessLogicLayerRule());
					}
					add(
						$current,
						"businessLogicLayer",
						lv_businessLogicLayer_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.BusinessLogicContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBusinessLogicLayerAccess().getBusinessLogicLayerSegmentStructureParserRuleCall_2_0());
				}
				lv_businessLogicLayer_2_0=ruleSegmentStructure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBusinessLogicLayerRule());
					}
					add(
						$current,
						"businessLogicLayer",
						lv_businessLogicLayer_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SegmentStructure");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBusinessLogicContent
entryRuleBusinessLogicContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBusinessLogicContentRule()); }
	iv_ruleBusinessLogicContent=ruleBusinessLogicContent
	{ $current=$iv_ruleBusinessLogicContent.current; }
	EOF;

// Rule BusinessLogicContent
ruleBusinessLogicContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BusinessLogicSegments'
		{
			newLeafNode(otherlv_0, grammarAccess.getBusinessLogicContentAccess().getBusinessLogicSegmentsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBusinessLogicContentAccess().getBusinessLogicSegmentsBusinessLogicSegmentsParserRuleCall_1_0());
				}
				lv_businessLogicSegments_1_0=ruleBusinessLogicSegments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBusinessLogicContentRule());
					}
					add(
						$current,
						"businessLogicSegments",
						lv_businessLogicSegments_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.BusinessLogicSegments");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleBusinessLogicSegments
entryRuleBusinessLogicSegments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBusinessLogicSegmentsRule()); }
	iv_ruleBusinessLogicSegments=ruleBusinessLogicSegments
	{ $current=$iv_ruleBusinessLogicSegments.current; }
	EOF;

// Rule BusinessLogicSegments
ruleBusinessLogicSegments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='ControllerSegment'
			{
				newLeafNode(otherlv_0, grammarAccess.getBusinessLogicSegmentsAccess().getControllerSegmentKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getBusinessLogicSegmentsAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBusinessLogicSegmentsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBusinessLogicSegmentsAccess().getControllerSegmentElementControllerSegmentElementParserRuleCall_0_2_0());
					}
					lv_controllerSegmentElement_2_0=ruleControllerSegmentElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBusinessLogicSegmentsRule());
						}
						add(
							$current,
							"controllerSegmentElement",
							lv_controllerSegmentElement_2_0,
							"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ControllerSegmentElement");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)
		    |
		(
			otherlv_3='ModelSegment'
			{
				newLeafNode(otherlv_3, grammarAccess.getBusinessLogicSegmentsAccess().getModelSegmentKeyword_1_0());
			}
			(
				(
					lv_name_4_0=RULE_ID
					{
						newLeafNode(lv_name_4_0, grammarAccess.getBusinessLogicSegmentsAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBusinessLogicSegmentsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_5='RepositorySegment'
			{
				newLeafNode(otherlv_5, grammarAccess.getBusinessLogicSegmentsAccess().getRepositorySegmentKeyword_2_0());
			}
			(
				(
					lv_name_6_0=RULE_ID
					{
						newLeafNode(lv_name_6_0, grammarAccess.getBusinessLogicSegmentsAccess().getNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBusinessLogicSegmentsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_6_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_7='SecuritySegment'
			{
				newLeafNode(otherlv_7, grammarAccess.getBusinessLogicSegmentsAccess().getSecuritySegmentKeyword_3_0());
			}
			(
				(
					lv_name_8_0=RULE_ID
					{
						newLeafNode(lv_name_8_0, grammarAccess.getBusinessLogicSegmentsAccess().getNameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBusinessLogicSegmentsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_8_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_9='SpecificationSegment'
			{
				newLeafNode(otherlv_9, grammarAccess.getBusinessLogicSegmentsAccess().getSpecificationSegmentKeyword_4_0());
			}
			(
				(
					lv_name_10_0=RULE_ID
					{
						newLeafNode(lv_name_10_0, grammarAccess.getBusinessLogicSegmentsAccess().getNameIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBusinessLogicSegmentsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_10_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBusinessLogicSegmentsAccess().getSpecificationSegmentElementSpecificationSegmentElementParserRuleCall_4_2_0());
					}
					lv_specificationSegmentElement_11_0=ruleSpecificationSegmentElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBusinessLogicSegmentsRule());
						}
						add(
							$current,
							"specificationSegmentElement",
							lv_specificationSegmentElement_11_0,
							"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SpecificationSegmentElement");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)
	)
;

// Entry rule entryRuleControllerSegmentElement
entryRuleControllerSegmentElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControllerSegmentElementRule()); }
	iv_ruleControllerSegmentElement=ruleControllerSegmentElement
	{ $current=$iv_ruleControllerSegmentElement.current; }
	EOF;

// Rule ControllerSegmentElement
ruleControllerSegmentElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='AmazonSegment'
			{
				newLeafNode(otherlv_0, grammarAccess.getControllerSegmentElementAccess().getAmazonSegmentKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getControllerSegmentElementAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getControllerSegmentElementRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_2='ExceptionSegment'
			{
				newLeafNode(otherlv_2, grammarAccess.getControllerSegmentElementAccess().getExceptionSegmentKeyword_1_0());
			}
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getControllerSegmentElementAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getControllerSegmentElementRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSpecificationSegmentElement
entryRuleSpecificationSegmentElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecificationSegmentElementRule()); }
	iv_ruleSpecificationSegmentElement=ruleSpecificationSegmentElement
	{ $current=$iv_ruleSpecificationSegmentElement.current; }
	EOF;

// Rule SpecificationSegmentElement
ruleSpecificationSegmentElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DefinedSearchCriteria'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpecificationSegmentElementAccess().getDefinedSearchCriteriaKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSpecificationSegmentElementAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpecificationSegmentElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationSegmentElementAccess().getCriteriaAttributeTypeCriteriaAttributeTypeParserRuleCall_2_0());
				}
				lv_criteriaAttributeType_2_0=ruleCriteriaAttributeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationSegmentElementRule());
					}
					add(
						$current,
						"criteriaAttributeType",
						lv_criteriaAttributeType_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.CriteriaAttributeType");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleCriteriaAttributeType
entryRuleCriteriaAttributeType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCriteriaAttributeTypeRule()); }
	iv_ruleCriteriaAttributeType=ruleCriteriaAttributeType
	{ $current=$iv_ruleCriteriaAttributeType.current; }
	EOF;

// Rule CriteriaAttributeType
ruleCriteriaAttributeType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CriteriaAttribute'
		{
			newLeafNode(otherlv_0, grammarAccess.getCriteriaAttributeTypeAccess().getCriteriaAttributeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCriteriaAttributeTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCriteriaAttributeTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDataPersistenceLayer
entryRuleDataPersistenceLayer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataPersistenceLayerRule()); }
	iv_ruleDataPersistenceLayer=ruleDataPersistenceLayer
	{ $current=$iv_ruleDataPersistenceLayer.current; }
	EOF;

// Rule DataPersistenceLayer
ruleDataPersistenceLayer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DataPersistenceLayer'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataPersistenceLayerAccess().getDataPersistenceLayerKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataPersistenceLayerAccess().getElementsDataPersistenceContentParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleDataPersistenceContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataPersistenceLayerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.DataPersistenceContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDataPersistenceContent
entryRuleDataPersistenceContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataPersistenceContentRule()); }
	iv_ruleDataPersistenceContent=ruleDataPersistenceContent
	{ $current=$iv_ruleDataPersistenceContent.current; }
	EOF;

// Rule DataPersistenceContent
ruleDataPersistenceContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DataPersistenceSegments'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataPersistenceContentAccess().getDataPersistenceSegmentsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataPersistenceContentAccess().getElementsDataPersistenceSegmentsParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleDataPersistenceSegments
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataPersistenceContentRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.DataPersistenceSegments");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDataPersistenceSegments
entryRuleDataPersistenceSegments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataPersistenceSegmentsRule()); }
	iv_ruleDataPersistenceSegments=ruleDataPersistenceSegments
	{ $current=$iv_ruleDataPersistenceSegments.current; }
	EOF;

// Rule DataPersistenceSegments
ruleDataPersistenceSegments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PostgreSLQSegment'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataPersistenceSegmentsAccess().getPostgreSLQSegmentKeyword_0());
		}
		(
			(
				lv_postSName_1_0=RULE_ID
				{
					newLeafNode(lv_postSName_1_0, grammarAccess.getDataPersistenceSegmentsAccess().getPostSNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataPersistenceSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"postSName",
						lv_postSName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='AmazonS3Storage'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataPersistenceSegmentsAccess().getAmazonS3StorageKeyword_2());
		}
		(
			(
				lv_amazonSName_3_0=RULE_ID
				{
					newLeafNode(lv_amazonSName_3_0, grammarAccess.getDataPersistenceSegmentsAccess().getAmazonSNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataPersistenceSegmentsRule());
					}
					setWithLastConsumed(
						$current,
						"amazonSName",
						lv_amazonSName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSegmentStructure
entryRuleSegmentStructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSegmentStructureRule()); }
	iv_ruleSegmentStructure=ruleSegmentStructure
	{ $current=$iv_ruleSegmentStructure.current; }
	EOF;

// Rule SegmentStructure
ruleSegmentStructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SegmentStructure'
		{
			newLeafNode(otherlv_0, grammarAccess.getSegmentStructureAccess().getSegmentStructureKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSegmentStructureAccess().getElementsSegmentStructureContentParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleSegmentStructureContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSegmentStructureRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SegmentStructureContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSegmentStructureContent
entryRuleSegmentStructureContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSegmentStructureContentRule()); }
	iv_ruleSegmentStructureContent=ruleSegmentStructureContent
	{ $current=$iv_ruleSegmentStructureContent.current; }
	EOF;

// Rule SegmentStructureContent
ruleSegmentStructureContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Directories'
		{
			newLeafNode(otherlv_0, grammarAccess.getSegmentStructureContentAccess().getDirectoriesKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSegmentStructureContentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSegmentStructureContentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSegmentStructureContentAccess().getElementsDirectoryContentParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleDirectoryContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSegmentStructureContentRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.DirectoryContent");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleDirectoryContent
entryRuleDirectoryContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectoryContentRule()); }
	iv_ruleDirectoryContent=ruleDirectoryContent
	{ $current=$iv_ruleDirectoryContent.current; }
	EOF;

// Rule DirectoryContent
ruleDirectoryContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Directory'
			{
				newLeafNode(otherlv_0, grammarAccess.getDirectoryContentAccess().getDirectoryKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getDirectoryContentAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDirectoryContentRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDirectoryContentAccess().getDirectoriesDirectoriesParserRuleCall_0_2_0());
					}
					lv_directories_2_0=ruleDirectories
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDirectoryContentRule());
						}
						add(
							$current,
							"directories",
							lv_directories_2_0,
							"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Directories");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDirectoryContentAccess().getDirectoriesSingleFileParserRuleCall_1_0());
				}
				lv_directories_3_0=ruleSingleFile
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDirectoryContentRule());
					}
					add(
						$current,
						"directories",
						lv_directories_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SingleFile");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDirectories
entryRuleDirectories returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDirectoriesRule()); }
	iv_ruleDirectories=ruleDirectories
	{ $current=$iv_ruleDirectories.current; }
	EOF;

// Rule Directories
ruleDirectories returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDirectoriesAccess().getElementsMultipleFileParserRuleCall_0());
			}
			lv_elements_0_0=ruleMultipleFile
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDirectoriesRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"co.unal.mdd.photos.dsl.SoftGalleryLanguage.MultipleFile");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSingleFile
entryRuleSingleFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleFileRule()); }
	iv_ruleSingleFile=ruleSingleFile
	{ $current=$iv_ruleSingleFile.current; }
	EOF;

// Rule SingleFile
ruleSingleFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SingleFile'
		{
			newLeafNode(otherlv_0, grammarAccess.getSingleFileAccess().getSingleFileKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSingleFileAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleFileRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleMultipleFile
entryRuleMultipleFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipleFileRule()); }
	iv_ruleMultipleFile=ruleMultipleFile
	{ $current=$iv_ruleMultipleFile.current; }
	EOF;

// Rule MultipleFile
ruleMultipleFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CommonFile'
		{
			newLeafNode(otherlv_0, grammarAccess.getMultipleFileAccess().getCommonFileKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMultipleFileAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultipleFileRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleLayerRelations
entryRuleLayerRelations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayerRelationsRule()); }
	iv_ruleLayerRelations=ruleLayerRelations
	{ $current=$iv_ruleLayerRelations.current; }
	EOF;

// Rule LayerRelations
ruleLayerRelations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerRelationsAccess().getLayerelationsRelationTypeParserRuleCall_0_0());
				}
				lv_layerelations_0_0=ruleRelationType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerRelationsRule());
					}
					add(
						$current,
						"layerelations",
						lv_layerelations_0_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.RelationType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLayerRelationsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLayerRelationsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerRelationsAccess().getLayeroriginLayerSourceParserRuleCall_2_0());
				}
				lv_layerorigin_2_0=ruleLayerSource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerRelationsRule());
					}
					add(
						$current,
						"layerorigin",
						lv_layerorigin_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.LayerSource");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerRelationsAccess().getLayertargetLayerTargetParserRuleCall_3_0());
				}
				lv_layertarget_3_0=ruleLayerTarget
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerRelationsRule());
					}
					add(
						$current,
						"layertarget",
						lv_layertarget_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.LayerTarget");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRelationType
entryRuleRelationType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRelationTypeRule()); }
	iv_ruleRelationType=ruleRelationType
	{ $current=$iv_ruleRelationType.current.getText(); }
	EOF;

// Rule RelationType
ruleRelationType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='AllowedToUse'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelationTypeAccess().getAllowedToUseKeyword_0());
		}
		    |
		kw='AllowToUseBelow'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRelationTypeAccess().getAllowToUseBelowKeyword_1());
		}
	)
;

// Entry rule entryRuleLayerSource
entryRuleLayerSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayerSourceRule()); }
	iv_ruleLayerSource=ruleLayerSource
	{ $current=$iv_ruleLayerSource.current; }
	EOF;

// Rule LayerSource
ruleLayerSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='source'
		{
			newLeafNode(otherlv_0, grammarAccess.getLayerSourceAccess().getSourceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerSourceAccess().getLayerelationsLayerRelationNameParserRuleCall_1_0());
				}
				lv_layerelations_1_0=ruleLayerRelationName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerSourceRule());
					}
					add(
						$current,
						"layerelations",
						lv_layerelations_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.LayerRelationName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLayerTarget
entryRuleLayerTarget returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayerTargetRule()); }
	iv_ruleLayerTarget=ruleLayerTarget
	{ $current=$iv_ruleLayerTarget.current; }
	EOF;

// Rule LayerTarget
ruleLayerTarget returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='target'
		{
			newLeafNode(otherlv_0, grammarAccess.getLayerTargetAccess().getTargetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLayerTargetAccess().getLayerelationsLayerRelationNameParserRuleCall_1_0());
				}
				lv_layerelations_1_0=ruleLayerRelationName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayerTargetRule());
					}
					add(
						$current,
						"layerelations",
						lv_layerelations_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.LayerRelationName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLayerRelationName
entryRuleLayerRelationName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLayerRelationNameRule()); }
	iv_ruleLayerRelationName=ruleLayerRelationName
	{ $current=$iv_ruleLayerRelationName.current.getText(); }
	EOF;

// Rule LayerRelationName
ruleLayerRelationName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='PresentationLayer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLayerRelationNameAccess().getPresentationLayerKeyword_0());
		}
		    |
		kw='BusinessLogicLayer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLayerRelationNameAccess().getBusinessLogicLayerKeyword_1());
		}
		    |
		kw='PersistenceDataLayer'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLayerRelationNameAccess().getPersistenceDataLayerKeyword_2());
		}
	)
;

// Entry rule entryRuleArchitectureComponents
entryRuleArchitectureComponents returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArchitectureComponentsRule()); }
	iv_ruleArchitectureComponents=ruleArchitectureComponents
	{ $current=$iv_ruleArchitectureComponents.current; }
	EOF;

// Rule ArchitectureComponents
ruleArchitectureComponents returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SystemComponents'
		{
			newLeafNode(otherlv_0, grammarAccess.getArchitectureComponentsAccess().getSystemComponentsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureComponentsAccess().getArchFeComponentFrontEndParserRuleCall_1_0());
				}
				lv_archFeComponent_1_0=ruleFrontEnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureComponentsRule());
					}
					add(
						$current,
						"archFeComponent",
						lv_archFeComponent_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.FrontEnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureComponentsAccess().getArchBeComponentBackEndParserRuleCall_2_0());
				}
				lv_archBeComponent_2_0=ruleBackEnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureComponentsRule());
					}
					add(
						$current,
						"archBeComponent",
						lv_archBeComponent_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.BackEnd");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArchitectureComponentsAccess().getArchPdComponentPersistenceDataComponentParserRuleCall_3_0());
				}
				lv_archPdComponent_3_0=rulePersistenceDataComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArchitectureComponentsRule());
					}
					add(
						$current,
						"archPdComponent",
						lv_archPdComponent_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.PersistenceDataComponent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFrontEnd
entryRuleFrontEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFrontEndRule()); }
	iv_ruleFrontEnd=ruleFrontEnd
	{ $current=$iv_ruleFrontEnd.current; }
	EOF;

// Rule FrontEnd
ruleFrontEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FrontEndComponent'
		{
			newLeafNode(otherlv_0, grammarAccess.getFrontEndAccess().getFrontEndComponentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFrontEndAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFrontEndRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBackEnd
entryRuleBackEnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBackEndRule()); }
	iv_ruleBackEnd=ruleBackEnd
	{ $current=$iv_ruleBackEnd.current; }
	EOF;

// Rule BackEnd
ruleBackEnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BackEndComponent'
		{
			newLeafNode(otherlv_0, grammarAccess.getBackEndAccess().getBackEndComponentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBackEndAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBackEndRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePersistenceDataComponent
entryRulePersistenceDataComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersistenceDataComponentRule()); }
	iv_rulePersistenceDataComponent=rulePersistenceDataComponent
	{ $current=$iv_rulePersistenceDataComponent.current; }
	EOF;

// Rule PersistenceDataComponent
rulePersistenceDataComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PersistenceDataComponent'
		{
			newLeafNode(otherlv_0, grammarAccess.getPersistenceDataComponentAccess().getPersistenceDataComponentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPersistenceDataComponentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPersistenceDataComponentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleNTiersConnections
entryRuleNTiersConnections returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNTiersConnectionsRule()); }
	iv_ruleNTiersConnections=ruleNTiersConnections
	{ $current=$iv_ruleNTiersConnections.current; }
	EOF;

// Rule NTiersConnections
ruleNTiersConnections returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Connectors'
		{
			newLeafNode(otherlv_0, grammarAccess.getNTiersConnectionsAccess().getConnectorsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNTiersConnectionsAccess().getNtierconnectionsNTierConnectionContentParserRuleCall_1_0());
				}
				lv_ntierconnections_1_0=ruleNTierConnectionContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTiersConnectionsRule());
					}
					add(
						$current,
						"ntierconnections",
						lv_ntierconnections_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.NTierConnectionContent");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleNTierConnectionContent
entryRuleNTierConnectionContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNTierConnectionContentRule()); }
	iv_ruleNTierConnectionContent=ruleNTierConnectionContent
	{ $current=$iv_ruleNTierConnectionContent.current; }
	EOF;

// Rule NTierConnectionContent
ruleNTierConnectionContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNTierConnectionContentAccess().getNtierconnectionConnectionTypeParserRuleCall_0_0());
				}
				lv_ntierconnection_0_0=ruleConnectionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTierConnectionContentRule());
					}
					add(
						$current,
						"ntierconnection",
						lv_ntierconnection_0_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ConnectionType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_nTierName_1_0=RULE_ID
				{
					newLeafNode(lv_nTierName_1_0, grammarAccess.getNTierConnectionContentAccess().getNTierNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNTierConnectionContentRule());
					}
					setWithLastConsumed(
						$current,
						"nTierName",
						lv_nTierName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNTierConnectionContentAccess().getNtieroriginNTierSourceParserRuleCall_2_0());
				}
				lv_ntierorigin_2_0=ruleNTierSource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTierConnectionContentRule());
					}
					add(
						$current,
						"ntierorigin",
						lv_ntierorigin_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.NTierSource");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNTierConnectionContentAccess().getNtiertargetNTierTargetParserRuleCall_3_0());
				}
				lv_ntiertarget_3_0=ruleNTierTarget
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTierConnectionContentRule());
					}
					add(
						$current,
						"ntiertarget",
						lv_ntiertarget_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.NTierTarget");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConnectionType
entryRuleConnectionType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConnectionTypeRule()); }
	iv_ruleConnectionType=ruleConnectionType
	{ $current=$iv_ruleConnectionType.current.getText(); }
	EOF;

// Rule ConnectionType
ruleConnectionType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='REST'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConnectionTypeAccess().getRESTKeyword_0());
		}
		    |
		kw='PostgreSQLConnection'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConnectionTypeAccess().getPostgreSQLConnectionKeyword_1());
		}
		    |
		kw='AmazonS3API'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConnectionTypeAccess().getAmazonS3APIKeyword_2());
		}
	)
;

// Entry rule entryRuleNTierSource
entryRuleNTierSource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNTierSourceRule()); }
	iv_ruleNTierSource=ruleNTierSource
	{ $current=$iv_ruleNTierSource.current; }
	EOF;

// Rule NTierSource
ruleNTierSource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='source'
		{
			newLeafNode(otherlv_0, grammarAccess.getNTierSourceAccess().getSourceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNTierSourceAccess().getNtierconnectionNTiersRelationsParserRuleCall_1_0());
				}
				lv_ntierconnection_1_0=ruleNTiersRelations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTierSourceRule());
					}
					add(
						$current,
						"ntierconnection",
						lv_ntierconnection_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.NTiersRelations");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNTierTarget
entryRuleNTierTarget returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNTierTargetRule()); }
	iv_ruleNTierTarget=ruleNTierTarget
	{ $current=$iv_ruleNTierTarget.current; }
	EOF;

// Rule NTierTarget
ruleNTierTarget returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='target'
		{
			newLeafNode(otherlv_0, grammarAccess.getNTierTargetAccess().getTargetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNTierTargetAccess().getNtierconnectionNTiersRelationsParserRuleCall_1_0());
				}
				lv_ntierconnection_1_0=ruleNTiersRelations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNTierTargetRule());
					}
					add(
						$current,
						"ntierconnection",
						lv_ntierconnection_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.NTiersRelations");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNTiersRelations
entryRuleNTiersRelations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNTiersRelationsRule()); }
	iv_ruleNTiersRelations=ruleNTiersRelations
	{ $current=$iv_ruleNTiersRelations.current; }
	EOF;

// Rule NTiersRelations
ruleNTiersRelations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='FrontEndComponent'
			{
				newLeafNode(otherlv_0, grammarAccess.getNTiersRelationsAccess().getFrontEndComponentKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getNTiersRelationsAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNTiersRelationsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_2='BackEndComponent'
			{
				newLeafNode(otherlv_2, grammarAccess.getNTiersRelationsAccess().getBackEndComponentKeyword_1_0());
			}
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getNTiersRelationsAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNTiersRelationsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_4='PersistenceDataComponent'
			{
				newLeafNode(otherlv_4, grammarAccess.getNTiersRelationsAccess().getPersistenceDataComponentKeyword_2_0());
			}
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getNTiersRelationsAccess().getNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNTiersRelationsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_6='AmazonService'
			{
				newLeafNode(otherlv_6, grammarAccess.getNTiersRelationsAccess().getAmazonServiceKeyword_3_0());
			}
			(
				(
					lv_name_7_0=RULE_ID
					{
						newLeafNode(lv_name_7_0, grammarAccess.getNTiersRelationsAccess().getNameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNTiersRelationsRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleTechnology
entryRuleTechnology returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologyRule()); }
	iv_ruleTechnology=ruleTechnology
	{ $current=$iv_ruleTechnology.current; }
	EOF;

// Rule Technology
ruleTechnology returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Technology'
		{
			newLeafNode(otherlv_0, grammarAccess.getTechnologyAccess().getTechnologyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTechnologyAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTechnologyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getTechnologyAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTechnologyAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTechnologyAccess().getElementsTechnologiesParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleTechnologies
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTechnologyRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Technologies");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTechnologyAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleTechnologies
entryRuleTechnologies returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTechnologiesRule()); }
	iv_ruleTechnologies=ruleTechnologies
	{ $current=$iv_ruleTechnologies.current; }
	EOF;

// Rule Technologies
ruleTechnologies returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTechnologiesAccess().getTechspringSpringParserRuleCall_0_0());
				}
				lv_techspring_0_0=ruleSpring
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTechnologiesRule());
					}
					add(
						$current,
						"techspring",
						lv_techspring_0_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Spring");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTechnologiesAccess().getTechreactReactParserRuleCall_1_0());
				}
				lv_techreact_1_0=ruleReact
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTechnologiesRule());
					}
					add(
						$current,
						"techreact",
						lv_techreact_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.React");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTechnologiesAccess().getTechpostgresqlPostgreSQLParserRuleCall_2_0());
				}
				lv_techpostgresql_2_0=rulePostgreSQL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTechnologiesRule());
					}
					add(
						$current,
						"techpostgresql",
						lv_techpostgresql_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.PostgreSQL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTechnologiesAccess().getTechamazonAmazonWebServicesParserRuleCall_3_0());
				}
				lv_techamazon_3_0=ruleAmazonWebServices
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTechnologiesRule());
					}
					add(
						$current,
						"techamazon",
						lv_techamazon_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.AmazonWebServices");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSpring
entryRuleSpring returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpringRule()); }
	iv_ruleSpring=ruleSpring
	{ $current=$iv_ruleSpring.current; }
	EOF;

// Rule Spring
ruleSpring returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Spring'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpringAccess().getSpringKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSpringAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpringRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSpringAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSpringAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringAccess().getElementsSpringBootApplicationParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleSpringBootApplication
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SpringBootApplication");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSpringAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSpringBootApplication
entryRuleSpringBootApplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpringBootApplicationRule()); }
	iv_ruleSpringBootApplication=ruleSpringBootApplication
	{ $current=$iv_ruleSpringBootApplication.current; }
	EOF;

// Rule SpringBootApplication
ruleSpringBootApplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SpringBootApplication'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpringBootApplicationAccess().getSpringBootApplicationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringBootApplicationAccess().getElementsConfigurationParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringBootApplicationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Configuration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringBootApplicationAccess().getElementsSpringComponentParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleSpringComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringBootApplicationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SpringComponent");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringBootApplicationAccess().getElementsSpringRepositoryParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleSpringRepository
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringBootApplicationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SpringRepository");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringBootApplicationAccess().getElementsRestControllerParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleRestController
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringBootApplicationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.RestController");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringBootApplicationAccess().getElementsSpringEntityParserRuleCall_5_0());
				}
				lv_elements_5_0=ruleSpringEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringBootApplicationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_5_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SpringEntity");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringBootApplicationAccess().getElementsStorageClientParserRuleCall_6_0());
				}
				lv_elements_6_0=ruleStorageClient
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringBootApplicationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_6_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.StorageClient");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConfiguration
entryRuleConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationRule()); }
	iv_ruleConfiguration=ruleConfiguration
	{ $current=$iv_ruleConfiguration.current; }
	EOF;

// Rule Configuration
ruleConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Configuration'
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigurationAccess().getConfigurationKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigurationAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getElementsEnableGlobalMethodSecurityParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleEnableGlobalMethodSecurity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.EnableGlobalMethodSecurity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getElementsEnableAuthorizationServerParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleEnableAuthorizationServer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.EnableAuthorizationServer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getElementsEnableResourceServerParserRuleCall_5_0());
				}
				lv_elements_5_0=ruleEnableResourceServer
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_5_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.EnableResourceServer");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationAccess().getElementsEnableWebSecurityParserRuleCall_6_0());
				}
				lv_elements_6_0=ruleEnableWebSecurity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_6_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.EnableWebSecurity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleEnableGlobalMethodSecurity
entryRuleEnableGlobalMethodSecurity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnableGlobalMethodSecurityRule()); }
	iv_ruleEnableGlobalMethodSecurity=ruleEnableGlobalMethodSecurity
	{ $current=$iv_ruleEnableGlobalMethodSecurity.current; }
	EOF;

// Rule EnableGlobalMethodSecurity
ruleEnableGlobalMethodSecurity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EnableGlobalMethodSecurity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnableGlobalMethodSecurityAccess().getEnableGlobalMethodSecurityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnableGlobalMethodSecurityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnableGlobalMethodSecurityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEnableAuthorizationServer
entryRuleEnableAuthorizationServer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnableAuthorizationServerRule()); }
	iv_ruleEnableAuthorizationServer=ruleEnableAuthorizationServer
	{ $current=$iv_ruleEnableAuthorizationServer.current; }
	EOF;

// Rule EnableAuthorizationServer
ruleEnableAuthorizationServer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EnableAuthorizationServer'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnableAuthorizationServerAccess().getEnableAuthorizationServerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnableAuthorizationServerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnableAuthorizationServerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEnableResourceServer
entryRuleEnableResourceServer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnableResourceServerRule()); }
	iv_ruleEnableResourceServer=ruleEnableResourceServer
	{ $current=$iv_ruleEnableResourceServer.current; }
	EOF;

// Rule EnableResourceServer
ruleEnableResourceServer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EnableResourceServer'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnableResourceServerAccess().getEnableResourceServerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnableResourceServerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnableResourceServerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEnableWebSecurity
entryRuleEnableWebSecurity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnableWebSecurityRule()); }
	iv_ruleEnableWebSecurity=ruleEnableWebSecurity
	{ $current=$iv_ruleEnableWebSecurity.current; }
	EOF;

// Rule EnableWebSecurity
ruleEnableWebSecurity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EnableWebSecurity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnableWebSecurityAccess().getEnableWebSecurityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnableWebSecurityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnableWebSecurityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSpringComponent
entryRuleSpringComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpringComponentRule()); }
	iv_ruleSpringComponent=ruleSpringComponent
	{ $current=$iv_ruleSpringComponent.current; }
	EOF;

// Rule SpringComponent
ruleSpringComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SpringComponent'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpringComponentAccess().getSpringComponentKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSpringComponentAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSpringComponentAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringComponentAccess().getElementsOrderSpringParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleOrderSpring
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringComponentRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.OrderSpring");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSpringComponentAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleOrderSpring
entryRuleOrderSpring returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderSpringRule()); }
	iv_ruleOrderSpring=ruleOrderSpring
	{ $current=$iv_ruleOrderSpring.current; }
	EOF;

// Rule OrderSpring
ruleOrderSpring returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='OrderSpring'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrderSpringAccess().getOrderSpringKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOrderSpringAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOrderSpringRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSpringRepository
entryRuleSpringRepository returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpringRepositoryRule()); }
	iv_ruleSpringRepository=ruleSpringRepository
	{ $current=$iv_ruleSpringRepository.current; }
	EOF;

// Rule SpringRepository
ruleSpringRepository returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SpringRepositories'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpringRepositoryAccess().getSpringRepositoriesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSpringRepositoryAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSpringRepositoryAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringRepositoryAccess().getElementsSpringRepositoriesParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleSpringRepositories
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringRepositoryRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SpringRepositories");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringRepositoryAccess().getElementsSpringRepositoryAnnotationParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleSpringRepositoryAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringRepositoryRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SpringRepositoryAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getSpringRepositoryAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSpringRepositories
entryRuleSpringRepositories returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpringRepositoriesRule()); }
	iv_ruleSpringRepositories=ruleSpringRepositories
	{ $current=$iv_ruleSpringRepositories.current; }
	EOF;

// Rule SpringRepositories
ruleSpringRepositories returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SpringRepository'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpringRepositoriesAccess().getSpringRepositoryKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSpringRepositoriesAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpringRepositoriesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSpringRepositoryAnnotation
entryRuleSpringRepositoryAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpringRepositoryAnnotationRule()); }
	iv_ruleSpringRepositoryAnnotation=ruleSpringRepositoryAnnotation
	{ $current=$iv_ruleSpringRepositoryAnnotation.current; }
	EOF;

// Rule SpringRepositoryAnnotation
ruleSpringRepositoryAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SpringRepositoryAnnotation'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpringRepositoryAnnotationAccess().getSpringRepositoryAnnotationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSpringRepositoryAnnotationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpringRepositoryAnnotationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleRestController
entryRuleRestController returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRestControllerRule()); }
	iv_ruleRestController=ruleRestController
	{ $current=$iv_ruleRestController.current; }
	EOF;

// Rule RestController
ruleRestController returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RestController'
		{
			newLeafNode(otherlv_0, grammarAccess.getRestControllerAccess().getRestControllerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRestControllerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRestControllerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getRestControllerAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getRestControllerAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRestControllerAccess().getElementsSpecificationParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRestControllerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Specification");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRestControllerAccess().getElementsAutowiredParserRuleCall_5_0());
				}
				lv_elements_5_0=ruleAutowired
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRestControllerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_5_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Autowired");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRestControllerAccess().getElementsResponseEntityParserRuleCall_6_0());
				}
				lv_elements_6_0=ruleResponseEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRestControllerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_6_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ResponseEntity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRestControllerAccess().getElementsExceptionHandlerParserRuleCall_7_0());
				}
				lv_elements_7_0=ruleExceptionHandler
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRestControllerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_7_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ExceptionHandler");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getRestControllerAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleSpecification
entryRuleSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecificationRule()); }
	iv_ruleSpecification=ruleSpecification
	{ $current=$iv_ruleSpecification.current; }
	EOF;

// Rule Specification
ruleSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Specification'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpecificationAccess().getSpecificationKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationAccess().getElementsPredicateParserRuleCall_1_0());
				}
				lv_elements_1_0=rulePredicate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Predicate");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationAccess().getElementsSearchCriteriaParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleSearchCriteria
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SearchCriteria");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePredicate
entryRulePredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicateRule()); }
	iv_rulePredicate=rulePredicate
	{ $current=$iv_rulePredicate.current; }
	EOF;

// Rule Predicate
rulePredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Predicate'
		{
			newLeafNode(otherlv_0, grammarAccess.getPredicateAccess().getPredicateKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPredicateAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredicateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSearchCriteria
entryRuleSearchCriteria returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSearchCriteriaRule()); }
	iv_ruleSearchCriteria=ruleSearchCriteria
	{ $current=$iv_ruleSearchCriteria.current; }
	EOF;

// Rule SearchCriteria
ruleSearchCriteria returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SearchCriteria'
		{
			newLeafNode(otherlv_0, grammarAccess.getSearchCriteriaAccess().getSearchCriteriaKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSearchCriteriaAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSearchCriteriaRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAutowired
entryRuleAutowired returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAutowiredRule()); }
	iv_ruleAutowired=ruleAutowired
	{ $current=$iv_ruleAutowired.current; }
	EOF;

// Rule Autowired
ruleAutowired returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Autowired'
		{
			newLeafNode(otherlv_0, grammarAccess.getAutowiredAccess().getAutowiredKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAutowiredAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAutowiredRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleResponseEntity
entryRuleResponseEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResponseEntityRule()); }
	iv_ruleResponseEntity=ruleResponseEntity
	{ $current=$iv_ruleResponseEntity.current; }
	EOF;

// Rule ResponseEntity
ruleResponseEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ResponseEntity'
		{
			newLeafNode(otherlv_0, grammarAccess.getResponseEntityAccess().getResponseEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getResponseEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResponseEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getResponseEntityAccess().getTypeMappingTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleMappingType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResponseEntityRule());
					}
					add(
						$current,
						"type",
						lv_type_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.MappingType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getResponseEntityAccess().getElementsResponseParameterParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleResponseParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResponseEntityRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ResponseParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleMappingType
entryRuleMappingType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingTypeRule()); }
	iv_ruleMappingType=ruleMappingType
	{ $current=$iv_ruleMappingType.current; }
	EOF;

// Rule MappingType
ruleMappingType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMappingTypeAccess().getRequestMappingParserRuleCall_0());
		}
		this_RequestMapping_0=ruleRequestMapping
		{
			$current = $this_RequestMapping_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMappingTypeAccess().getPostMappingParserRuleCall_1());
		}
		this_PostMapping_1=rulePostMapping
		{
			$current = $this_PostMapping_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMappingTypeAccess().getGetMappingParserRuleCall_2());
		}
		this_GetMapping_2=ruleGetMapping
		{
			$current = $this_GetMapping_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMappingTypeAccess().getPutMappingParserRuleCall_3());
		}
		this_PutMapping_3=rulePutMapping
		{
			$current = $this_PutMapping_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMappingTypeAccess().getDeleteMappingParserRuleCall_4());
		}
		this_DeleteMapping_4=ruleDeleteMapping
		{
			$current = $this_DeleteMapping_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRequestMapping
entryRuleRequestMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequestMappingRule()); }
	iv_ruleRequestMapping=ruleRequestMapping
	{ $current=$iv_ruleRequestMapping.current; }
	EOF;

// Rule RequestMapping
ruleRequestMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RequestMapping'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequestMappingAccess().getRequestMappingKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRequestMappingAccess().getValueRequestMappingValueParserRuleCall_1_0());
				}
				lv_value_1_0=ruleRequestMappingValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequestMappingRule());
					}
					add(
						$current,
						"value",
						lv_value_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.RequestMappingValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRequestMappingAccess().getMethodRequestMappingMethodParserRuleCall_2_0());
				}
				lv_method_2_0=ruleRequestMappingMethod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequestMappingRule());
					}
					add(
						$current,
						"method",
						lv_method_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.RequestMappingMethod");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRequestMappingAccess().getProducesRequestMappingProducesParserRuleCall_3_0());
				}
				lv_produces_3_0=ruleRequestMappingProduces
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequestMappingRule());
					}
					add(
						$current,
						"produces",
						lv_produces_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.RequestMappingProduces");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRequestMappingValue
entryRuleRequestMappingValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequestMappingValueRule()); }
	iv_ruleRequestMappingValue=ruleRequestMappingValue
	{ $current=$iv_ruleRequestMappingValue.current; }
	EOF;

// Rule RequestMappingValue
ruleRequestMappingValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Value'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequestMappingValueAccess().getValueKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRequestMappingValueAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequestMappingValueRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleRequestMappingMethod
entryRuleRequestMappingMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequestMappingMethodRule()); }
	iv_ruleRequestMappingMethod=ruleRequestMappingMethod
	{ $current=$iv_ruleRequestMappingMethod.current; }
	EOF;

// Rule RequestMappingMethod
ruleRequestMappingMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Method'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequestMappingMethodAccess().getMethodKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRequestMappingMethodAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequestMappingMethodRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleRequestMappingProduces
entryRuleRequestMappingProduces returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequestMappingProducesRule()); }
	iv_ruleRequestMappingProduces=ruleRequestMappingProduces
	{ $current=$iv_ruleRequestMappingProduces.current; }
	EOF;

// Rule RequestMappingProduces
ruleRequestMappingProduces returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Produces'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequestMappingProducesAccess().getProducesKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRequestMappingProducesAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequestMappingProducesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePostMapping
entryRulePostMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostMappingRule()); }
	iv_rulePostMapping=rulePostMapping
	{ $current=$iv_rulePostMapping.current; }
	EOF;

// Rule PostMapping
rulePostMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PostMapping'
		{
			newLeafNode(otherlv_0, grammarAccess.getPostMappingAccess().getPostMappingKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPostMappingAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPostMappingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleGetMapping
entryRuleGetMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetMappingRule()); }
	iv_ruleGetMapping=ruleGetMapping
	{ $current=$iv_ruleGetMapping.current; }
	EOF;

// Rule GetMapping
ruleGetMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GetMapping'
		{
			newLeafNode(otherlv_0, grammarAccess.getGetMappingAccess().getGetMappingKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGetMappingAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGetMappingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePutMapping
entryRulePutMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPutMappingRule()); }
	iv_rulePutMapping=rulePutMapping
	{ $current=$iv_rulePutMapping.current; }
	EOF;

// Rule PutMapping
rulePutMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PutMapping'
		{
			newLeafNode(otherlv_0, grammarAccess.getPutMappingAccess().getPutMappingKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPutMappingAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPutMappingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDeleteMapping
entryRuleDeleteMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteMappingRule()); }
	iv_ruleDeleteMapping=ruleDeleteMapping
	{ $current=$iv_ruleDeleteMapping.current; }
	EOF;

// Rule DeleteMapping
ruleDeleteMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DeleteMapping'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeleteMappingAccess().getDeleteMappingKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDeleteMappingAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeleteMappingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleResponseParameter
entryRuleResponseParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResponseParameterRule()); }
	iv_ruleResponseParameter=ruleResponseParameter
	{ $current=$iv_ruleResponseParameter.current; }
	EOF;

// Rule ResponseParameter
ruleResponseParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Parameter'
		{
			newLeafNode(otherlv_0, grammarAccess.getResponseParameterAccess().getParameterKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResponseParameterAccess().getElementsResponseParameterAnnotationParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleResponseParameterAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResponseParameterRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ResponseParameterAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getResponseParameterAccess().getElementsResponseParameterTypeParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleResponseParameterType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResponseParameterRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ResponseParameterType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getResponseParameterAccess().getElementsResponseParameterNameParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleResponseParameterName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResponseParameterRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ResponseParameterName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleResponseParameterAnnotation
entryRuleResponseParameterAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResponseParameterAnnotationRule()); }
	iv_ruleResponseParameterAnnotation=ruleResponseParameterAnnotation
	{ $current=$iv_ruleResponseParameterAnnotation.current; }
	EOF;

// Rule ResponseParameterAnnotation
ruleResponseParameterAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Annotation'
		{
			newLeafNode(otherlv_0, grammarAccess.getResponseParameterAnnotationAccess().getAnnotationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getResponseParameterAnnotationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResponseParameterAnnotationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleResponseParameterType
entryRuleResponseParameterType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResponseParameterTypeRule()); }
	iv_ruleResponseParameterType=ruleResponseParameterType
	{ $current=$iv_ruleResponseParameterType.current; }
	EOF;

// Rule ResponseParameterType
ruleResponseParameterType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Type'
		{
			newLeafNode(otherlv_0, grammarAccess.getResponseParameterTypeAccess().getTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getResponseParameterTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResponseParameterTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleResponseParameterName
entryRuleResponseParameterName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResponseParameterNameRule()); }
	iv_ruleResponseParameterName=ruleResponseParameterName
	{ $current=$iv_ruleResponseParameterName.current; }
	EOF;

// Rule ResponseParameterName
ruleResponseParameterName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Name'
		{
			newLeafNode(otherlv_0, grammarAccess.getResponseParameterNameAccess().getNameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getResponseParameterNameAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResponseParameterNameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleExceptionHandler
entryRuleExceptionHandler returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionHandlerRule()); }
	iv_ruleExceptionHandler=ruleExceptionHandler
	{ $current=$iv_ruleExceptionHandler.current; }
	EOF;

// Rule ExceptionHandler
ruleExceptionHandler returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ExceptionHandler'
		{
			newLeafNode(otherlv_0, grammarAccess.getExceptionHandlerAccess().getExceptionHandlerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getExceptionHandlerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExceptionHandlerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExceptionHandlerAccess().getElementsExceptionProcessParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleExceptionProcess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExceptionHandlerRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ExceptionProcess");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleExceptionProcess
entryRuleExceptionProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionProcessRule()); }
	iv_ruleExceptionProcess=ruleExceptionProcess
	{ $current=$iv_ruleExceptionProcess.current; }
	EOF;

// Rule ExceptionProcess
ruleExceptionProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ExceptionProcess'
		{
			newLeafNode(otherlv_0, grammarAccess.getExceptionProcessAccess().getExceptionProcessKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getExceptionProcessAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExceptionProcessRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSpringEntity
entryRuleSpringEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpringEntityRule()); }
	iv_ruleSpringEntity=ruleSpringEntity
	{ $current=$iv_ruleSpringEntity.current; }
	EOF;

// Rule SpringEntity
ruleSpringEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SpringEntity'
		{
			newLeafNode(otherlv_0, grammarAccess.getSpringEntityAccess().getSpringEntityKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSpringEntityAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSpringEntityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpringEntityAccess().getSpringEntityAnnotationTypesSpringEntityAnnotationTypesParserRuleCall_3_0());
				}
				lv_springEntityAnnotationTypes_3_0=ruleSpringEntityAnnotationTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpringEntityRule());
					}
					add(
						$current,
						"springEntityAnnotationTypes",
						lv_springEntityAnnotationTypes_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SpringEntityAnnotationTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSpringEntityAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSpringEntityAnnotationTypes
entryRuleSpringEntityAnnotationTypes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpringEntityAnnotationTypesRule()); }
	iv_ruleSpringEntityAnnotationTypes=ruleSpringEntityAnnotationTypes
	{ $current=$iv_ruleSpringEntityAnnotationTypes.current; }
	EOF;

// Rule SpringEntityAnnotationTypes
ruleSpringEntityAnnotationTypes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='EntityAnnotation'
			{
				newLeafNode(otherlv_0, grammarAccess.getSpringEntityAnnotationTypesAccess().getEntityAnnotationKeyword_0_0());
			}
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getSpringEntityAnnotationTypesAccess().getNameIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSpringEntityAnnotationTypesRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_2='TableAnnotation'
			{
				newLeafNode(otherlv_2, grammarAccess.getSpringEntityAnnotationTypesAccess().getTableAnnotationKeyword_1_0());
			}
			(
				(
					lv_name_3_0=RULE_ID
					{
						newLeafNode(lv_name_3_0, grammarAccess.getSpringEntityAnnotationTypesAccess().getNameIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSpringEntityAnnotationTypesRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_4='IdAnnotation'
			{
				newLeafNode(otherlv_4, grammarAccess.getSpringEntityAnnotationTypesAccess().getIdAnnotationKeyword_2_0());
			}
			(
				(
					lv_name_5_0=RULE_ID
					{
						newLeafNode(lv_name_5_0, grammarAccess.getSpringEntityAnnotationTypesAccess().getNameIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSpringEntityAnnotationTypesRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_5_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_6='GeneratedValueAnnotation'
			{
				newLeafNode(otherlv_6, grammarAccess.getSpringEntityAnnotationTypesAccess().getGeneratedValueAnnotationKeyword_3_0());
			}
			(
				(
					lv_name_7_0=RULE_ID
					{
						newLeafNode(lv_name_7_0, grammarAccess.getSpringEntityAnnotationTypesAccess().getNameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSpringEntityAnnotationTypesRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_7_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_8='ColumnAnnotation'
			{
				newLeafNode(otherlv_8, grammarAccess.getSpringEntityAnnotationTypesAccess().getColumnAnnotationKeyword_4_0());
			}
			(
				(
					lv_name_9_0=RULE_ID
					{
						newLeafNode(lv_name_9_0, grammarAccess.getSpringEntityAnnotationTypesAccess().getNameIDTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSpringEntityAnnotationTypesRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_9_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		    |
		(
			otherlv_10='OverrideAnnotation'
			{
				newLeafNode(otherlv_10, grammarAccess.getSpringEntityAnnotationTypesAccess().getOverrideAnnotationKeyword_5_0());
			}
			(
				(
					lv_name_11_0=RULE_ID
					{
						newLeafNode(lv_name_11_0, grammarAccess.getSpringEntityAnnotationTypesAccess().getNameIDTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSpringEntityAnnotationTypesRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_11_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleStorageClient
entryRuleStorageClient returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageClientRule()); }
	iv_ruleStorageClient=ruleStorageClient
	{ $current=$iv_ruleStorageClient.current; }
	EOF;

// Rule StorageClient
ruleStorageClient returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='StorageClient'
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageClientAccess().getStorageClientKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStorageClientAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageClientRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStorageClientAccess().getElementsStorageMemberParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleStorageMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStorageClientRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.StorageMember");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getStorageClientAccess().getElementsStorageActionParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleStorageAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStorageClientRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.StorageAction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleStorageMember
entryRuleStorageMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageMemberRule()); }
	iv_ruleStorageMember=ruleStorageMember
	{ $current=$iv_ruleStorageMember.current; }
	EOF;

// Rule StorageMember
ruleStorageMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='StorageMember'
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageMemberAccess().getStorageMemberKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStorageMemberAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMemberRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStorageMemberAccess().getElementsStorageMemberTypeParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleStorageMemberType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStorageMemberRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.StorageMemberType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStorageMemberAccess().getElementsStorageMemberAnnotationParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleStorageMemberAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStorageMemberRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.StorageMemberAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleStorageMemberType
entryRuleStorageMemberType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageMemberTypeRule()); }
	iv_ruleStorageMemberType=ruleStorageMemberType
	{ $current=$iv_ruleStorageMemberType.current; }
	EOF;

// Rule StorageMemberType
ruleStorageMemberType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='StorageMemberType'
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageMemberTypeAccess().getStorageMemberTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStorageMemberTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMemberTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleStorageMemberAnnotation
entryRuleStorageMemberAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageMemberAnnotationRule()); }
	iv_ruleStorageMemberAnnotation=ruleStorageMemberAnnotation
	{ $current=$iv_ruleStorageMemberAnnotation.current; }
	EOF;

// Rule StorageMemberAnnotation
ruleStorageMemberAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='StorageMemberAnnotation'
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageMemberAnnotationAccess().getStorageMemberAnnotationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStorageMemberAnnotationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageMemberAnnotationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleStorageAction
entryRuleStorageAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageActionRule()); }
	iv_ruleStorageAction=ruleStorageAction
	{ $current=$iv_ruleStorageAction.current; }
	EOF;

// Rule StorageAction
ruleStorageAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='StorageAction'
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageActionAccess().getStorageActionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStorageActionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStorageActionAccess().getElementsStorageActionReturnParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleStorageActionReturn
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStorageActionRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.StorageActionReturn");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStorageActionAccess().getElementsStorageActionAnnotationParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleStorageActionAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStorageActionRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.StorageActionAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getStorageActionAccess().getElementsStorageActionMemberParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleStorageActionMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStorageActionRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.StorageActionMember");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleStorageActionAnnotation
entryRuleStorageActionAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageActionAnnotationRule()); }
	iv_ruleStorageActionAnnotation=ruleStorageActionAnnotation
	{ $current=$iv_ruleStorageActionAnnotation.current; }
	EOF;

// Rule StorageActionAnnotation
ruleStorageActionAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='StorageActionAnnotation'
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageActionAnnotationAccess().getStorageActionAnnotationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStorageActionAnnotationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageActionAnnotationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleStorageActionReturn
entryRuleStorageActionReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageActionReturnRule()); }
	iv_ruleStorageActionReturn=ruleStorageActionReturn
	{ $current=$iv_ruleStorageActionReturn.current; }
	EOF;

// Rule StorageActionReturn
ruleStorageActionReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='StorageActionReturn'
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageActionReturnAccess().getStorageActionReturnKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStorageActionReturnAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageActionReturnRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleStorageActionMember
entryRuleStorageActionMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageActionMemberRule()); }
	iv_ruleStorageActionMember=ruleStorageActionMember
	{ $current=$iv_ruleStorageActionMember.current; }
	EOF;

// Rule StorageActionMember
ruleStorageActionMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='StorageActionMember'
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageActionMemberAccess().getStorageActionMemberKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStorageActionMemberAccess().getElementsStorageActionMemberTypeParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleStorageActionMemberType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStorageActionMemberRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.StorageActionMemberType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStorageActionMemberAccess().getElementsStorageActionMemberNameParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleStorageActionMemberName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStorageActionMemberRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.StorageActionMemberName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStorageActionMemberType
entryRuleStorageActionMemberType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageActionMemberTypeRule()); }
	iv_ruleStorageActionMemberType=ruleStorageActionMemberType
	{ $current=$iv_ruleStorageActionMemberType.current; }
	EOF;

// Rule StorageActionMemberType
ruleStorageActionMemberType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Type'
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageActionMemberTypeAccess().getTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStorageActionMemberTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageActionMemberTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleStorageActionMemberName
entryRuleStorageActionMemberName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageActionMemberNameRule()); }
	iv_ruleStorageActionMemberName=ruleStorageActionMemberName
	{ $current=$iv_ruleStorageActionMemberName.current; }
	EOF;

// Rule StorageActionMemberName
ruleStorageActionMemberName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Name'
		{
			newLeafNode(otherlv_0, grammarAccess.getStorageActionMemberNameAccess().getNameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStorageActionMemberNameAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStorageActionMemberNameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleReact
entryRuleReact returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactRule()); }
	iv_ruleReact=ruleReact
	{ $current=$iv_ruleReact.current; }
	EOF;

// Rule React
ruleReact returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='React'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactAccess().getReactKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReactAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getReactAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactAccess().getReactsReactModulesParserRuleCall_4_0());
				}
				lv_reacts_4_0=ruleReactModules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactRule());
					}
					add(
						$current,
						"reacts",
						lv_reacts_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactModules");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getReactAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleReactModules
entryRuleReactModules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactModulesRule()); }
	iv_ruleReactModules=ruleReactModules
	{ $current=$iv_ruleReactModules.current; }
	EOF;

// Rule ReactModules
ruleReactModules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactModules'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactModulesAccess().getReactModulesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactModulesAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactModulesAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactModulesAccess().getReactmodulesReactSubModulesParserRuleCall_3_0());
				}
				lv_reactmodules_3_0=ruleReactSubModules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactModulesRule());
					}
					add(
						$current,
						"reactmodules",
						lv_reactmodules_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactSubModules");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getReactModulesAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleReactSubModules
entryRuleReactSubModules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactSubModulesRule()); }
	iv_ruleReactSubModules=ruleReactSubModules
	{ $current=$iv_ruleReactSubModules.current; }
	EOF;

// Rule ReactSubModules
ruleReactSubModules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReactSubModulesAccess().getReactmodulesconfReactConfigurationParserRuleCall_0_0());
				}
				lv_reactmodulesconf_0_0=ruleReactConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactSubModulesRule());
					}
					add(
						$current,
						"reactmodulesconf",
						lv_reactmodulesconf_0_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactConfiguration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactSubModulesAccess().getReactmodulescompReactComponentsParserRuleCall_1_0());
				}
				lv_reactmodulescomp_1_0=ruleReactComponents
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactSubModulesRule());
					}
					add(
						$current,
						"reactmodulescomp",
						lv_reactmodulescomp_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactComponents");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactSubModulesAccess().getReactmodulesactReactActionsParserRuleCall_2_0());
				}
				lv_reactmodulesact_2_0=ruleReactActions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactSubModulesRule());
					}
					add(
						$current,
						"reactmodulesact",
						lv_reactmodulesact_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactActions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactSubModulesAccess().getReactmoduleslibReactLibrariesParserRuleCall_3_0());
				}
				lv_reactmoduleslib_3_0=ruleReactLibraries
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactSubModulesRule());
					}
					add(
						$current,
						"reactmoduleslib",
						lv_reactmoduleslib_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactLibraries");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactSubModulesAccess().getReactmodulesinfReactInfoParserRuleCall_4_0());
				}
				lv_reactmodulesinf_4_0=ruleReactInfo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactSubModulesRule());
					}
					add(
						$current,
						"reactmodulesinf",
						lv_reactmodulesinf_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactInfo");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReactConfiguration
entryRuleReactConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactConfigurationRule()); }
	iv_ruleReactConfiguration=ruleReactConfiguration
	{ $current=$iv_ruleReactConfiguration.current; }
	EOF;

// Rule ReactConfiguration
ruleReactConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactConfiguration'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactConfigurationAccess().getReactConfigurationKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactConfigurationAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactConfigurationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactConfigurationAccess().getDependenciesReactDependenciesParserRuleCall_3_0());
				}
				lv_dependencies_3_0=ruleReactDependencies
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactConfigurationRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactDependencies");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactConfigurationAccess().getConfigurationsReactConfigurationsParserRuleCall_4_0());
				}
				lv_configurations_4_0=ruleReactConfigurations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactConfigurationRule());
					}
					add(
						$current,
						"configurations",
						lv_configurations_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactConfigurations");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getReactConfigurationAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleReactDependencies
entryRuleReactDependencies returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactDependenciesRule()); }
	iv_ruleReactDependencies=ruleReactDependencies
	{ $current=$iv_ruleReactDependencies.current; }
	EOF;

// Rule ReactDependencies
ruleReactDependencies returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DependenciesStruct'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactDependenciesAccess().getDependenciesStructKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactDependenciesAccess().getDependenciesReactDependenciesRulesParserRuleCall_1_0());
				}
				lv_dependencies_1_0=ruleReactDependenciesRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactDependenciesRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactDependenciesRules");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleReactDependenciesRules
entryRuleReactDependenciesRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactDependenciesRulesRule()); }
	iv_ruleReactDependenciesRules=ruleReactDependenciesRules
	{ $current=$iv_ruleReactDependenciesRules.current; }
	EOF;

// Rule ReactDependenciesRules
ruleReactDependenciesRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DependencyType'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactDependenciesRulesAccess().getDependencyTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReactDependenciesRulesAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactDependenciesRulesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactDependenciesRulesAccess().getDependenciesReactDependenciesSubRulesParserRuleCall_2_0());
				}
				lv_dependencies_2_0=ruleReactDependenciesSubRules
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactDependenciesRulesRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactDependenciesSubRules");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleReactDependenciesSubRules
entryRuleReactDependenciesSubRules returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactDependenciesSubRulesRule()); }
	iv_ruleReactDependenciesSubRules=ruleReactDependenciesSubRules
	{ $current=$iv_ruleReactDependenciesSubRules.current; }
	EOF;

// Rule ReactDependenciesSubRules
ruleReactDependenciesSubRules returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getReactDependenciesSubRulesAccess().getDependenciesSingleDependenciesParserRuleCall_0());
			}
			lv_dependencies_0_0=ruleSingleDependencies
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getReactDependenciesSubRulesRule());
				}
				add(
					$current,
					"dependencies",
					lv_dependencies_0_0,
					"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SingleDependencies");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleSingleDependencies
entryRuleSingleDependencies returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleDependenciesRule()); }
	iv_ruleSingleDependencies=ruleSingleDependencies
	{ $current=$iv_ruleSingleDependencies.current; }
	EOF;

// Rule SingleDependencies
ruleSingleDependencies returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleDependenciesAccess().getDependenciesPackageNameParserRuleCall_0_0());
				}
				lv_dependencies_0_0=rulePackageName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleDependenciesRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_0_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.PackageName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleDependenciesAccess().getDependenciesPackageVersionParserRuleCall_1_0());
				}
				lv_dependencies_1_0=rulePackageVersion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleDependenciesRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.PackageVersion");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePackageName
entryRulePackageName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageNameRule()); }
	iv_rulePackageName=rulePackageName
	{ $current=$iv_rulePackageName.current; }
	EOF;

// Rule PackageName
rulePackageName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PackageName'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageNameAccess().getPackageNameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPackageNameAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPackageNameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePackageVersion
entryRulePackageVersion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageVersionRule()); }
	iv_rulePackageVersion=rulePackageVersion
	{ $current=$iv_rulePackageVersion.current; }
	EOF;

// Rule PackageVersion
rulePackageVersion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PackageVersion'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageVersionAccess().getPackageVersionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPackageVersionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPackageVersionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleReactConfigurations
entryRuleReactConfigurations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactConfigurationsRule()); }
	iv_ruleReactConfigurations=ruleReactConfigurations
	{ $current=$iv_ruleReactConfigurations.current; }
	EOF;

// Rule ReactConfigurations
ruleReactConfigurations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactDOMConfigurations'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactConfigurationsAccess().getReactDOMConfigurationsKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReactConfigurationsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactConfigurationsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactConfigurationsAccess().getConfigurationsDOMConfigurationsParserRuleCall_2_0());
				}
				lv_configurations_2_0=ruleDOMConfigurations
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactConfigurationsRule());
					}
					add(
						$current,
						"configurations",
						lv_configurations_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.DOMConfigurations");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleDOMConfigurations
entryRuleDOMConfigurations returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDOMConfigurationsRule()); }
	iv_ruleDOMConfigurations=ruleDOMConfigurations
	{ $current=$iv_ruleDOMConfigurations.current; }
	EOF;

// Rule DOMConfigurations
ruleDOMConfigurations returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDOMConfigurationsAccess().getElementsDOMTypeConfParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleDOMTypeConf
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDOMConfigurationsRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.DOMTypeConf");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDOMConfigurationsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDOMConfigurationsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDOMTypeConf
entryRuleDOMTypeConf returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDOMTypeConfRule()); }
	iv_ruleDOMTypeConf=ruleDOMTypeConf
	{ $current=$iv_ruleDOMTypeConf.current.getText(); }
	EOF;

// Rule DOMTypeConf
ruleDOMTypeConf returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='RoutingConf'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOMTypeConfAccess().getRoutingConfKeyword_0());
		}
		    |
		kw='ServiceWorker'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOMTypeConfAccess().getServiceWorkerKeyword_1());
		}
		    |
		kw='HTMLStructure'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOMTypeConfAccess().getHTMLStructureKeyword_2());
		}
		    |
		kw='Manifest'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOMTypeConfAccess().getManifestKeyword_3());
		}
		    |
		kw='RepositoriesConf'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDOMTypeConfAccess().getRepositoriesConfKeyword_4());
		}
	)
;

// Entry rule entryRuleReactComponents
entryRuleReactComponents returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactComponentsRule()); }
	iv_ruleReactComponents=ruleReactComponents
	{ $current=$iv_ruleReactComponents.current; }
	EOF;

// Rule ReactComponents
ruleReactComponents returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactComponents'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactComponentsAccess().getReactComponentsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactComponentsAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactComponentsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactComponentsAccess().getComponentslogicComponentsLogicParserRuleCall_3_0());
				}
				lv_componentslogic_3_0=ruleComponentsLogic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactComponentsRule());
					}
					add(
						$current,
						"componentslogic",
						lv_componentslogic_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ComponentsLogic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactComponentsAccess().getComponentsuiComponentsUIParserRuleCall_4_0());
				}
				lv_componentsui_4_0=ruleComponentsUI
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactComponentsRule());
					}
					add(
						$current,
						"componentsui",
						lv_componentsui_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ComponentsUI");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactComponentsAccess().getComponentstyleComponentsStylesParserRuleCall_5_0());
				}
				lv_componentstyle_5_0=ruleComponentsStyles
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactComponentsRule());
					}
					add(
						$current,
						"componentstyle",
						lv_componentstyle_5_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ComponentsStyles");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getReactComponentsAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleComponentsLogic
entryRuleComponentsLogic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentsLogicRule()); }
	iv_ruleComponentsLogic=ruleComponentsLogic
	{ $current=$iv_ruleComponentsLogic.current; }
	EOF;

// Rule ComponentsLogic
ruleComponentsLogic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LogicComponents'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentsLogicAccess().getLogicComponentsKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComponentsLogicAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentsLogicRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentsLogicAccess().getLogiccomponentsLogicContentParserRuleCall_2_0());
				}
				lv_logiccomponents_2_0=ruleLogicContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentsLogicRule());
					}
					add(
						$current,
						"logiccomponents",
						lv_logiccomponents_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.LogicContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLogicContent
entryRuleLogicContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicContentRule()); }
	iv_ruleLogicContent=ruleLogicContent
	{ $current=$iv_ruleLogicContent.current; }
	EOF;

// Rule LogicContent
ruleLogicContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RoutingComponents'
		{
			newLeafNode(otherlv_0, grammarAccess.getLogicContentAccess().getRoutingComponentsKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLogicContentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogicContentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicContentAccess().getLogiccomponentsLogicStructureParserRuleCall_2_0());
				}
				lv_logiccomponents_2_0=ruleLogicStructure
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicContentRule());
					}
					add(
						$current,
						"logiccomponents",
						lv_logiccomponents_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.LogicStructure");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLogicStructure
entryRuleLogicStructure returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogicStructureRule()); }
	iv_ruleLogicStructure=ruleLogicStructure
	{ $current=$iv_ruleLogicStructure.current; }
	EOF;

// Rule LogicStructure
ruleLogicStructure returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AppComponent'
		{
			newLeafNode(otherlv_0, grammarAccess.getLogicStructureAccess().getAppComponentKeyword_0());
		}
		(
			(
				lv_appComName_1_0=RULE_ID
				{
					newLeafNode(lv_appComName_1_0, grammarAccess.getLogicStructureAccess().getAppComNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogicStructureRule());
					}
					setWithLastConsumed(
						$current,
						"appComName",
						lv_appComName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLogicStructureAccess().getLogiccomponentsComponentClassParserRuleCall_2_0());
				}
				lv_logiccomponents_2_0=ruleComponentClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogicStructureRule());
					}
					add(
						$current,
						"logiccomponents",
						lv_logiccomponents_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ComponentClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='IndexComponent'
		{
			newLeafNode(otherlv_3, grammarAccess.getLogicStructureAccess().getIndexComponentKeyword_3());
		}
		(
			(
				lv_indexCompName_4_0=RULE_ID
				{
					newLeafNode(lv_indexCompName_4_0, grammarAccess.getLogicStructureAccess().getIndexCompNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLogicStructureRule());
					}
					setWithLastConsumed(
						$current,
						"indexCompName",
						lv_indexCompName_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleComponentsUI
entryRuleComponentsUI returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentsUIRule()); }
	iv_ruleComponentsUI=ruleComponentsUI
	{ $current=$iv_ruleComponentsUI.current; }
	EOF;

// Rule ComponentsUI
ruleComponentsUI returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='UIComponents'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentsUIAccess().getUIComponentsKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComponentsUIAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentsUIRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentsUIAccess().getUicomponentsUIContentParserRuleCall_2_0());
				}
				lv_uicomponents_2_0=ruleUIContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentsUIRule());
					}
					add(
						$current,
						"uicomponents",
						lv_uicomponents_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.UIContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUIContent
entryRuleUIContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUIContentRule()); }
	iv_ruleUIContent=ruleUIContent
	{ $current=$iv_ruleUIContent.current; }
	EOF;

// Rule UIContent
ruleUIContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getUIContentAccess().getComponentcontentViewComponentContParserRuleCall_0_0());
				}
				lv_componentcontent_0_0=ruleViewComponentCont
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUIContentRule());
					}
					add(
						$current,
						"componentcontent",
						lv_componentcontent_0_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ViewComponentCont");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getUIContentAccess().getSubcomponentcontentSubcomponentContParserRuleCall_1_0());
				}
				lv_subcomponentcontent_1_0=ruleSubcomponentCont
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUIContentRule());
					}
					add(
						$current,
						"subcomponentcontent",
						lv_subcomponentcontent_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.SubcomponentCont");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleViewComponentCont
entryRuleViewComponentCont returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getViewComponentContRule()); }
	iv_ruleViewComponentCont=ruleViewComponentCont
	{ $current=$iv_ruleViewComponentCont.current; }
	EOF;

// Rule ViewComponentCont
ruleViewComponentCont returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ViewComponent'
		{
			newLeafNode(otherlv_0, grammarAccess.getViewComponentContAccess().getViewComponentKeyword_0());
		}
		(
			(
				lv_nameView_1_0=RULE_ID
				{
					newLeafNode(lv_nameView_1_0, grammarAccess.getViewComponentContAccess().getNameViewIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getViewComponentContRule());
					}
					setWithLastConsumed(
						$current,
						"nameView",
						lv_nameView_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getViewComponentContAccess().getUicontentComponentClassParserRuleCall_2_0());
				}
				lv_uicontent_2_0=ruleComponentClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getViewComponentContRule());
					}
					add(
						$current,
						"uicontent",
						lv_uicontent_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ComponentClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSubcomponentCont
entryRuleSubcomponentCont returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubcomponentContRule()); }
	iv_ruleSubcomponentCont=ruleSubcomponentCont
	{ $current=$iv_ruleSubcomponentCont.current; }
	EOF;

// Rule SubcomponentCont
ruleSubcomponentCont returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Subcomponents'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubcomponentContAccess().getSubcomponentsKeyword_0());
		}
		(
			(
				lv_nameSubComp_1_0=RULE_ID
				{
					newLeafNode(lv_nameSubComp_1_0, grammarAccess.getSubcomponentContAccess().getNameSubCompIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubcomponentContRule());
					}
					setWithLastConsumed(
						$current,
						"nameSubComp",
						lv_nameSubComp_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSubcomponentContAccess().getUicontentComponentClassParserRuleCall_2_0());
				}
				lv_uicontent_2_0=ruleComponentClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubcomponentContRule());
					}
					add(
						$current,
						"uicontent",
						lv_uicontent_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ComponentClass");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComponentClass
entryRuleComponentClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentClassRule()); }
	iv_ruleComponentClass=ruleComponentClass
	{ $current=$iv_ruleComponentClass.current; }
	EOF;

// Rule ComponentClass
ruleComponentClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClassAccess().getComponentclassimpReactImportsParserRuleCall_0_0());
				}
				lv_componentclassimp_0_0=ruleReactImports
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClassRule());
					}
					add(
						$current,
						"componentclassimp",
						lv_componentclassimp_0_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactImports");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClassAccess().getComponentclassfuncReactFunctionsParserRuleCall_1_0());
				}
				lv_componentclassfunc_1_0=ruleReactFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClassRule());
					}
					add(
						$current,
						"componentclassfunc",
						lv_componentclassfunc_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentClassAccess().getComponentclasspropPropsParserRuleCall_2_0());
				}
				lv_componentclassprop_2_0=ruleProps
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentClassRule());
					}
					add(
						$current,
						"componentclassprop",
						lv_componentclassprop_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Props");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReactImports
entryRuleReactImports returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactImportsRule()); }
	iv_ruleReactImports=ruleReactImports
	{ $current=$iv_ruleReactImports.current; }
	EOF;

// Rule ReactImports
ruleReactImports returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReactImportsAccess().getReactImportsAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactImportsAccess().getReactsimportsReactImportContentParserRuleCall_1_0());
				}
				lv_reactsimports_1_0=ruleReactImportContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactImportsRule());
					}
					add(
						$current,
						"reactsimports",
						lv_reactsimports_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactImportContent");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleReactImportContent
entryRuleReactImportContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactImportContentRule()); }
	iv_ruleReactImportContent=ruleReactImportContent
	{ $current=$iv_ruleReactImportContent.current; }
	EOF;

// Rule ReactImportContent
ruleReactImportContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactImportContentAccess().getImportKeyword_0());
		}
		(
			(
				lv_impName_1_0=RULE_ID
				{
					newLeafNode(lv_impName_1_0, grammarAccess.getReactImportContentAccess().getImpNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactImportContentRule());
					}
					setWithLastConsumed(
						$current,
						"impName",
						lv_impName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleReactFunctions
entryRuleReactFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactFunctionsRule()); }
	iv_ruleReactFunctions=ruleReactFunctions
	{ $current=$iv_ruleReactFunctions.current; }
	EOF;

// Rule ReactFunctions
ruleReactFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReactFunctionsAccess().getReactconstructorsReactConstructorParserRuleCall_0_0());
				}
				lv_reactconstructors_0_0=ruleReactConstructor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactFunctionsRule());
					}
					add(
						$current,
						"reactconstructors",
						lv_reactconstructors_0_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactConstructor");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactFunctionsAccess().getLifecycleclassReactLifeCycleParserRuleCall_1_0());
				}
				lv_lifecycleclass_1_0=ruleReactLifeCycle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactFunctionsRule());
					}
					add(
						$current,
						"lifecycleclass",
						lv_lifecycleclass_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactLifeCycle");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getReactFunctionsAccess().getReactcorefuncsReactCoreFunctionsParserRuleCall_2_0());
				}
				lv_reactcorefuncs_2_0=ruleReactCoreFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactFunctionsRule());
					}
					add(
						$current,
						"reactcorefuncs",
						lv_reactcorefuncs_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactCoreFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getReactFunctionsAccess().getRenderclassReactRenderParserRuleCall_3_0());
				}
				lv_renderclass_3_0=ruleReactRender
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactFunctionsRule());
					}
					add(
						$current,
						"renderclass",
						lv_renderclass_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactRender");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReactConstructor
entryRuleReactConstructor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactConstructorRule()); }
	iv_ruleReactConstructor=ruleReactConstructor
	{ $current=$iv_ruleReactConstructor.current; }
	EOF;

// Rule ReactConstructor
ruleReactConstructor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Constructor'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactConstructorAccess().getConstructorKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactConstructorAccess().getComponentstateclassStateParserRuleCall_1_0());
				}
				lv_componentstateclass_1_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactConstructorRule());
					}
					add(
						$current,
						"componentstateclass",
						lv_componentstateclass_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.State");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactConstructorAccess().getComponentfuncclassCoreFunctionsDeclarationParserRuleCall_2_0());
				}
				lv_componentfuncclass_2_0=ruleCoreFunctionsDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactConstructorRule());
					}
					add(
						$current,
						"componentfuncclass",
						lv_componentfuncclass_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.CoreFunctionsDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStateAccess().getStateAction_0(),
					$current);
			}
		)
		otherlv_1='State'
		{
			newLeafNode(otherlv_1, grammarAccess.getStateAccess().getStateKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getStatecontentsStateContentParserRuleCall_2_0());
				}
				lv_statecontents_2_0=ruleStateContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					add(
						$current,
						"statecontents",
						lv_statecontents_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.StateContent");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleStateContent
entryRuleStateContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateContentRule()); }
	iv_ruleStateContent=ruleStateContent
	{ $current=$iv_ruleStateContent.current; }
	EOF;

// Rule StateContent
ruleStateContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_stateName_0_0=RULE_ID
				{
					newLeafNode(lv_stateName_0_0, grammarAccess.getStateContentAccess().getStateNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateContentRule());
					}
					setWithLastConsumed(
						$current,
						"stateName",
						lv_stateName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStateContentAccess().getComponentdatatypDataTypeParserRuleCall_1_0());
				}
				lv_componentdatatyp_1_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateContentRule());
					}
					add(
						$current,
						"componentdatatyp",
						lv_componentdatatyp_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDataType
entryRuleDataType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	iv_ruleDataType=ruleDataType
	{ $current=$iv_ruleDataType.current.getText(); }
	EOF;

// Rule DataType
ruleDataType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='String'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDataTypeAccess().getStringKeyword_0());
		}
		    |
		kw='Array'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDataTypeAccess().getArrayKeyword_1());
		}
		    |
		kw='Object'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDataTypeAccess().getObjectKeyword_2());
		}
		    |
		kw='Number'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDataTypeAccess().getNumberKeyword_3());
		}
		    |
		kw='null'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDataTypeAccess().getNullKeyword_4());
		}
		    |
		kw='Boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDataTypeAccess().getBooleanKeyword_5());
		}
	)
;

// Entry rule entryRuleCoreFunctionsDeclaration
entryRuleCoreFunctionsDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCoreFunctionsDeclarationRule()); }
	iv_ruleCoreFunctionsDeclaration=ruleCoreFunctionsDeclaration
	{ $current=$iv_ruleCoreFunctionsDeclaration.current; }
	EOF;

// Rule CoreFunctionsDeclaration
ruleCoreFunctionsDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCoreFunctionsDeclarationAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCoreFunctionsDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='FunctionBindingDeclaration'
		{
			newLeafNode(otherlv_1, grammarAccess.getCoreFunctionsDeclarationAccess().getFunctionBindingDeclarationKeyword_1());
		}
	)
;

// Entry rule entryRuleReactLifeCycle
entryRuleReactLifeCycle returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReactLifeCycleRule()); }
	iv_ruleReactLifeCycle=ruleReactLifeCycle
	{ $current=$iv_ruleReactLifeCycle.current.getText(); }
	EOF;

// Rule ReactLifeCycle
ruleReactLifeCycle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='ComponentDidMount'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReactLifeCycleAccess().getComponentDidMountKeyword_0_0());
			}
			kw='FunctionStructure'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReactLifeCycleAccess().getFunctionStructureKeyword_0_1());
			}
		)
		    |
		(
			kw='ComponentDidUpdate'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReactLifeCycleAccess().getComponentDidUpdateKeyword_1_0());
			}
			kw='FunctionStructure'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReactLifeCycleAccess().getFunctionStructureKeyword_1_1());
			}
		)
		    |
		(
			kw='ComponentWillUnmount'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReactLifeCycleAccess().getComponentWillUnmountKeyword_2_0());
			}
			kw='FunctionStructure'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getReactLifeCycleAccess().getFunctionStructureKeyword_2_1());
			}
		)
	)
;

// Entry rule entryRuleReactRender
entryRuleReactRender returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReactRenderRule()); }
	iv_ruleReactRender=ruleReactRender
	{ $current=$iv_ruleReactRender.current.getText(); }
	EOF;

// Rule ReactRender
ruleReactRender returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Render'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactRenderAccess().getRenderKeyword_0());
		}
		kw='RenderContent'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactRenderAccess().getRenderContentKeyword_1());
		}
	)
;

// Entry rule entryRuleProps
entryRuleProps returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropsRule()); }
	iv_ruleProps=ruleProps
	{ $current=$iv_ruleProps.current; }
	EOF;

// Rule Props
ruleProps returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPropsAccess().getPropsAction_0(),
					$current);
			}
		)
		otherlv_1='Props'
		{
			newLeafNode(otherlv_1, grammarAccess.getPropsAccess().getPropsKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropsAccess().getPropscontsPropsTypeParserRuleCall_2_0());
				}
				lv_propsconts_2_0=rulePropsType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropsRule());
					}
					add(
						$current,
						"propsconts",
						lv_propsconts_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.PropsType");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePropsType
entryRulePropsType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropsTypeRule()); }
	iv_rulePropsType=rulePropsType
	{ $current=$iv_rulePropsType.current; }
	EOF;

// Rule PropsType
rulePropsType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_nameProps_0_0=RULE_ID
				{
					newLeafNode(lv_nameProps_0_0, grammarAccess.getPropsTypeAccess().getNamePropsIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropsTypeRule());
					}
					setWithLastConsumed(
						$current,
						"nameProps",
						lv_nameProps_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPropsTypeAccess().getPropsdatasDataTypeParserRuleCall_1_0());
				}
				lv_propsdatas_1_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropsTypeRule());
					}
					add(
						$current,
						"propsdatas",
						lv_propsdatas_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReactCoreFunctions
entryRuleReactCoreFunctions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactCoreFunctionsRule()); }
	iv_ruleReactCoreFunctions=ruleReactCoreFunctions
	{ $current=$iv_ruleReactCoreFunctions.current; }
	EOF;

// Rule ReactCoreFunctions
ruleReactCoreFunctions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getReactCoreFunctionsAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactCoreFunctionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='FunctionStructure'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactCoreFunctionsAccess().getFunctionStructureKeyword_1());
		}
	)
;

// Entry rule entryRuleComponentsStyles
entryRuleComponentsStyles returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentsStylesRule()); }
	iv_ruleComponentsStyles=ruleComponentsStyles
	{ $current=$iv_ruleComponentsStyles.current; }
	EOF;

// Rule ComponentsStyles
ruleComponentsStyles returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getComponentsStylesAccess().getComponentsStylesAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentsStylesAccess().getStylescontentsComponentsStylesContentParserRuleCall_1_0());
				}
				lv_stylescontents_1_0=ruleComponentsStylesContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentsStylesRule());
					}
					add(
						$current,
						"stylescontents",
						lv_stylescontents_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ComponentsStylesContent");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleComponentsStylesContent
entryRuleComponentsStylesContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentsStylesContentRule()); }
	iv_ruleComponentsStylesContent=ruleComponentsStylesContent
	{ $current=$iv_ruleComponentsStylesContent.current; }
	EOF;

// Rule ComponentsStylesContent
ruleComponentsStylesContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Style'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentsStylesContentAccess().getStyleKeyword_0());
		}
		(
			(
				lv_nameStyle_1_0=RULE_ID
				{
					newLeafNode(lv_nameStyle_1_0, grammarAccess.getComponentsStylesContentAccess().getNameStyleIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentsStylesContentRule());
					}
					setWithLastConsumed(
						$current,
						"nameStyle",
						lv_nameStyle_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentsStylesContentAccess().getStylecontentStylePropertiesParserRuleCall_2_0());
				}
				lv_stylecontent_2_0=ruleStyleProperties
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentsStylesContentRule());
					}
					add(
						$current,
						"stylecontent",
						lv_stylecontent_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.StyleProperties");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStyleProperties
entryRuleStyleProperties returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStylePropertiesRule()); }
	iv_ruleStyleProperties=ruleStyleProperties
	{ $current=$iv_ruleStyleProperties.current; }
	EOF;

// Rule StyleProperties
ruleStyleProperties returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStylePropertiesAccess().getStylePropertiesAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStylePropertiesAccess().getStylespropscontentsStylePropertiesContentParserRuleCall_1_0());
				}
				lv_stylespropscontents_1_0=ruleStylePropertiesContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStylePropertiesRule());
					}
					add(
						$current,
						"stylespropscontents",
						lv_stylespropscontents_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.StylePropertiesContent");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleStylePropertiesContent
entryRuleStylePropertiesContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStylePropertiesContentRule()); }
	iv_ruleStylePropertiesContent=ruleStylePropertiesContent
	{ $current=$iv_ruleStylePropertiesContent.current; }
	EOF;

// Rule StylePropertiesContent
ruleStylePropertiesContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='prop_name'
		{
			newLeafNode(otherlv_0, grammarAccess.getStylePropertiesContentAccess().getProp_nameKeyword_0());
		}
		(
			(
				lv_propName_1_0=RULE_ID
				{
					newLeafNode(lv_propName_1_0, grammarAccess.getStylePropertiesContentAccess().getPropNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStylePropertiesContentRule());
					}
					setWithLastConsumed(
						$current,
						"propName",
						lv_propName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='propsContent'
			{
				newLeafNode(otherlv_2, grammarAccess.getStylePropertiesContentAccess().getPropsContentKeyword_2());
			}
		)+
	)
;

// Entry rule entryRuleReactActions
entryRuleReactActions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactActionsRule()); }
	iv_ruleReactActions=ruleReactActions
	{ $current=$iv_ruleReactActions.current; }
	EOF;

// Rule ReactActions
ruleReactActions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactActions'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactActionsAccess().getReactActionsKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactActionsAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactActionsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactActionsAccess().getReactactcontentReactActionsContentParserRuleCall_3_0());
				}
				lv_reactactcontent_3_0=ruleReactActionsContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactActionsRule());
					}
					add(
						$current,
						"reactactcontent",
						lv_reactactcontent_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactActionsContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getReactActionsAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleReactActionsContent
entryRuleReactActionsContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactActionsContentRule()); }
	iv_ruleReactActionsContent=ruleReactActionsContent
	{ $current=$iv_ruleReactActionsContent.current; }
	EOF;

// Rule ReactActionsContent
ruleReactActionsContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getReactActionsContentAccess().getReactrelcontentReactServicesRelationParserRuleCall_0());
			}
			lv_reactrelcontent_0_0=ruleReactServicesRelation
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getReactActionsContentRule());
				}
				add(
					$current,
					"reactrelcontent",
					lv_reactrelcontent_0_0,
					"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactServicesRelation");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleReactServicesType
entryRuleReactServicesType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactServicesTypeRule()); }
	iv_ruleReactServicesType=ruleReactServicesType
	{ $current=$iv_ruleReactServicesType.current; }
	EOF;

// Rule ReactServicesType
ruleReactServicesType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ServiceType'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactServicesTypeAccess().getServiceTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReactServicesTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactServicesTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactServicesTypeAccess().getReactservcontentReactServiceContentParserRuleCall_2_0());
				}
				lv_reactservcontent_2_0=ruleReactServiceContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactServicesTypeRule());
					}
					add(
						$current,
						"reactservcontent",
						lv_reactservcontent_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactServiceContent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReactServiceContent
entryRuleReactServiceContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactServiceContentRule()); }
	iv_ruleReactServiceContent=ruleReactServiceContent
	{ $current=$iv_ruleReactServiceContent.current; }
	EOF;

// Rule ReactServiceContent
ruleReactServiceContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='functions'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactServiceContentAccess().getFunctionsKeyword_0());
		}
		(
			(
				lv_functName_1_0=RULE_ID
				{
					newLeafNode(lv_functName_1_0, grammarAccess.getReactServiceContentAccess().getFunctNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactServiceContentRule());
					}
					setWithLastConsumed(
						$current,
						"functName",
						lv_functName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReactServiceContentAccess().getReactservrequestReactServiceContRequestParserRuleCall_2_0());
				}
				lv_reactservrequest_2_0=ruleReactServiceContRequest
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactServiceContentRule());
					}
					add(
						$current,
						"reactservrequest",
						lv_reactservrequest_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactServiceContRequest");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleReactServiceContRequest
entryRuleReactServiceContRequest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactServiceContRequestRule()); }
	iv_ruleReactServiceContRequest=ruleReactServiceContRequest
	{ $current=$iv_ruleReactServiceContRequest.current; }
	EOF;

// Rule ReactServiceContRequest
ruleReactServiceContRequest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='return'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactServiceContRequestAccess().getReturnKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactServiceContRequestAccess().getReactservrequestpropsReactServiceRequestPropsParserRuleCall_1_0());
				}
				lv_reactservrequestprops_1_0=ruleReactServiceRequestProps
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactServiceContRequestRule());
					}
					add(
						$current,
						"reactservrequestprops",
						lv_reactservrequestprops_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactServiceRequestProps");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleReactServiceRequestProps
entryRuleReactServiceRequestProps returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactServiceRequestPropsRule()); }
	iv_ruleReactServiceRequestProps=ruleReactServiceRequestProps
	{ $current=$iv_ruleReactServiceRequestProps.current; }
	EOF;

// Rule ReactServiceRequestProps
ruleReactServiceRequestProps returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='propName'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactServiceRequestPropsAccess().getPropNameKeyword_0());
		}
		(
			(
				lv_reqPropName_1_0=RULE_ID
				{
					newLeafNode(lv_reqPropName_1_0, grammarAccess.getReactServiceRequestPropsAccess().getReqPropNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactServiceRequestPropsRule());
					}
					setWithLastConsumed(
						$current,
						"reqPropName",
						lv_reqPropName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_reqPropDescription_2_0=RULE_ID
				{
					newLeafNode(lv_reqPropDescription_2_0, grammarAccess.getReactServiceRequestPropsAccess().getReqPropDescriptionIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactServiceRequestPropsRule());
					}
					setWithLastConsumed(
						$current,
						"reqPropDescription",
						lv_reqPropDescription_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleReactServicesRelation
entryRuleReactServicesRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactServicesRelationRule()); }
	iv_ruleReactServicesRelation=ruleReactServicesRelation
	{ $current=$iv_ruleReactServicesRelation.current; }
	EOF;

// Rule ReactServicesRelation
ruleReactServicesRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ServicesRelations'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactServicesRelationAccess().getServicesRelationsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactServicesRelationAccess().getServicesrelsReactsRelationServParserRuleCall_1_0());
				}
				lv_servicesrels_1_0=ruleReactsRelationServ
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactServicesRelationRule());
					}
					add(
						$current,
						"servicesrels",
						lv_servicesrels_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactsRelationServ");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleReactsRelationServ
entryRuleReactsRelationServ returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactsRelationServRule()); }
	iv_ruleReactsRelationServ=ruleReactsRelationServ
	{ $current=$iv_ruleReactsRelationServ.current; }
	EOF;

// Rule ReactsRelationServ
ruleReactsRelationServ returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getReactsRelationServAccess().getReactrelationcontentReactServicesTypeParserRuleCall_0_0());
				}
				lv_reactrelationcontent_0_0=ruleReactServicesType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactsRelationServRule());
					}
					add(
						$current,
						"reactrelationcontent",
						lv_reactrelationcontent_0_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactServicesType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReactsRelationServAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactsRelationServRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getReactsRelationServAccess().getReactRequestParserRuleCall_2());
		}
		ruleReactRequest
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleReactRequest
entryRuleReactRequest returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReactRequestRule()); }
	iv_ruleReactRequest=ruleReactRequest
	{ $current=$iv_ruleReactRequest.current.getText(); }
	EOF;

// Rule ReactRequest
ruleReactRequest returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='Wrapper'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactRequestAccess().getWrapperKeyword_0());
		}
		    |
		kw='AuxWrapper'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactRequestAccess().getAuxWrapperKeyword_1());
		}
	)
;

// Entry rule entryRuleReactLibraries
entryRuleReactLibraries returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactLibrariesRule()); }
	iv_ruleReactLibraries=ruleReactLibraries
	{ $current=$iv_ruleReactLibraries.current; }
	EOF;

// Rule ReactLibraries
ruleReactLibraries returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactLibraries'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactLibrariesAccess().getReactLibrariesKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactLibrariesAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactLibrariesAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactLibrariesAccess().getReactlibrariesReactLibraryParserRuleCall_3_0());
				}
				lv_reactlibraries_3_0=ruleReactLibrary
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactLibrariesRule());
					}
					add(
						$current,
						"reactlibraries",
						lv_reactlibraries_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactLibrary");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getReactLibrariesAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleReactLibrary
entryRuleReactLibrary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactLibraryRule()); }
	iv_ruleReactLibrary=ruleReactLibrary
	{ $current=$iv_ruleReactLibrary.current; }
	EOF;

// Rule ReactLibrary
ruleReactLibrary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getReactLibraryAccess().getReactLibraryTypeParserRuleCall_0());
		}
		ruleReactLibraryType
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReactLibraryAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactLibraryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='LibraryContent'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactLibraryAccess().getLibraryContentKeyword_2());
		}
	)
;

// Entry rule entryRuleReactLibraryType
entryRuleReactLibraryType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReactLibraryTypeRule()); }
	iv_ruleReactLibraryType=ruleReactLibraryType
	{ $current=$iv_ruleReactLibraryType.current.getText(); }
	EOF;

// Rule ReactLibraryType
ruleReactLibraryType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='ReactDesign'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactLibraryTypeAccess().getReactDesignKeyword_0());
		}
		    |
		kw='ReactRouting'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactLibraryTypeAccess().getReactRoutingKeyword_1());
		}
		    |
		kw='ComponentManagement'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactLibraryTypeAccess().getComponentManagementKeyword_2());
		}
		    |
		kw='StoreManagement'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactLibraryTypeAccess().getStoreManagementKeyword_3());
		}
		    |
		kw='ReactDeployment'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactLibraryTypeAccess().getReactDeploymentKeyword_4());
		}
		    |
		kw='ConfigurationLibrary'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactLibraryTypeAccess().getConfigurationLibraryKeyword_5());
		}
	)
;

// Entry rule entryRuleReactInfo
entryRuleReactInfo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactInfoRule()); }
	iv_ruleReactInfo=ruleReactInfo
	{ $current=$iv_ruleReactInfo.current; }
	EOF;

// Rule ReactInfo
ruleReactInfo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ReactInformation'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactInfoAccess().getReactInformationKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getReactInfoAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactInfoAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReactInfoAccess().getReactinformationReactInformationParserRuleCall_3_0());
				}
				lv_reactinformation_3_0=ruleReactInformation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactInfoRule());
					}
					add(
						$current,
						"reactinformation",
						lv_reactinformation_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ReactInformation");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getReactInfoAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleReactInformation
entryRuleReactInformation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactInformationRule()); }
	iv_ruleReactInformation=ruleReactInformation
	{ $current=$iv_ruleReactInformation.current; }
	EOF;

// Rule ReactInformation
ruleReactInformation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getReactInformationAccess().getReactInformationTypeParserRuleCall_0());
		}
		ruleReactInformationType
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getReactInformationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactInformationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='InformationContent'
		{
			newLeafNode(otherlv_2, grammarAccess.getReactInformationAccess().getInformationContentKeyword_2());
		}
	)
;

// Entry rule entryRuleReactInformationType
entryRuleReactInformationType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReactInformationTypeRule()); }
	iv_ruleReactInformationType=ruleReactInformationType
	{ $current=$iv_ruleReactInformationType.current.getText(); }
	EOF;

// Rule ReactInformationType
ruleReactInformationType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='ReactReadme'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactInformationTypeAccess().getReactReadmeKeyword_0());
		}
		    |
		kw='ReactAditionalInfo'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getReactInformationTypeAccess().getReactAditionalInfoKeyword_1());
		}
	)
;

// Entry rule entryRulePostgreSQL
entryRulePostgreSQL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostgreSQLRule()); }
	iv_rulePostgreSQL=rulePostgreSQL
	{ $current=$iv_rulePostgreSQL.current; }
	EOF;

// Rule PostgreSQL
rulePostgreSQL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PostgreSQL'
		{
			newLeafNode(otherlv_0, grammarAccess.getPostgreSQLAccess().getPostgreSQLKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPostgreSQLAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPostgreSQLRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPostgreSQLAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPostgreSQLAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPostgreSQLAccess().getElementsClusterParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleCluster
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPostgreSQLRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Cluster");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getPostgreSQLAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCluster
entryRuleCluster returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClusterRule()); }
	iv_ruleCluster=ruleCluster
	{ $current=$iv_ruleCluster.current; }
	EOF;

// Rule Cluster
ruleCluster returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Database'
		{
			newLeafNode(otherlv_0, grammarAccess.getClusterAccess().getDatabaseKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClusterAccess().getElementsDatabaseParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleDatabase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClusterRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Database");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getClusterAccess().getElementsPostgresUserParserRuleCall_2_0());
				}
				lv_elements_2_0=rulePostgresUser
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClusterRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.PostgresUser");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleDatabase
entryRuleDatabase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatabaseRule()); }
	iv_ruleDatabase=ruleDatabase
	{ $current=$iv_ruleDatabase.current; }
	EOF;

// Rule Database
ruleDatabase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Schema'
		{
			newLeafNode(otherlv_0, grammarAccess.getDatabaseAccess().getSchemaKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDatabaseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDatabaseAccess().getElementsSchemaParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDatabaseRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Schema");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSchema
entryRuleSchema returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchemaRule()); }
	iv_ruleSchema=ruleSchema
	{ $current=$iv_ruleSchema.current; }
	EOF;

// Rule Schema
ruleSchema returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaAccess().getElementsIndex_pParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleIndex_p
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Index_p");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaAccess().getElementsViewSchemaParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleViewSchema
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ViewSchema");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaAccess().getElementsTable_pParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleTable_p
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Table_p");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaAccess().getElementsTriggerParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleTrigger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Trigger");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSchemaAccess().getElementsFunctionParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSchemaRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIndex_p
entryRuleIndex_p returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndex_pRule()); }
	iv_ruleIndex_p=ruleIndex_p
	{ $current=$iv_ruleIndex_p.current; }
	EOF;

// Rule Index_p
ruleIndex_p returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Index_p'
		{
			newLeafNode(otherlv_0, grammarAccess.getIndex_pAccess().getIndex_pKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIndex_pAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndex_pRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleViewSchema
entryRuleViewSchema returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getViewSchemaRule()); }
	iv_ruleViewSchema=ruleViewSchema
	{ $current=$iv_ruleViewSchema.current; }
	EOF;

// Rule ViewSchema
ruleViewSchema returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ViewSchema'
		{
			newLeafNode(otherlv_0, grammarAccess.getViewSchemaAccess().getViewSchemaKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getViewSchemaAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getViewSchemaRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleTable_p
entryRuleTable_p returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTable_pRule()); }
	iv_ruleTable_p=ruleTable_p
	{ $current=$iv_ruleTable_p.current; }
	EOF;

// Rule Table_p
ruleTable_p returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Table_p'
		{
			newLeafNode(otherlv_0, grammarAccess.getTable_pAccess().getTable_pKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTable_pAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTable_pRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getTable_pAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTable_pAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTable_pAccess().getElementsForeignKeyParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleForeignKey
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTable_pRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ForeignKey");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getTable_pAccess().getElementsColumnPParserRuleCall_5_0());
				}
				lv_elements_5_0=ruleColumnP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTable_pRule());
					}
					add(
						$current,
						"elements",
						lv_elements_5_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ColumnP");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getTable_pAccess().getElementsRowParserRuleCall_6_0());
				}
				lv_elements_6_0=ruleRow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTable_pRule());
					}
					add(
						$current,
						"elements",
						lv_elements_6_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Row");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getTable_pAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleForeignKey
entryRuleForeignKey returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForeignKeyRule()); }
	iv_ruleForeignKey=ruleForeignKey
	{ $current=$iv_ruleForeignKey.current; }
	EOF;

// Rule ForeignKey
ruleForeignKey returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ForeignKey'
		{
			newLeafNode(otherlv_0, grammarAccess.getForeignKeyAccess().getForeignKeyKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForeignKeyAccess().getElementsForeignKey_nParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleForeignKey_n
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeignKeyRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ForeignKey_n");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getForeignKeyAccess().getElementsForeignKeyRefParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleForeignKeyRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeignKeyRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ForeignKeyRef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleForeignKey_n
entryRuleForeignKey_n returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForeignKey_nRule()); }
	iv_ruleForeignKey_n=ruleForeignKey_n
	{ $current=$iv_ruleForeignKey_n.current; }
	EOF;

// Rule ForeignKey_n
ruleForeignKey_n returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ForeingKeyName'
		{
			newLeafNode(otherlv_0, grammarAccess.getForeignKey_nAccess().getForeingKeyNameKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getForeignKey_nAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForeignKey_nRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleForeignKeyRef
entryRuleForeignKeyRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForeignKeyRefRule()); }
	iv_ruleForeignKeyRef=ruleForeignKeyRef
	{ $current=$iv_ruleForeignKeyRef.current; }
	EOF;

// Rule ForeignKeyRef
ruleForeignKeyRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getForeignKeyRefAccess().getForeignKeyRefAction_0(),
					$current);
			}
		)
		otherlv_1='ForeignKeyRef'
		{
			newLeafNode(otherlv_1, grammarAccess.getForeignKeyRefAccess().getForeignKeyRefKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForeignKeyRefAccess().getElementsRefTable_pParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleRefTable_p
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForeignKeyRefRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.RefTable_p");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRefTable_p
entryRuleRefTable_p returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefTable_pRule()); }
	iv_ruleRefTable_p=ruleRefTable_p
	{ $current=$iv_ruleRefTable_p.current; }
	EOF;

// Rule RefTable_p
ruleRefTable_p returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RefTable_p'
		{
			newLeafNode(otherlv_0, grammarAccess.getRefTable_pAccess().getRefTable_pKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRefTable_pAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRefTable_pRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleColumnP
entryRuleColumnP returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnPRule()); }
	iv_ruleColumnP=ruleColumnP
	{ $current=$iv_ruleColumnP.current; }
	EOF;

// Rule ColumnP
ruleColumnP returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ColumnP'
		{
			newLeafNode(otherlv_0, grammarAccess.getColumnPAccess().getColumnPKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getColumnPAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColumnPRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getColumnPAccess().getElementsDatatypeDBParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleDatatypeDB
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColumnPRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.DatatypeDB");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getColumnPAccess().getElementsConstraintParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColumnPRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Constraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDatatypeDB
entryRuleDatatypeDB returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatatypeDBRule()); }
	iv_ruleDatatypeDB=ruleDatatypeDB
	{ $current=$iv_ruleDatatypeDB.current; }
	EOF;

// Rule DatatypeDB
ruleDatatypeDB returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DatatypeDB'
		{
			newLeafNode(otherlv_0, grammarAccess.getDatatypeDBAccess().getDatatypeDBKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDatatypeDBAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatatypeDBRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	iv_ruleConstraint=ruleConstraint
	{ $current=$iv_ruleConstraint.current; }
	EOF;

// Rule Constraint
ruleConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Constraint'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstraintAccess().getConstraintKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConstraintAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstraintRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleRow
entryRuleRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowRule()); }
	iv_ruleRow=ruleRow
	{ $current=$iv_ruleRow.current; }
	EOF;

// Rule Row
ruleRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Row'
		{
			newLeafNode(otherlv_0, grammarAccess.getRowAccess().getRowKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRowAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRowRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRowAccess().getElementsPolicyParserRuleCall_2_0());
				}
				lv_elements_2_0=rulePolicy
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRowRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Policy");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePolicy
entryRulePolicy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPolicyRule()); }
	iv_rulePolicy=rulePolicy
	{ $current=$iv_rulePolicy.current; }
	EOF;

// Rule Policy
rulePolicy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Policy'
		{
			newLeafNode(otherlv_0, grammarAccess.getPolicyAccess().getPolicyKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPolicyAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPolicyRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleTrigger
entryRuleTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTriggerRule()); }
	iv_ruleTrigger=ruleTrigger
	{ $current=$iv_ruleTrigger.current; }
	EOF;

// Rule Trigger
ruleTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Trigger'
		{
			newLeafNode(otherlv_0, grammarAccess.getTriggerAccess().getTriggerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTriggerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTriggerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Function'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getFunctionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePostgresUser
entryRulePostgresUser returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostgresUserRule()); }
	iv_rulePostgresUser=rulePostgresUser
	{ $current=$iv_rulePostgresUser.current; }
	EOF;

// Rule PostgresUser
rulePostgresUser returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PostgresUser'
		{
			newLeafNode(otherlv_0, grammarAccess.getPostgresUserAccess().getPostgresUserKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPostgresUserAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPostgresUserRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPostgresUserAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getPostgresUserAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPostgresUserAccess().getElementsPrivilegeParserRuleCall_4_0());
				}
				lv_elements_4_0=rulePrivilege
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPostgresUserRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Privilege");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPostgresUserAccess().getElementsQueryParserRuleCall_5_0());
				}
				lv_elements_5_0=ruleQuery
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPostgresUserRule());
					}
					add(
						$current,
						"elements",
						lv_elements_5_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Query");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getPostgresUserAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRulePrivilege
entryRulePrivilege returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrivilegeRule()); }
	iv_rulePrivilege=rulePrivilege
	{ $current=$iv_rulePrivilege.current; }
	EOF;

// Rule Privilege
rulePrivilege returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Privilege'
		{
			newLeafNode(otherlv_0, grammarAccess.getPrivilegeAccess().getPrivilegeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPrivilegeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrivilegeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleQuery
entryRuleQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryRule()); }
	iv_ruleQuery=ruleQuery
	{ $current=$iv_ruleQuery.current; }
	EOF;

// Rule Query
ruleQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Query'
		{
			newLeafNode(otherlv_0, grammarAccess.getQueryAccess().getQueryKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQueryAccess().getElementsClauseParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQueryRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Clause");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClause
entryRuleClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClauseRule()); }
	iv_ruleClause=ruleClause
	{ $current=$iv_ruleClause.current; }
	EOF;

// Rule Clause
ruleClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Clause'
		{
			newLeafNode(otherlv_0, grammarAccess.getClauseAccess().getClauseKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getClauseAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClauseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAmazonWebServices
entryRuleAmazonWebServices returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAmazonWebServicesRule()); }
	iv_ruleAmazonWebServices=ruleAmazonWebServices
	{ $current=$iv_ruleAmazonWebServices.current; }
	EOF;

// Rule AmazonWebServices
ruleAmazonWebServices returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AmazonWebServices'
		{
			newLeafNode(otherlv_0, grammarAccess.getAmazonWebServicesAccess().getAmazonWebServicesKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAmazonWebServicesAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAmazonWebServicesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getAmazonWebServicesAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getAmazonWebServicesAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAmazonWebServicesAccess().getElementsAmazonSimpleStorageServiceParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleAmazonSimpleStorageService
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAmazonWebServicesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.AmazonSimpleStorageService");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAmazonWebServicesAccess().getElementsAmazonElasticComputeCloudParserRuleCall_5_0());
				}
				lv_elements_5_0=ruleAmazonElasticComputeCloud
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAmazonWebServicesRule());
					}
					add(
						$current,
						"elements",
						lv_elements_5_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.AmazonElasticComputeCloud");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAmazonWebServicesAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleAmazonSimpleStorageService
entryRuleAmazonSimpleStorageService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAmazonSimpleStorageServiceRule()); }
	iv_ruleAmazonSimpleStorageService=ruleAmazonSimpleStorageService
	{ $current=$iv_ruleAmazonSimpleStorageService.current; }
	EOF;

// Rule AmazonSimpleStorageService
ruleAmazonSimpleStorageService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AmazonSimpleStorageService'
		{
			newLeafNode(otherlv_0, grammarAccess.getAmazonSimpleStorageServiceAccess().getAmazonSimpleStorageServiceKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAmazonSimpleStorageServiceAccess().getColonKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAmazonSimpleStorageServiceAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAmazonSimpleStorageServiceAccess().getElementsBatchOperationParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleBatchOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAmazonSimpleStorageServiceRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.BatchOperation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getAmazonSimpleStorageServiceAccess().getElementsBucketParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleBucket
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAmazonSimpleStorageServiceRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Bucket");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getAmazonSimpleStorageServiceAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleBatchOperation
entryRuleBatchOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBatchOperationRule()); }
	iv_ruleBatchOperation=ruleBatchOperation
	{ $current=$iv_ruleBatchOperation.current; }
	EOF;

// Rule BatchOperation
ruleBatchOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BatchOperation'
		{
			newLeafNode(otherlv_0, grammarAccess.getBatchOperationAccess().getBatchOperationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBatchOperationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBatchOperationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBucket
entryRuleBucket returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBucketRule()); }
	iv_ruleBucket=ruleBucket
	{ $current=$iv_ruleBucket.current; }
	EOF;

// Rule Bucket
ruleBucket returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Bucket'
		{
			newLeafNode(otherlv_0, grammarAccess.getBucketAccess().getBucketKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBucketAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBucketRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBucketAccess().getElementsBucketAccessParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleBucketAccess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBucketRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.BucketAccess");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBucketAccess().getElementsAmazonFolderParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleAmazonFolder
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBucketRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.AmazonFolder");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getBucketAccess().getElementsAmazonFileParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleAmazonFile
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBucketRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.AmazonFile");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleBucketAccess
entryRuleBucketAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBucketAccessRule()); }
	iv_ruleBucketAccess=ruleBucketAccess
	{ $current=$iv_ruleBucketAccess.current; }
	EOF;

// Rule BucketAccess
ruleBucketAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='BucketAccess'
			{
				newLeafNode(otherlv_0, grammarAccess.getBucketAccessAccess().getBucketAccessKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBucketAccessAccess().getElementsPublicAccessParserRuleCall_0_1_0());
					}
					lv_elements_1_0=rulePublicAccess
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBucketAccessRule());
						}
						add(
							$current,
							"elements",
							lv_elements_1_0,
							"co.unal.mdd.photos.dsl.SoftGalleryLanguage.PublicAccess");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBucketAccessAccess().getElementsObjectsPublicParserRuleCall_1_0());
				}
				lv_elements_2_0=ruleObjectsPublic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBucketAccessRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.ObjectsPublic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBucketAccessAccess().getElementsBucketObjectsNotPublicParserRuleCall_2_0());
				}
				lv_elements_3_0=ruleBucketObjectsNotPublic
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBucketAccessRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.BucketObjectsNotPublic");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBucketAccessAccess().getElementsOnlyAuthorizedParserRuleCall_3_0());
				}
				lv_elements_4_0=ruleOnlyAuthorized
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBucketAccessRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.OnlyAuthorized");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePublicAccess
entryRulePublicAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPublicAccessRule()); }
	iv_rulePublicAccess=rulePublicAccess
	{ $current=$iv_rulePublicAccess.current; }
	EOF;

// Rule PublicAccess
rulePublicAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PublicAccess'
		{
			newLeafNode(otherlv_0, grammarAccess.getPublicAccessAccess().getPublicAccessKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPublicAccessAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPublicAccessRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleObjectsPublic
entryRuleObjectsPublic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectsPublicRule()); }
	iv_ruleObjectsPublic=ruleObjectsPublic
	{ $current=$iv_ruleObjectsPublic.current; }
	EOF;

// Rule ObjectsPublic
ruleObjectsPublic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ObjectsPublic'
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectsPublicAccess().getObjectsPublicKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getObjectsPublicAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectsPublicRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBucketObjectsNotPublic
entryRuleBucketObjectsNotPublic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBucketObjectsNotPublicRule()); }
	iv_ruleBucketObjectsNotPublic=ruleBucketObjectsNotPublic
	{ $current=$iv_ruleBucketObjectsNotPublic.current; }
	EOF;

// Rule BucketObjectsNotPublic
ruleBucketObjectsNotPublic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BucketObjectsNotPublic'
		{
			newLeafNode(otherlv_0, grammarAccess.getBucketObjectsNotPublicAccess().getBucketObjectsNotPublicKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBucketObjectsNotPublicAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBucketObjectsNotPublicRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleOnlyAuthorized
entryRuleOnlyAuthorized returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOnlyAuthorizedRule()); }
	iv_ruleOnlyAuthorized=ruleOnlyAuthorized
	{ $current=$iv_ruleOnlyAuthorized.current; }
	EOF;

// Rule OnlyAuthorized
ruleOnlyAuthorized returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='OnlyAuthorized'
		{
			newLeafNode(otherlv_0, grammarAccess.getOnlyAuthorizedAccess().getOnlyAuthorizedKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOnlyAuthorizedAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOnlyAuthorizedRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAmazonFolder
entryRuleAmazonFolder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAmazonFolderRule()); }
	iv_ruleAmazonFolder=ruleAmazonFolder
	{ $current=$iv_ruleAmazonFolder.current; }
	EOF;

// Rule AmazonFolder
ruleAmazonFolder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AmazonFolder'
		{
			newLeafNode(otherlv_0, grammarAccess.getAmazonFolderAccess().getAmazonFolderKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAmazonFolderAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAmazonFolderRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAmazonFile
entryRuleAmazonFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAmazonFileRule()); }
	iv_ruleAmazonFile=ruleAmazonFile
	{ $current=$iv_ruleAmazonFile.current; }
	EOF;

// Rule AmazonFile
ruleAmazonFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AmazonFile'
		{
			newLeafNode(otherlv_0, grammarAccess.getAmazonFileAccess().getAmazonFileKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAmazonFileAccess().getElementsMetadataParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleMetadata
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAmazonFileRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"co.unal.mdd.photos.dsl.SoftGalleryLanguage.Metadata");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleMetadata
entryRuleMetadata returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataRule()); }
	iv_ruleMetadata=ruleMetadata
	{ $current=$iv_ruleMetadata.current; }
	EOF;

// Rule Metadata
ruleMetadata returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Metadata'
		{
			newLeafNode(otherlv_0, grammarAccess.getMetadataAccess().getMetadataKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMetadataAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetadataRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAmazonElasticComputeCloud
entryRuleAmazonElasticComputeCloud returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAmazonElasticComputeCloudRule()); }
	iv_ruleAmazonElasticComputeCloud=ruleAmazonElasticComputeCloud
	{ $current=$iv_ruleAmazonElasticComputeCloud.current; }
	EOF;

// Rule AmazonElasticComputeCloud
ruleAmazonElasticComputeCloud returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AmazonElasticComputeCloud'
		{
			newLeafNode(otherlv_0, grammarAccess.getAmazonElasticComputeCloudAccess().getAmazonElasticComputeCloudKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAmazonElasticComputeCloudAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAmazonElasticComputeCloudRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
