/**
 * generated by Xtext 2.17.1
 */
package co.unal.mdd.photos.dsl.softGalleryLanguage.impl;

import co.unal.mdd.photos.dsl.softGalleryLanguage.ReactServiceRequestProps;
import co.unal.mdd.photos.dsl.softGalleryLanguage.SoftGalleryLanguagePackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>React Service Request Props</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.ReactServiceRequestPropsImpl#getReqPropName <em>Req Prop Name</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.ReactServiceRequestPropsImpl#getReqPropDescription <em>Req Prop Description</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ReactServiceRequestPropsImpl extends MinimalEObjectImpl.Container implements ReactServiceRequestProps
{
  /**
   * The default value of the '{@link #getReqPropName() <em>Req Prop Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReqPropName()
   * @generated
   * @ordered
   */
  protected static final String REQ_PROP_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReqPropName() <em>Req Prop Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReqPropName()
   * @generated
   * @ordered
   */
  protected String reqPropName = REQ_PROP_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getReqPropDescription() <em>Req Prop Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReqPropDescription()
   * @generated
   * @ordered
   */
  protected static final String REQ_PROP_DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReqPropDescription() <em>Req Prop Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReqPropDescription()
   * @generated
   * @ordered
   */
  protected String reqPropDescription = REQ_PROP_DESCRIPTION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ReactServiceRequestPropsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SoftGalleryLanguagePackage.Literals.REACT_SERVICE_REQUEST_PROPS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReqPropName()
  {
    return reqPropName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReqPropName(String newReqPropName)
  {
    String oldReqPropName = reqPropName;
    reqPropName = newReqPropName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SoftGalleryLanguagePackage.REACT_SERVICE_REQUEST_PROPS__REQ_PROP_NAME, oldReqPropName, reqPropName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReqPropDescription()
  {
    return reqPropDescription;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReqPropDescription(String newReqPropDescription)
  {
    String oldReqPropDescription = reqPropDescription;
    reqPropDescription = newReqPropDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SoftGalleryLanguagePackage.REACT_SERVICE_REQUEST_PROPS__REQ_PROP_DESCRIPTION, oldReqPropDescription, reqPropDescription));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_SERVICE_REQUEST_PROPS__REQ_PROP_NAME:
        return getReqPropName();
      case SoftGalleryLanguagePackage.REACT_SERVICE_REQUEST_PROPS__REQ_PROP_DESCRIPTION:
        return getReqPropDescription();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_SERVICE_REQUEST_PROPS__REQ_PROP_NAME:
        setReqPropName((String)newValue);
        return;
      case SoftGalleryLanguagePackage.REACT_SERVICE_REQUEST_PROPS__REQ_PROP_DESCRIPTION:
        setReqPropDescription((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_SERVICE_REQUEST_PROPS__REQ_PROP_NAME:
        setReqPropName(REQ_PROP_NAME_EDEFAULT);
        return;
      case SoftGalleryLanguagePackage.REACT_SERVICE_REQUEST_PROPS__REQ_PROP_DESCRIPTION:
        setReqPropDescription(REQ_PROP_DESCRIPTION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_SERVICE_REQUEST_PROPS__REQ_PROP_NAME:
        return REQ_PROP_NAME_EDEFAULT == null ? reqPropName != null : !REQ_PROP_NAME_EDEFAULT.equals(reqPropName);
      case SoftGalleryLanguagePackage.REACT_SERVICE_REQUEST_PROPS__REQ_PROP_DESCRIPTION:
        return REQ_PROP_DESCRIPTION_EDEFAULT == null ? reqPropDescription != null : !REQ_PROP_DESCRIPTION_EDEFAULT.equals(reqPropDescription);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (reqPropName: ");
    result.append(reqPropName);
    result.append(", reqPropDescription: ");
    result.append(reqPropDescription);
    result.append(')');
    return result.toString();
  }

} //ReactServiceRequestPropsImpl
