/**
 * generated by Xtext 2.17.1
 */
package co.unal.mdd.photos.dsl.softGalleryLanguage.impl;

import co.unal.mdd.photos.dsl.softGalleryLanguage.RequestMapping;
import co.unal.mdd.photos.dsl.softGalleryLanguage.RequestMappingMethod;
import co.unal.mdd.photos.dsl.softGalleryLanguage.RequestMappingProduces;
import co.unal.mdd.photos.dsl.softGalleryLanguage.RequestMappingValue;
import co.unal.mdd.photos.dsl.softGalleryLanguage.SoftGalleryLanguagePackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Request Mapping</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.RequestMappingImpl#getValue <em>Value</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.RequestMappingImpl#getMethod <em>Method</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.RequestMappingImpl#getProduces <em>Produces</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RequestMappingImpl extends MappingTypeImpl implements RequestMapping
{
  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected EList<RequestMappingValue> value;

  /**
   * The cached value of the '{@link #getMethod() <em>Method</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethod()
   * @generated
   * @ordered
   */
  protected EList<RequestMappingMethod> method;

  /**
   * The cached value of the '{@link #getProduces() <em>Produces</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProduces()
   * @generated
   * @ordered
   */
  protected EList<RequestMappingProduces> produces;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RequestMappingImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SoftGalleryLanguagePackage.Literals.REQUEST_MAPPING;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<RequestMappingValue> getValue()
  {
    if (value == null)
    {
      value = new EObjectContainmentEList<RequestMappingValue>(RequestMappingValue.class, this, SoftGalleryLanguagePackage.REQUEST_MAPPING__VALUE);
    }
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<RequestMappingMethod> getMethod()
  {
    if (method == null)
    {
      method = new EObjectContainmentEList<RequestMappingMethod>(RequestMappingMethod.class, this, SoftGalleryLanguagePackage.REQUEST_MAPPING__METHOD);
    }
    return method;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<RequestMappingProduces> getProduces()
  {
    if (produces == null)
    {
      produces = new EObjectContainmentEList<RequestMappingProduces>(RequestMappingProduces.class, this, SoftGalleryLanguagePackage.REQUEST_MAPPING__PRODUCES);
    }
    return produces;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__VALUE:
        return ((InternalEList<?>)getValue()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__METHOD:
        return ((InternalEList<?>)getMethod()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__PRODUCES:
        return ((InternalEList<?>)getProduces()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__VALUE:
        return getValue();
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__METHOD:
        return getMethod();
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__PRODUCES:
        return getProduces();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__VALUE:
        getValue().clear();
        getValue().addAll((Collection<? extends RequestMappingValue>)newValue);
        return;
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__METHOD:
        getMethod().clear();
        getMethod().addAll((Collection<? extends RequestMappingMethod>)newValue);
        return;
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__PRODUCES:
        getProduces().clear();
        getProduces().addAll((Collection<? extends RequestMappingProduces>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__VALUE:
        getValue().clear();
        return;
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__METHOD:
        getMethod().clear();
        return;
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__PRODUCES:
        getProduces().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__VALUE:
        return value != null && !value.isEmpty();
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__METHOD:
        return method != null && !method.isEmpty();
      case SoftGalleryLanguagePackage.REQUEST_MAPPING__PRODUCES:
        return produces != null && !produces.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //RequestMappingImpl
