/**
 * generated by Xtext 2.18.0
 */
package co.unal.mdd.photos.dsl.softGalleryLanguage.impl;

import co.unal.mdd.photos.dsl.softGalleryLanguage.ReactActions;
import co.unal.mdd.photos.dsl.softGalleryLanguage.ReactComponents;
import co.unal.mdd.photos.dsl.softGalleryLanguage.ReactConfiguration;
import co.unal.mdd.photos.dsl.softGalleryLanguage.ReactInfo;
import co.unal.mdd.photos.dsl.softGalleryLanguage.ReactLibraries;
import co.unal.mdd.photos.dsl.softGalleryLanguage.ReactSubModules;
import co.unal.mdd.photos.dsl.softGalleryLanguage.SoftGalleryLanguagePackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>React Sub Modules</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.ReactSubModulesImpl#getReactmodulesconf <em>Reactmodulesconf</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.ReactSubModulesImpl#getReactmodulescomp <em>Reactmodulescomp</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.ReactSubModulesImpl#getReactmodulesact <em>Reactmodulesact</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.ReactSubModulesImpl#getReactmoduleslib <em>Reactmoduleslib</em>}</li>
 *   <li>{@link co.unal.mdd.photos.dsl.softGalleryLanguage.impl.ReactSubModulesImpl#getReactmodulesinf <em>Reactmodulesinf</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ReactSubModulesImpl extends MinimalEObjectImpl.Container implements ReactSubModules
{
  /**
   * The cached value of the '{@link #getReactmodulesconf() <em>Reactmodulesconf</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReactmodulesconf()
   * @generated
   * @ordered
   */
  protected EList<ReactConfiguration> reactmodulesconf;

  /**
   * The cached value of the '{@link #getReactmodulescomp() <em>Reactmodulescomp</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReactmodulescomp()
   * @generated
   * @ordered
   */
  protected EList<ReactComponents> reactmodulescomp;

  /**
   * The cached value of the '{@link #getReactmodulesact() <em>Reactmodulesact</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReactmodulesact()
   * @generated
   * @ordered
   */
  protected EList<ReactActions> reactmodulesact;

  /**
   * The cached value of the '{@link #getReactmoduleslib() <em>Reactmoduleslib</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReactmoduleslib()
   * @generated
   * @ordered
   */
  protected EList<ReactLibraries> reactmoduleslib;

  /**
   * The cached value of the '{@link #getReactmodulesinf() <em>Reactmodulesinf</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReactmodulesinf()
   * @generated
   * @ordered
   */
  protected EList<ReactInfo> reactmodulesinf;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ReactSubModulesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SoftGalleryLanguagePackage.Literals.REACT_SUB_MODULES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ReactConfiguration> getReactmodulesconf()
  {
    if (reactmodulesconf == null)
    {
      reactmodulesconf = new EObjectContainmentEList<ReactConfiguration>(ReactConfiguration.class, this, SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESCONF);
    }
    return reactmodulesconf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ReactComponents> getReactmodulescomp()
  {
    if (reactmodulescomp == null)
    {
      reactmodulescomp = new EObjectContainmentEList<ReactComponents>(ReactComponents.class, this, SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESCOMP);
    }
    return reactmodulescomp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ReactActions> getReactmodulesact()
  {
    if (reactmodulesact == null)
    {
      reactmodulesact = new EObjectContainmentEList<ReactActions>(ReactActions.class, this, SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESACT);
    }
    return reactmodulesact;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ReactLibraries> getReactmoduleslib()
  {
    if (reactmoduleslib == null)
    {
      reactmoduleslib = new EObjectContainmentEList<ReactLibraries>(ReactLibraries.class, this, SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESLIB);
    }
    return reactmoduleslib;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ReactInfo> getReactmodulesinf()
  {
    if (reactmodulesinf == null)
    {
      reactmodulesinf = new EObjectContainmentEList<ReactInfo>(ReactInfo.class, this, SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESINF);
    }
    return reactmodulesinf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESCONF:
        return ((InternalEList<?>)getReactmodulesconf()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESCOMP:
        return ((InternalEList<?>)getReactmodulescomp()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESACT:
        return ((InternalEList<?>)getReactmodulesact()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESLIB:
        return ((InternalEList<?>)getReactmoduleslib()).basicRemove(otherEnd, msgs);
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESINF:
        return ((InternalEList<?>)getReactmodulesinf()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESCONF:
        return getReactmodulesconf();
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESCOMP:
        return getReactmodulescomp();
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESACT:
        return getReactmodulesact();
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESLIB:
        return getReactmoduleslib();
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESINF:
        return getReactmodulesinf();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESCONF:
        getReactmodulesconf().clear();
        getReactmodulesconf().addAll((Collection<? extends ReactConfiguration>)newValue);
        return;
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESCOMP:
        getReactmodulescomp().clear();
        getReactmodulescomp().addAll((Collection<? extends ReactComponents>)newValue);
        return;
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESACT:
        getReactmodulesact().clear();
        getReactmodulesact().addAll((Collection<? extends ReactActions>)newValue);
        return;
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESLIB:
        getReactmoduleslib().clear();
        getReactmoduleslib().addAll((Collection<? extends ReactLibraries>)newValue);
        return;
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESINF:
        getReactmodulesinf().clear();
        getReactmodulesinf().addAll((Collection<? extends ReactInfo>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESCONF:
        getReactmodulesconf().clear();
        return;
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESCOMP:
        getReactmodulescomp().clear();
        return;
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESACT:
        getReactmodulesact().clear();
        return;
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESLIB:
        getReactmoduleslib().clear();
        return;
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESINF:
        getReactmodulesinf().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESCONF:
        return reactmodulesconf != null && !reactmodulesconf.isEmpty();
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESCOMP:
        return reactmodulescomp != null && !reactmodulescomp.isEmpty();
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESACT:
        return reactmodulesact != null && !reactmodulesact.isEmpty();
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESLIB:
        return reactmoduleslib != null && !reactmoduleslib.isEmpty();
      case SoftGalleryLanguagePackage.REACT_SUB_MODULES__REACTMODULESINF:
        return reactmodulesinf != null && !reactmodulesinf.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ReactSubModulesImpl
