/*
 * generated by Xtext 2.17.1
 */
package co.unal.mdd.photos.dsl.generator

import co.unal.mdd.photos.dsl.softGalleryLanguage.Photo
import co.unal.mdd.photos.dsl.softGalleryLanguage.PresentationSegments
import com.google.inject.Inject
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.eclipse.xtext.naming.IQualifiedNameProvider
import co.unal.mdd.photos.dsl.softGalleryLanguage.OrderSpring

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class SoftGalleryLanguageGenerator extends AbstractGenerator {
	
    @Inject extension IQualifiedNameProvider
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {


		// Dominio -> Photo
        for (photo : resource.allContents.toIterable.filter(Photo)) {
        	
        	    
	        // Arquitectura -> PresentationSegments
	        for (content : resource.allContents.toIterable.filter(PresentationSegments)) {
	        	

	                // Tecnologia -> OrderSpring
			        for (order : resource.allContents.toIterable.filter(OrderSpring)) {

			            fsa.generateFile(
			                photo.fullyQualifiedName.toString("/") + ".java",
			                compile(photo, content, order))			        	
			        }

	        }
        }
	}
	
    def compile(Photo photo, PresentationSegments content, OrderSpring order) ''' 
    
    	// -------------------------
    	// «photo.fullyQualifiedName.toString()»
    	// «content.fullyQualifiedName.toString()»
    	// «order.fullyQualifiedName.toString()»
    	// -------------------------
    
        «IF photo.eContainer.fullyQualifiedName !== null»
            package «photo.eContainer.fullyQualifiedName»;
        «ENDIF»
        
        public interface «photo.name»«content.fullyQualifiedName» {
        	
        }
    '''

}