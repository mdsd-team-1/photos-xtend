System: {
	Domain SoftGallery: { 
		Entities: { 
			PhotoEntity: Photo
				idPhoto id
				namePhoto name
				urlPhoto url
				albumIdPhoto albumId
			AlbumEntity: Album
				idAlbum id
				nameAlbum name
				userIdAlbum userId
			UserEntity: User
				idUser id
				userNameUser userName
				firstNameUser firstName
				lastNameUser lastName
				profileDescriptionUser profileDescription
				passwordUser password
				emailUser email
		}
		Functionalities : {
			ProfileManagement:
				ViewProfilePhoto verFotoPerfil
				EditProfileInfo editarInformacionPerfil
			AppAccess:
				Login ingresar
				Register registrarse
			AlbumManagement: 
				CreateAlbum crearAlbum
				SelectAlbum seleccionarAlbum 
			PhotoActions:
				ViewAllPhotos verTodasLasFotos
				ViewExtendedPhoto verUnicaFoto
				LoadPhoto cargarFoto
			LandingActions:
				ViewCarousel verCarrusel
				PassPhoto pasarFoto
		}
		DomainExceptions : {
			PhotoException:
				PhotoNotFound PhotoNotFoundException
				PhotoUploadError PhotoUploadErrorException
				PhotoNotCreated PhotoNotCreatedException
				PhotoNotDeleted PhotoNotDeletedException
			AlbumException:
				AlbumNotFound AlbumNotFoundException
				PhotosFromAlbumNotFound PhotosFromAlbumNotFoundException
				AlbumHasNoPhotos AlbumHasNoPhotosException
				MissingParametersForNewAlbum MissingParametersForNewAlbumException
				UserIdIsNotNumber UserIdIsNotNumberException
				AlbumNotCreated AlbumNotCreatedException
			UserException: 
				UserNotFound UserNotFoundException
				AlbumsFromUserNotFound AlbumsFromUserNotFoundException
				UserHasNoAlbums UserHasNoAlbumsException
				UserHasNoPhotos UserHasNoPhotosException
				MissingParametersForNewUser MissingParametersForNewUserException
				UserNotCreated UserNotCreatedException
				AlbumNotCreatedForNewUser AlbumNotCreatedForNewUserException
				MissingParametersForEditUser MissingParametersForEditUserException
				WrongLoginInfo WrongLoginInfoException
				MissingParametersForLogin MissingParametersForLoginException
				UserIdIsNotNumber UserIdIsNotNumberException
				UserToEditDoesNotExist UserToEditDoesNotExistException
				UserNotEdited UserNotEditedException 
		}
	}
	Architecture: {
		Layers
			PresentationLayer
				PresentationSegments
					PresentationView SegmentoVista
					PresentationComponent SegmentoComponentes
					PresentationAction SegmentoAcciones
				SegmentStructure
					Directories softgalleryFrontend
						Directory nodeModules
							CommonFile nodeModulesFiles
						Directory public
							CommonFile publicFiles
						Directory src
							CommonFile appFiles
						Directory other
							CommonFile otherFiles
			BusinessLogicLayer
				BusinessLogicSegments
					ControllerSegment controller
						AmazonSegment amazon
						ExceptionSegment exception
					ModelSegment model
					RepositorySegment repository
					SecuritySegment config
					SpecificationSegment specification
						DefinedSearchCriteria criteria
				SegmentStructure
					Directories photosappback
						Directory main
							CommonFile mainFiles
						Directory resources
							CommonFile application
			DataPersistenceLayer
				DataPersistenceSegments
					PostgreSLQSegment SegmentoDatos
					AmazonS3Storage SegmentoImagenes
					
		LayersRelations
			AllowedToUse related 
				source PresentationLayer 
				target BusinessLogicLayer
			AllowedToUse related 
				source BusinessLogicLayer
				target PersistenceDataLayer
			
		ArchitectureComponents
			SystemComponents
				FrontEndComponent frontend
				BackEndComponent backend
				PersistenceDataComponent persistencedata
			Connectors
				REST protocol 
					source FrontEndComponent FrontEnd
					target BackEndComponent BackEnd
				PostgreSQLConnection protocol
					source BackEndComponent BackEnd
					target PersistenceDataComponent PersistenceData
				AmazonS3API protocol
					source BackEndComponent BackEnd
					target PersistenceDataComponent AmazonWebService
	}
	
	Technology name: {
		Spring SpringProject : {
			SpringBootApplication
				Configuration : { 
					EnableGlobalMethodSecurity AnnotationGlobalSecurity
					EnableAuthorizationServer AnnotationAuthorizationServer
					EnableResourceServer AnnotationResourseServer
					EnableWebSecurity AnnotationWebSecurity
				}
				SpringComponent : {
					OrderSpring HighestPrecedence
				}
				SpringRepositories : {
					SpringRepository AlbumRepository
					SpringRepository PhotoRepository
					SpringRepository UserRepository
				}
				RestController AlbumController : {
					Specification
						Predicate AlbumPredicate
						SearchCriteria AlbumSpecification
					Autowired
						AutowiredType AlbumRepository
					Autowired
						AutowiredType PhotoRepository
					RequestMapping
						RequestMappingType getAlbum
							GetMapping
					RequestMapping
						RequestMappingType getPhotosFromAlbum
							GetMapping
					RequestMapping
						RequestMappingType createAlbum
							PostMapping 
					ExceptionHandler handleException
						ExceptionProcess AlbumNotFoundException
						ExceptionProcess PhotosFromAlbumNotFoundException
						ExceptionProcess AlbumHasNoPhotosException
						ExceptionProcess MissingParametersForNewAlbumException
						ExceptionProcess UserIdIsNotNumberException
						ExceptionProcess AlbumNotCreatedException
				}
				RestController PhotoController : {
					Specification
						Predicate PhotoPredicate
						SearchCriteria PhotoSpecification
					Autowired
						AutowiredType PhotoRepository
					Autowired
						AutowiredType AmazonClient
					RequestMapping
						RequestPart file
						RequestMappingType uploadPhoto
							PostMapping 
					RequestMapping
						RequestPart url
						RequestMappingType deleteFile
							DeleteMapping 
					RequestMapping
						RequestMappingType getPhoto
							GetMapping 
					RequestMapping
						RequestMappingType findAll
							GetMapping 
					ExceptionHandler handleException
						ExceptionProcess PhotoNotFoundException
						ExceptionProcess PhotoUploadErrorException
						ExceptionProcess PhotoNotCreatedException
						ExceptionProcess PhotoNotDeletedException
				}
				RestController UserController : {
					Specification
						Predicate UserPredicate
						SearchCriteria UserSpecification
					Autowired
						AutowiredType UserRepository
					Autowired
						AutowiredType AlbumRepository
					Autowired
						AutowiredType PhotoRepository
					RequestMapping
						RequestMappingType getUserbyId
							GetMapping 
					RequestMapping
						RequestMappingType getPhotoFromUser
							GetMapping 
					RequestMapping
						RequestMappingType loginUser
							PostMapping 
					RequestMapping
						RequestMappingType createUser
							PostMapping
					RequestMapping
						RequestMappingType editUser
							PostMapping
					ExceptionHandler handleException
						ExceptionProcess UserNotFoundException
						ExceptionProcess AlbumsFromUserNotFoundException
						ExceptionProcess UserHasNoAlbumsException
						ExceptionProcess UserHasNoPhotosException
						ExceptionProcess MissingParametersForNewUserException
						ExceptionProcess UserNotCreatedException
						ExceptionProcess AlbumNotCreatedForNewUserException
						ExceptionProcess MissingParametersForEditUserException
						ExceptionProcess WrongLoginInfoException
						ExceptionProcess MissingParametersForLoginException
						ExceptionProcess UserIdIsNotNumberException
						ExceptionProcess UserToEditDoesNotExistException
						ExceptionProcess UserNotEditedException
				}
				SpringEntity Album : {
					SpringTable album
						SpringTableId
							GeneratedValue Id_Album
						Column name
						Column user_id
				}
				SpringEntity Photo : {
					SpringTable photo
						SpringTableId 
							GeneratedValue Id_Photo
						Column name
						Column url 
						Column album_id
				}
				SpringEntity User : {
					SpringTable user
						SpringTableId
							GeneratedValue Id_User
						Column user_name
						Column first_name
						Column last_name
					    Column profile_description
						Column password
						Column email
					NameNativeQuery	findLoginUser
				}
		}
		React ReactJS : {
			ReactModules: {
				ReactConfiguration : {
					DependenciesStruct
						DependencyType Design
							PackageName antd
							PackageVersion version031602
						DependencyType Request
							PackageName axios
							PackageVersion version001800
						DependencyType Querys
							PackageName querystring
							PackageVersion version060600
						DependencyType ReactImplementation
							PackageName react
							PackageVersion version160806
						DependencyType ReactDom
							PackageName reactdom
							PackageVersion version160806
						DependencyType RouterDOM
							PackageName reactrouterdom
							PackageVersion version050000
					ReactDOMConfigurations Configurations
						RoutingConf routesJS
						ServiceWorker serviceWorkerJS
						HTMLStructure indexHTML
						Manifest manifestJSON
						RepositoriesConf gitignore
				}
				ReactComponents : {
					LogicComponents componentesLogicos
						RoutingComponents componentRouting
							AppComponent AppJS
								import ReactComponent
								Constructor
									State 
										loading String
										others String
								ComponentDidMount
									FunctionStructure
								anotherFunctions
									FunctionStructure
								Render
									RenderContent 								
								Props 
									super String
							IndexComponent indexJS
					UIComponents componentesVisuales
						ViewComponent home
							import ReactComponent
							Constructor
								State 
									loading String
									others String
							next
								FunctionStructure
							previous
								FunctionStructure
							Render
								RenderContent 								
							Props 
								super String
						ViewComponent upload
							import ReactComponent
							Constructor
								State 
									loading String
									others String
							ComponentDidMount
								FunctionStructure
							changeAlbum
								FunctionStructure
							Render
								RenderContent 								
							Props 
								super String
						ViewComponent gallery
							import ReactComponent
							Constructor
								State 
									loading String
									others String
							Render
								RenderContent 								
							Props 
								super String
						ViewComponent usersManagement
							import ReactComponent
							Constructor
								State 
									loading String
									others String
							ComponentDidMount
								FunctionStructure
							openEditModal
								FunctionStructure
							Render
								RenderContent 								
							Props 
								super String
						ViewComponent categoryManagement
							Constructor
								State 
									loading String
									others String
							ComponentDidMount
								FunctionStructure
							toggleCardImageModal
								FunctionStructure
							Render
								RenderContent 								
							Props 
								super String
						Subcomponents FieldTitle
							Constructor
								State 
									loading String
									others String
								Render
									RenderContent 								
								Props 
									super String
						Subcomponents MainLoading
							Constructor
									State 
										loading String
										others String	
								Render
									RenderContent 								
								Props 
									super String
					Style categoryManagement
						prop_name initial_div propsContent
					Style authentication
						prop_name auth_div propsContent
					Style gallery
						prop_name initial_div propsContent
					Style home
						prop_name initial_home_div propsContent
					Style upload
						prop_name upload_content propsContent	
					Style general
						prop_name general_div propsContent
					Style users
						prop_name users_row1 propsContent
					Style App
						prop_name app propsContent
					Style index
						prop_name body propsContent
						
				}		 						
				ReactActions: { 
					ServicesRelations
						ServiceType loginServices 
							functions loginfunctions
								return
									propName propNames propDescription 
							relacionadoCon AuxWrapper
						ServiceType registerServices 
							functions registerfunctions
								return
									propName propNames propDescription 
							relacionadoCon Wrapper
						ServiceType categorysServices
							functions categorysfunctions
								return
									propName propNames propDescription 
							relacionadoCon Wrapper
						ServiceType visualServices 
							functions registerfunctions
								return
									propName propNames propDescription 
							relacionadoCon Wrapper
						ServiceType uploadServices
							functions uploadfunctions
								return
									propName propNames propDescription 
							relacionadoCon Wrapper
						ServiceType generalServices 
							functions generalfunctions
								return
									propName propNames propDescription 
							relacionadoCon Wrapper
				}	
				ReactLibraries: {
					 ReactDesign antd
					 	LibraryContent
					 ReactRouting reactrouter
					 	LibraryContent
					 ComponentManagement component
					 	LibraryContent
					 StoreManagement reduxthunk
					 	LibraryContent
					 ReactDeployment reactdom
					 	LibraryContent
					 ConfigurationLibrary npm
					 	LibraryContent
					 
				}
				ReactInformation : {
					ReactReadme readme
						InformationContent
				}
			}
		}	 
		
		PostgreSQL postgreSQL : {
			Database
				Schema public
					Table_p album : {
						ForeignKey
							ForeingKeyName keyUsers
							ForeignKeyRef  
								RefTable_p users
						ForeignKey
							ForeingKeyName keyAlbums
							ForeignKeyRef  
								RefTable_p albums
						Column id
							DatatypeDB integer
							Constraint primaryKey
						Column name
							DatatypeDB characterVarying
						Column user_id
							DatatypeDB integer
							Constraint foreignKey
						Row Cars
					}
					Table_p photo : {
						ForeignKey
							ForeingKeyName keyAlbums
							ForeignKeyRef  
								RefTable_p albums
						ForeignKey
							ForeingKeyName keyUsers
							ForeignKeyRef  
								RefTable_p users
						Column id
							DatatypeDB integer
							Constraint primaryKey
						Column url
							DatatypeDB characterVarying
						Column name
							DatatypeDB characterVarying
						Column album_id
							DatatypeDB integer
							Constraint foreignKey
						Row Ferrari
					}
					Table_p user : {
						ForeignKey
							ForeingKeyName keyUsers
							ForeignKeyRef  
								RefTable_p users
						Column first_name
							DatatypeDB characterVarying
						Column last_name
							DatatypeDB characterVarying
						Column id
							DatatypeDB integer
							Constraint primaKey
						Column profile_description
							DatatypeDB characterVarying
						Column user_name
							DatatypeDB characterVarying
						Column password
							DatatypeDB characterVarying
						Column email
							DatatypeDB characterVarying
						Row Pedro
					}
					Function nextval
				PostgresUser postgres : {
					Privilege admin
				}
		}
		
		AmazonWebServices ExampleAmazon: {
			AmazonSimpleStorageService : {
				Bucket photosStorage
					BucketAccess
						PublicAccess PublicAccessPhotosBucket
					AmazonFile
						Metadata Ferrari
						Metadata CarroRojo
			}
			AmazonElasticComputeCloud Ec2PhotosInstance
		}
	}
}